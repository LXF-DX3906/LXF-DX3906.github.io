<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>考研经验贴—21一战软件工程跨考北大软微集成电通</title>
    <url>/%E8%80%83%E7%A0%94%E7%BB%8F%E9%AA%8C%E8%B4%B4%E2%80%9421%E4%B8%80%E6%88%98%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E8%B7%A8%E8%80%83%E5%8C%97%E5%A4%A7%E8%BD%AF%E5%BE%AE%E9%9B%86%E6%88%90%E7%94%B5%E9%80%9A/</url>
    <content><![CDATA[<p>2021年北大软微集成电通上岸，初试总分380，英一66、政治66、数一125、专业课123；复试90。</p>
<p>记录一下自己的考研过程还有感悟，有干货也有碎碎念，一为纪念，二为栽树，每人境遇各不相同，仅供参考。</p>
<a id="more"></a>

<hr>
<h1 id="考研动机"><a href="#考研动机" class="headerlink" title="考研动机"></a>考研动机</h1><p>2017年，颤颤巍巍从河南高考杀出，有幸考入同济软院，无奈校强我渣，大学四年欲求进步而不得，寻寻觅觅，反复进退。可能和性格与经历有关吧，虽常持一颗上进心，但是也比较贪玩，在高中时学校单方面几乎杜绝了所有的娱乐活动，所以只能以读文学作品与学习为乐，因此高考成绩还算可以。但到了大学，经常平衡不好学习与娱乐的关系，虽然这点在考研过程中得到了很大的改善，但还是不可避免的对之前的学习造成了影响，还有就是个人性格不太能适应软院非常多课程的自由组队模式，最终导致绩点不上不下（4.36/5），处于保研边缘的尴尬局面。</p>
<p>自大二上概率论拿到了一个及格之后（至今我也不知道为什么只拿了及格，考试题目不算难，当时是很有信心拿优的），自知保外校无望，从此便对绩点没有了很强烈的追求，即使后来肝项目也只是觉得要把课程学好和组队的责任心在驱使罢了。但我又想去一个更高的平台读研，所以此时萌生了考研的想法。</p>
<p>直到大三下学期，本来因为计划考研，就在大三上把专业选修课修满了，希望大三下能轻松一些，准备考研，不过我还是低估了软院项目的数量之多，寥寥几门必修课，每一门课都是一个大项目，经常肝到后半夜，无奈直到暑假才落得空闲，开始正式复习。因为大三下疫情一直在家中上课，直到七月中旬才申请到了返校的机会，所以正式的考研复习大概从七月中旬开始，之前只是背背英语单词，搜集了一些资料，了解了一些学校。</p>
<hr>
<h1 id="备考经历"><a href="#备考经历" class="headerlink" title="备考经历"></a>备考经历</h1><p>有关于各个科目的学习方法在很多经验贴中都写得很详细了，所以对于这些我就稍微提一些吧，主要方面还是记录一下我的资讯搜集与信息整理的方法以及考研过程中我的个人体验。</p>
<h2 id="时间线与作息"><a href="#时间线与作息" class="headerlink" title="时间线与作息"></a>时间线与作息</h2><p>3月-7月12，由于大三的课程多是组队项目，出于个人性格的原因，我觉得组队就要对整个团队负责，所以实在翘不了，以至备考时间很少，而且在家效率也不是很高，所以只完成了一些预备性的任务，如考研阶段的整体规划，资料的收集与购买，学校的选择等等，考试科目只复习了高数的前四五章左右，不过单词还是在背的。</p>
<blockquote>
<p>7月12-7月26，高数，线代，两个都是直接强化</p>
</blockquote>
<blockquote>
<p>7月27-8月3，数据结构（之前准备考复旦软件，集成电路是8月4号临时改的，具体原因会写在后面关于择校里，而且复旦软件考数学二，就没准备概率论）</p>
</blockquote>
<blockquote>
<p>8月4-9月中旬，数电一轮，概率论一轮，张宇十八讲（高数二轮），英语真题</p>
</blockquote>
<blockquote>
<p>9月中旬-11月底，数电二轮，政治一遍，数学真题+模拟，英语真题，英语作文，数电真题</p>
</blockquote>
<blockquote>
<p>12月-初试开始，政治背诵，肖八肖四，数学真题+模拟，英语真题+作文</p>
</blockquote>
<p>英语单词的背诵与阅读一些英文报刊的文章是贯穿整个考研时间线的</p>
<p>我的作息是每天7点多点起床，晚上到10点图书馆闭馆，中午一般在图书馆休息一两个小时，有时候也会回宿舍休息。当然上面的这种作息我也执行的不是很严格，因为觉得软微集成电通分数线不高，偶尔也有划水行为(╯‵□′)╯︵┻━┻</p>
<h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>信息收集分为四个部分：择校、初试资料、考研时间节点、复试资料。</p>
<p><strong>择校：</strong>我个人的方法是先选定自己想考的学校与专业，然后直接在该学校学院的官网上查看历年分数线和录取人数，这样一个一个选下来，觉得自己跳一跳能碰得着的，就直接在qq里搜学校+专业考研群，找活跃度比较高，文件资料比较多的群，加进去一般就可以在群里找到更详细的资料，还可以咨询群友们一些问题，大家都很友善的，只要问题不是伸手型的，很多小伙伴都乐于解答的。同时还有一些qq上直接搜索搜不到的干货群，在群友们的推荐下也是有机会加进去的。</p>
<p><strong>初试资料：</strong>关于公共课，知乎上很多大佬们已经写的很清楚了，根据自己的公共课科目，随便找几篇点赞数比较多，质量上乘的回答，自己综合整理一下，公共课资料就差不多了。至于专业课，如果自己考的专业人比较多，那么知乎等一些公共论坛上就能找到该专业的经验贴，如果自己考的专业人比较少，结合加的群找一些资料经验贴也是可以的，另外，淘宝和闲鱼上也会有很多学长学姐们卖资料笔记，筛选一下，问清楚一些问题，觉得靠谱的也可以买。当然，如果能找到本专业的上岸的学长学姐就更nice了。</p>
<p><strong>考研时间节点：</strong>所有有关时间节点的信息都来源于两个网站，<a href="https://yz.chsi.com.cn" target="_blank" rel="noopener">研招网</a>和报考学校的研究生招生网。既然考研，那么就要对整个考研的历程有一个整体的了解，几月份需要准备什么手续最好提前了解一下，免得到时候手忙脚乱，我当时是自己整理了一份考研各时间节点的注意事项，这里放上链接(🔗<a href="http://note.youdao.com/s/7qVa8v21" target="_blank" rel="noopener">考研注意事项(北大软微)</a>)，可以参考一下。</p>
<p><strong>复试资料：</strong>这个不建议初试前就准备，除非你真的时间充裕。具体渠道和初试的差不多。</p>
<h2 id="择校与为什么放弃复旦选择软微"><a href="#择校与为什么放弃复旦选择软微" class="headerlink" title="择校与为什么放弃复旦选择软微"></a>择校与为什么放弃复旦选择软微</h2><p>择校可谓是重中之重，甚至不亚于初复试的准备。这点在今年的各学校的分数分布中有很明显的体现，报考的不同学校水平没相差太多，320飘飘欲仙，400分辗转反侧的现象比比皆是，因此择校一定要慎重。</p>
<p>我当时是想要找一个比本科学校高一点的学校，同时尽量好考一些，我觉得学校的整体大环境对我而言更重要，因此对报考学校专业的专业排名倒不是很在意。于是，同在上海，并且是高中时的白月光的复旦就成了我的首选，找了找信息发现20年复旦软院分数线出奇的低，并且只有数二英二，专业课961还比408少了一本书，不谙考研水深的我还窃以为找到了漏可以捡。直到后来加了越来越多的群，才发现复旦软院的热度高得可怕，直到八月份复旦软院缩招的消息放出，我察觉到了不妙的信号，但这个时候我数据结构已经复习完了一轮，并且我还是对自己比较有信心的，觉得还可以刚。但是由于即将到来的一些事情，我选择了换校。</p>
<p>七月份，各学校保研夏令营陆续开始，面临着一段磕磕绊绊了漫长时间的感情，我心绪复杂，本科异地，研究生阶段该怎么走，我们还没有明确的答案。在此之前，我们之间的感情处在一个非常微妙的状态，我心中的未来里是有她的，我想她心中的未来里也是有我的，但是我们却并没有一起去规划过我们共同的未来，甚至于我们都没有谈过双向奔赴的话题，但仿佛一切又都是心照不宣的。</p>
<p>她很努力也很优秀，拿到了很多学校的夏令营资格，也拿到了很多学校的优秀营员，无奈没有复旦，最后选择了人大的offer。复软的热度、缩招的消息、以及她的人大offer，本科异地了那么久，不想研究生阶段再异地，因此我决定换一个北京的学校。</p>
<p>考虑了几天，做了几天的调查，我觉得软微的集成电通方向是一个不错的选择，软微的电子信专业分为很多方向，金科不感兴趣，计算机难度高了点，20年集电分数线低的离谱（今年的成绩出来后证明捡漏思维不可取，集电复试线涨了60分，比计算机复试线还高），而且只有一门专业课，时间够用，这让我有点心动，再加上集成电路本就是高考报志愿时我非常想学的专业，国家在八月份又陆续发布了很多促进集成电路产业发展的公告以及促进软件与集成电路协同发展的公告，虽然软件好找工作工资高，但是我觉得我还是有资格发挥一下我所剩不多的一点理想主义情怀的，因此，在种种原因的推动下，我决定跨考软微的集成电路。</p>
<p>一切都仿佛缘分注定，让我们走到了一起。</p>
<h2 id="各科安排"><a href="#各科安排" class="headerlink" title="各科安排"></a>各科安排</h2><h3 id="数学一"><a href="#数学一" class="headerlink" title="数学一"></a>数学一</h3><p>因为本来要考复旦软院，刚开始的时候是按照数二准备的，后来改了数一，因此换了波资料</p>
<ul>
<li><strong>高数</strong>：高数主力资料用的是<strong>李范全书</strong>和<strong>张宇十八讲</strong>，题是<strong>张宇的真题➕李六➕张八➕张四</strong>，网课是<strong>武忠祥</strong>老师的<strong>强化班</strong>和<strong>张宇</strong>老师的<strong>十八讲网课</strong>。因为本科高数有点基础，虽然到考研的时候忘得差不多了，但是再学的话是能很快想起来的，所以我高数只分了两轮。<ul>
<li>第一轮直接从强化开始，第一轮用的资料是<strong>武忠祥老师的强化班网课➕李范全书</strong>，以章为单位，听完网课会看一遍这一章的全书，由于时间原因，只做了例题，课后习题没有做。差不多保持一天一章的速度，两周左右一轮结束。</li>
<li>第二轮是<strong>张宇老师的十八讲网课➕十八讲</strong>，十八讲上的题偏难，但是很有价值，数学想考高分的话值得一看，由于第一轮的基础，十八讲中已经掌握的知识点可以很快跳过，而且同样基本只做例题，习题只是有选择地做几道，基本可以维持每天一讲的进度。</li>
<li>高数第二轮结束的时候已经9月中旬了，本来买了660，但是没有时间做，抱着想要尽快检验自己水平的心态，开始做真题，从00年开始，维持每天一张的进度，真题做完后，又做了<strong>李林六套➕张宇八套</strong>（张八太难，以至于只做了前四套）<strong>➕张宇最后四套卷</strong>，临近初试又做了近两年的真题保持手感。</li>
</ul>
</li>
</ul>
<p><strong>线代</strong>：因为大一线代拿了优，感觉自己基础还不错，因此线代只看了一轮，资料是<strong>李永乐的线性代数辅导讲义+李永乐的强化班网课</strong>，线代内容不算多，大概一周多点就能过完一轮，因此从七月底过完一轮后到九月中旬，线代看的很少，再加上一轮时做题手感还不错，因此平时只是偶尔翻翻笔记。但是最后结果证明我还是高估了自己的线代水平，数学失分最多的就是在线代上，这个经历就当作教训吧。</p>
<p><strong>概率论</strong>：概率论概率论资料用的是<strong>曹显兵的辅导讲义</strong>，没看网课，也是只看了一轮，但是后来做真题的时候在概率论上花的功夫比较多，因此最后还不错。</p>
<p>总的来讲，数学是最花时间的科目，同时也非常考验理解能力，我自认不是天赋型选手，思维也较慢，经常要花很久去理解透一个知识点，但是每吃透一个知识点后我会觉得非常有成就感，这也是能支撑我一个知识点一个知识点慢慢啃下去的动力。对于每个知识点，在靠全书和网课理解不透的时候，可以百度或者google一下有关这些知识点的文章，特别是线代和概率论，考研书里的介绍有很大的局限性，有时候看一看一些大佬对这些知识点的理解，会产生降维打击的效果。我做题不算多，但是尽量每一题都力求有价值，对自己对知识的掌握程度要有一个清晰的把握，不要做无用功。</p>
<p>正式考试的时候在考场上我的数学发挥是很不尽人意的，可能是比较着急做完选择题和填空题的原因，刚开始做题的时候没有状态，很多题都卡壳了，然后一道一道的跳，最后又蒙了两道选择，空了一道填空。大概60分钟做完客观题，简答题也同样如此，跳了很多题，不过一遍做完之后，回过头做第二遍的时候，很多题的思路就来了，虽然最终基本都答完了，但是不可避免的对心态造成了一点影响，只考到这个分数也算情理之中。</p>
<p>还有一点就是要注重数学解题步骤的规范，今年我的数学成绩要比我预估的低，就是因为大题扣了很多步骤分，第一题最后五分钟改错了一个正负号，可能是因为步骤比较简略，那一问直接没有分，概率论最后一题的答案全对最后还扣了两分，北京地区的公共课改卷比较严格，所以一定要重视步骤的规范性。</p>
<h3 id="英语一"><a href="#英语一" class="headerlink" title="英语一"></a>英语一</h3><p>和数学一样，中途从英语二换成了英语一，之前四六级裸考四级549，六级486，分数不高，但是有一点基础，我对英语没有很高的预期，不拉分就行。</p>
<p>资料只用了<strong>张剑黄皮书</strong></p>
<p>单词是英语的重中之重，单词的背诵是从四月份就开始了的，大概保持每天两百的速度（新词一百复习一百），没有买单词书，用的扇贝单词app，我是没办法做到抽空就背的，感觉没有效率。因此背单词我一般会抽一段整段的时间，早上30分钟，晚上30分钟，考研大纲词汇一共只有5k多点，在整个考研历程里是能过很多遍的，第一遍不需要记得多么牢固，留个熟悉感就行，大概过了两轮后，我开始只背核心词汇，大概背了三轮核心词汇，然后背做真题中总结的词汇，就这样一轮轮下来，虽然到最后也没把5k多单词全部掌握，但是差不多已经够用了。</p>
<p>英语真题大概从八月份开始做，做的不多，每天一至两篇阅读，训练自己的语感，最后错了四个，也算是预期之内。至于完形，在做了几篇零几年的真题后我选择了放弃，难度高分值低，性价比不高，我只背了一些红花绿叶词之类的东西，预期是最后能拿个5分就可以了，不过其实近几年的英语完型开始变得简单了（21年的也不难，我最后拿了7分，差强人意），但是总的来说完形不需要花太多时间，把近十年的真题里的做完练练手就差不多了。新题型比较简单，我只做了真题，不过我最后新题型选反了两个选项，直接扣了四分(&gt;﹏&lt;)。英语翻译看得更少，只做了几道真题。</p>
<p>英语作文我是跟的刘晓艳，在十二月份花了几天看了几节她的作文课，最后自己整理出了一个框架（文末我会放出来供参考），把这个框架背一背，最后小作为6.5大作文11，比平均分高点。</p>
<p>北京地区英语主观题压分比较严重，主观题拉不开差距，所以我从一开始就把主要的时间花在了客观题上，最后客观题得分也算是符合预期。而且据说北京地区英语作文对模版很排斥，所以我是跟着刘晓艳总结了一个自己的框架，最后用框架来写，在考场上还是比较快的。</p>
<h3 id="政治"><a href="#政治" class="headerlink" title="政治"></a>政治</h3><p>政治从9月中旬开始，资料用的是<strong>肖老的知识点精讲精练➕1000题➕徐涛的强化班网课（个人觉得可可以直接从强化开始）➕徐涛的背诵手册➕肖四➕肖八</strong>。第一遍的时候是听徐涛老师的网课，看肖老的知识点精讲精练，1000题也跟着做，只做选择。</p>
<p>到了十一月份开始有选择性地背徐涛老师的背诵手册，因为内容很多，所以只是挑徐涛老师标出的重点去背，我把背过的知识点整理到了notability上，最后打印出来背诵（这个也会放到文末链接里）。</p>
<p>后来又买了一本新的1000题，把第一遍错过的题标注起来，第二遍只做错题，后来发现第二遍很多错误和第一遍犯的一模一样，于是我把错的原因还有没掌握的知识点写到题的旁边，没事时就看一看。</p>
<p>和英语的思路差不多，北京地区政治主观题也压分，只要都认真学了基本拉不开分数。所以政治主观题我只背了背诵手册中很少的重点部分和肖四，肖四是跟着卡子姐（知乎、公众号或者bilibili搜空卡空卡空空卡）（因为考研受了卡子姐的帮助，所以单方免费帮忙打波广告:D）整理出来的简化版答案背诵的，逻辑性和结构性都很强，可以参考。政治客观题是得分关键，1000题，肖四肖八值得反复去做，平时还可以用小程序刷一刷选择题（我用的是小白考研政治），我做肖八的时候选择题分数一套比一套高，肖四最终能稳定在40分往上，自我感觉还不错。但是没想到考试的时候选择题不尽人意，只拿了35分。</p>
<h3 id="专业课"><a href="#专业课" class="headerlink" title="专业课"></a>专业课</h3><p>软微集成电通方向的专业课只有一门数电，参考资料用了<strong>康华光的第五版电子技术基础-数字部分</strong>和<strong>历年真题</strong>（这些软微集电考研群里都有），还在闲鱼上买了一份学长自己整理的资料包，里面有一个复习大纲也很有用。网课看的是<strong>mooc上华科的数字电路</strong>。因为是跨考，没有数电的基础，所以在专业课上花的时间相对多一点。</p>
<p>20年及以前，集电的专业课考试范围是没有涵盖整本数字电路的书的，只有重点的几章，其中时序电路是重中之重，因此我复习的时候是按照真题的重点涵盖范围来复习的，数电的书过了两遍，第一遍看网课➕看书和做习题，第一遍过完之后，做了几年真题，对出题风格有了部分了解，第二遍开始根据出题风格有选择地做书上的习题。之后又根据学长整理的复习大纲自己从头整理了一份自己比较陌生的知识点的总结，把重点放在了背诵概念和时序电路的设计上。</p>
<p>21年的考题相比此前的十几年变化很大，之前一直觉得不会考的verilog也考了，我只在第一轮的时候写过verilog的代码，后来笃定不会考代码就没怎么看，没想到今年的风格变化那么大，很多从没考过的东西都被搬到了试卷上。今年考题知识点涉及非常广泛，因此以后的软微集电专业课，整本书都是重点了，不能再以真题为导向，要以课后习题为导向，所有的课后习题都有可能被拿来出题。</p>
<p>专业课是在27号的最后一场，本来考完三门公共课感觉还可以，没有发挥失常，可是考完专业课之后，心情变得非常忐忑，一度以为自己过不了线，这种状态一直维持到初试出分，可能今年专业课风格变化太大，老师给分比较好，所以最终结果还不错，算是不幸中的万幸了。</p>
<h3 id="初试小结"><a href="#初试小结" class="headerlink" title="初试小结"></a>初试小结</h3><p>回顾整个初试备考历程，不算太长，虽然每天坐在图书馆里，虽然也有挫折，但是感受上也不算太辛苦，因为我并没有给自己定太高的目标，对于分数的态度也是够用就行，高点更好，这会在很大程度上缓解自身的压力。五个半月的准备时间，期间还抽时间写了一个国创项目的小程序，学了一些手机摄影的知识，其实开始两个月的时候是最高效的，后面对自己掌握的知识有了一个清楚的把握了，觉得分数差不多够用了，虽然当时也是每天坐在图书馆里，很多时间也在学习，但是比前两个月少了些总结和思考，所以后来的效率其实并不算很高，可能这就是我和一些高分大佬的差距吧。</p>
<h2 id="复试"><a href="#复试" class="headerlink" title="复试"></a>复试</h2><p>初试成绩刚出来的时候，看到自己总分380，一度以为已经稳了，因为20年的复试线只有300，后来看到学院总排名353（软微按照整个电子信息的大类排名，没有各方向的详细排名），感觉有点低，但是想着可能是金科和计算机的高分比较多，没太在意。后来私下同学们开始统计分数排名，结果发现去年能在集电排十几名的380今年排到了50左右，而如果不扩招可能只会招60多或70多人，我感觉不太稳了。直至后来复试线出来：360，让我重新意识到了复试的重要性。</p>
<p>今年初试成绩出来的比较晚，软微的复试时间安排的也比较紧凑，从2月26号成绩出来，到3月22号开始复试，中间只隔了一个月不到。寒假里复试准备的不太多，做毕设也花了点时间，而且觉得不会复试那么早，因此最后留给复试的时间只有不到一个月了，时间还是比较紧张的。</p>
<p>软微集电的复试分为三个部分：英语自我介绍和问答，专业课抽题和开放式问答。至于具体内容，因为涉及保密协议，不方便透露太多。不过今年的复试非常考验同学们的平时积累，对同学们的日常知识面的涉猎范围有一定要求，这一点无疑加大了以后集电复试的难度。但是老师复试给分都还算可以。最终我复试得了90分，复试分数把我的总排名从初试的353提到了203，虽然没排除一些初试排名在353之前但是没进复试的，但是总体而言还是将我的排名往上提了很多的。</p>
<p>PS：附上一些复试简历里的个人情况介绍：四级549，六级486，本科期间也参加过一些竞赛，数模国赛和美赛，成绩一般，只有省二和S，但复试中只算刚刚能拿得出手的水平。大二上申请了一个国创，其余就是一些专业课程中的项目了，例如软工课设等，有完成度比较高的项目也可以在复试中稍微提一下。</p>
<h1 id="个人感悟以及一些碎碎念"><a href="#个人感悟以及一些碎碎念" class="headerlink" title="个人感悟以及一些碎碎念"></a>个人感悟以及一些碎碎念</h1><h2 id="关于心态与负面情绪"><a href="#关于心态与负面情绪" class="headerlink" title="关于心态与负面情绪"></a>关于心态与负面情绪</h2><p>如何调整心态是考研过程中所不得不面对的一个难题，外界的干扰，做题时遇到的困难，都会对心态造成很大的影响。而且越临近考试，这种情况越为明显，每个人都不例外，只是或多或少而已。于我而言，我在高中时就已经形成了一个较为完善的方法论来面对这些问题，因此这些并没有对我造成太大影响。而每个人的情况各不相同，人生态度不同，因此适用于每个人的方法也各不相同，我就大概讲一下我一些常用的调整方法，仅供参考。</p>
<ul>
<li>找一些<strong>简单</strong>但可以<strong>转移注意力</strong>的<strong>有益</strong>的事情去做：这里有三个关键点，<strong>简单</strong>说明可执行性强，<strong>转移注意力</strong>可以让我暂时摆脱负面情绪，<strong>有益</strong>可以让我避免再次产生懊恼情绪，具体措施如练字、背单词等。（适用于轻微的负面情绪）</li>
<li>把当下的心情写下来，在写的过程中仔细剖析产生负面情绪的原因，分析使人冷静，关于这个方法，还有一个很有意思的应用，高考、考研初试的前一个星期我都会写日记，一可以平息自己的心境，二可以留一个记录，不难操作，但是会非常有成就感。（适用于更重一些的负面情绪）</li>
<li>将自己所面临的问题放到一个更广的时间或者空间上，例如设想一下，十年后你再回头看现在的自己，你会感觉到当前所面临的一切问题都是小问题了。</li>
<li>如果所有上面的方法都没用，那么所有东西都先放一放，去睡一觉(╯‵□′)╯︵┻━┻。</li>
</ul>
<h2 id="关于我报的一个考研机构"><a href="#关于我报的一个考研机构" class="headerlink" title="关于我报的一个考研机构"></a>关于我报的一个考研机构</h2><p>这一段有点负面，可以直接跳过，只是有些事情我觉得不吐不快，也算是为后来者避避坑吧，毕竟谁的钱都不是大风刮来的，少花点冤枉钱。</p>
<p>报不报辅导班因人而异，我自己是觉得我有收集资料，然后独立学习的能力的，因此没有报过考研规划之类的辅导班的。只是由于是跨考，为了图一个心安，所以我报了一个专业课半程班（辅导机构是苏世学社，几乎垄断了软微的考研），花了三千大洋，我本以为一分钱一分货，同时能对我的专业课学习有所帮助，事实证明我对资本一无所知，宣传做得很好，就会让人以为服务也会很好。报了班之后，没有很全面的资料包，只有一份学长的笔记是有点价值的资料（这还是我找学长要的，不要的话应该不会给我），最后印刷的真题和广为流传的真题没有任何区别，这套资料用了不知道几年了，很多错漏的答案也没有纠正过，打了个logo就拿来卖钱了。没有任何课程安排，只是录了一些网课传到了荔枝微课上，视频内容是一些每章教材的讲解以及真题，更新也不定期，更新了也没有通知，讲的也比较凌乱，还不如自己看书和看答案，因此我看了几节觉得浪费时间就不看了，群里答疑刚开始还比较活跃，后来问一个问题半天没人回复，我也就不问问题了。以上就是半程班的所有内容，也不能说全然无价值，但是我觉得最多值500吧，1000都是溢价了。</p>
<p>平心而论，苏世的公众号做的还是不错的，公布了很多免费的信息和资讯，还开了一些免费直播，对很多同学有一定的帮助，同时他们也靠这些吸引了很多同学报他们的班，这是一个双向互利的过程。但是报了班之后就是另一副样子了，管理太差，把人拉进来就基本不管了，吃相确实有点难看。其实这个时候我还只是觉得有点亏，但是就当是花了一点冤枉钱吧，问题不大，毕竟学长学姐们讲话还是很好听的，直到后来又看到了苏世对一些问题的做法，让我对这个机构有了很负面的看法。</p>
<p>负面看法源于我看到了知乎上的苏世与一些同学的对峙，苏世没有用心做好辅导班是我亲身经历过的，所以我觉得报班同学吐吐槽也是正常的，但是苏世对于这些同学没有选择道歉，也没有说过自己会如何改善，反倒是对这些同学进行举报、私信警告，令人匪夷所思，一个诺大的辅导机构，竟然会做出这种事情。（现在这些问题和回答在知乎上还有，感兴趣可以搜索）</p>
<p>除此之外，对于聘请辅导老师的事情，他们的做法更令人无语，今年软微的总成绩第一在集成电通方向，是一位很厉害的学姐11（11yyds），苏世和11之前谈过一些聘请和讲课的事情，但是11不想那么早就讲课，所以还没谈妥，协议也没签，可是对于来询问的一些学弟学妹，苏世已经开始拿11来做宣传，并且承诺会给报班的同学发11的笔记，同时还让11不要把自己的资料外传。首先没有征得本人同意就做宣传，再者默认把11的资料作为机构财产处理，这种做法让我对这个机构不再抱有任何好感。</p>
<h2 id="关于人际关系处理"><a href="#关于人际关系处理" class="headerlink" title="关于人际关系处理"></a>关于人际关系处理</h2><p>考研过程中很多同学选择与世隔绝，两耳不闻窗外事，对于平时社交比较多，还喜欢出去浪的同学，可能这种做法确实有其必要性吧。但是我觉得于我而言顺其自然就好，因为平时我的社交圈就不算大，太过自闭反倒可能催生更多负面情绪，事实证明也是如此，有时候水水群，刷刷朋友圈也不失为一种消遣，平时和舍友也会谈很多考研的事情，舍友也给了我很大的帮助，同时也非常感谢女朋友一路来的陪伴和鼓励。</p>
<hr>
<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>一路走来，个中五味不再多说，考研是一段努力追求自我提升的宝贵经历，迷茫与前行共进，焦虑与收获并存，每一位用心付出的考研人都值得被鼓励，道路是曲折的，前途是光明的。今日记录下自己的经历，与君共勉！</p>
<blockquote>
<p>作者：Monodrama</p>
</blockquote>
<blockquote>
<p>资料链接： <a href="https://pan.baidu.com/s/1ZRC1K_OqJBazZbixNlpiIQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1ZRC1K_OqJBazZbixNlpiIQ</a> 提取码: a4un</p>
</blockquote>
]]></content>
      <categories>
        <category>随记</category>
      </categories>
      <tags>
        <tag>考研</tag>
      </tags>
  </entry>
  <entry>
    <title>关于Java String地址与值的理解和Java Object的clone()方法</title>
    <url>/%E5%85%B3%E4%BA%8EJava-String%E5%9C%B0%E5%9D%80%E4%B8%8E%E5%80%BC%E7%9A%84%E7%90%86%E8%A7%A3%E5%92%8CJava-Object%E7%9A%84clone-%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<p>在学习<a href="http://c.biancheng.net/design_pattern/" target="_blank" rel="noopener">设计模式</a>中的Prototype Patterns时，了解到Java的根类Object提供了一个clone()方法（Object是所有类的父类，其一共提供了11个方法，具体详解可以看<a href="https://fangjian0423.github.io/2016/03/12/java-Object-method/" target="_blank" rel="noopener">这篇文章</a>），可以很容易实现Prototype Patterns。但clone()方法有浅克隆和深克隆两种，其中涉及到了java基本数据类型与其他数据类型的值与地址的问题。</p>
<a id="more"></a>

<br>

<h1 id="1-java的基本数据类型与引用数据类型"><a href="#1-java的基本数据类型与引用数据类型" class="headerlink" title="1. java的基本数据类型与引用数据类型"></a>1. java的基本数据类型与引用数据类型</h1><pre><code>                    ┏数值型━┳━整数型：byte、short、int、long

       ┏基本数据类型━┫      ┗━浮点型：float、double

       ┃            ┣字符型：char

数据类型╋            ┗布尔型：boolean

       ┃            ┏类（class）

       ┗引用数据类型━╋接口（interface）

                    ┗数组（array）</code></pre><p>Java中有两类数据类型：基本数据类型与引用数据类型，<strong>基本数据类型直接保存数据的值，而引用数据类型只保存指向存储其所表示的值的地址</strong>。以String与int为例，String是Java的一个类，属于引用数据类型，所以String其实相当于一个指针（当然指针只是借用C++里的说法，Java中是没有指针的），而int属于基本数据类型，其声明的变量直接存储值。</p>
<br>

<h2 id="1-1简要说明"><a href="#1-1简要说明" class="headerlink" title="1.1简要说明"></a>1.1简要说明</h2><p>对于引用数据类型来说，当声明一个String类型的变量<code>str1</code>并为其赋字符串值<code>&quot;strvalue&quot;</code>时，会将该字符串值<code>&quot;strvalue&quot;</code>存储在字符串常量池中，如果有一个新的String类型的变量<code>str2</code>被声明并且同样为其赋值<code>&quot;strvalue&quot;</code>的话，<code>str1</code>与<code>str2</code>会指向同一个地址（即存储<code>“strvalue”</code>的物理空间），两者共用同一个物理空间。<code>str1</code>与<code>str2</code>的值其实是地址值。</p>
<p>而对于基本数据类型来说，如果令<code>int num1 = 123</code>，<code>int num2 = 123</code>，<code>num1</code>和<code>num2</code>是不共用一个物理空间的。即<code>num1</code>和<code>num2</code>分别有各自的物理空间来存储<code>123</code>。</p>
<br>

<h2 id="1-2-用代码说明"><a href="#1-2-用代码说明" class="headerlink" title="1.2 用代码说明"></a>1.2 用代码说明</h2><p><strong>首先要明白判断两字符串相等时String的<code>&quot;str1==str2&quot;</code>与<code>&quot;str1.equals(str2)&quot;</code>的区别</strong></p>
<p><code>&quot;==&quot;</code>返回<code>true</code>时代表<code>str1</code>和<code>str2</code>指向同一个物理空间。</p>
<p><code>equals</code>返回<code>true</code>时代表<code>str1</code>和`str2所指向的物理空间中存储的String值相等，并不需要两者同时指向一个物理空间，如下图：</p>
<p><img alt="String1" data-src="%E5%85%B3%E4%BA%8EJava-String%E5%9C%B0%E5%9D%80%E4%B8%8E%E5%80%BC%E7%9A%84%E7%90%86%E8%A7%A3%E5%92%8CJava-Object%E7%9A%84clone-%E6%96%B9%E6%B3%95/String1.png"></p>
<p><strong>再跟据以下代码说明String与int的不同：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//这种情况下str1与str2指向同一个物理空间，值也相同</span></span><br><span class="line">        String str1 = <span class="string">"strvalue"</span>;</span><br><span class="line">        String str2 = <span class="string">"strvalue"</span>;   <span class="comment">//这里String str2 = "strvalue"与String str2 = str1是完全相同的</span></span><br><span class="line">        System.out.println(<span class="string">"str1 == str2: "</span> +  (str1 == str2));</span><br><span class="line">        System.out.println(<span class="string">"str1.equals(str2): "</span> +  (str1.equals(str2)));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//如果通过new String()的方法来声明str3与str4，两者会指向不同的物理空间</span></span><br><span class="line">        String str3 = <span class="keyword">new</span> String(<span class="string">"strvalue"</span>);</span><br><span class="line">        String str4 = <span class="keyword">new</span> String(<span class="string">"strvalue"</span>);</span><br><span class="line">        System.out.println(<span class="string">"str3 == str4: "</span> +  (str3 == str4));</span><br><span class="line">        System.out.println(<span class="string">"str3.equals(str4): "</span> +  (str3.equals(str4)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>输出：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">str1 == str2: true           //说明str1与str2指向一物理空间</span><br><span class="line">str1.equals(str2): true		 //说明str1与str2所指向的物理空间中存储的值相等</span><br><span class="line">str3 == str4: false			 //说明str3与str4不指向一物理空间</span><br><span class="line">str3.equals(str4): true		 //说明str3与str4所指向的物理空间中存储的值相等</span><br></pre></td></tr></table></figure>

<h1 id="2-Java的根类Object的clone-方法"><a href="#2-Java的根类Object的clone-方法" class="headerlink" title="2. Java的根类Object的clone()方法"></a>2. Java的根类Object的clone()方法</h1><h2 id="2-1-为什么要有clone-方法？"><a href="#2-1-为什么要有clone-方法？" class="headerlink" title="2.1 为什么要有clone()方法？"></a>2.1 为什么要有clone()方法？</h2><p>首先说明clone方法是用来干什么的，我们都知道一般要创建一个新的对象时，往往是通过<code>new</code>关键字实现的。</p>
<p>试想这样的一种情况，有一个类<code>Chicken</code>，在一开始时我们创建了一个<code>Chicken</code>对象<code>chicken1</code>，它有很多属性，如年龄、饥饿度、体重、性别等等一系列属性，这些属性会随着时间的变化而变化。</p>
<p>现在存在着这样的一种需求，我想要把<code>chicken1</code>复制很多份，每一份都是一个新的对象，这些对象的所有属性都要和<code>chicken1</code>一样。</p>
<p>那么这时候你可能会想，我可以先<code>new</code>出来很多新的<code>Chicken</code>对象，然后根据<code>chicken1</code>的属性对这些新的对象的属性进行一一赋值，但是你可能会发现，这个工作是很繁琐的，你要遍历<code>Chicken</code>里的每一个属性并对其一一赋值。</p>
<p>那么如何优化呢，这时候就需要用到<code>clone()</code>方法了，直接用<code>Chicken chicken2 = (Chicken)chicken1.clone()</code>可以得到一个与<code>chicken1</code>一样的新对象<code>chicken2</code>。</p>
<br>

<p>可能你还这样想过：</p>
<p><strong><code>Chicken chicken2 = chicken1</code>能到一个新对象吗</strong></p>
<p>看这样一段代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Chicken</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String name = <span class="string">"chickenname"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        </span><br><span class="line">        Chicken chicken1 = <span class="keyword">new</span> Chicken();</span><br><span class="line">        Chicken chicken2 = chicken1;</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">"chicken1指向的物理空间的地址："</span>+chicken1);</span><br><span class="line">        System.out.println(<span class="string">"chicken2指向的物理空间的地址："</span>+chicken2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>输出：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chicken1指向的物理空间的地址：Chicken@16d3586</span><br><span class="line">chicken2指向的物理空间的地址：Chicken@16d3586</span><br></pre></td></tr></table></figure>

<p>你会发现<code>Chicken chicken2 = chicken1</code>所得到的<code>chicken2</code>并不是一个新对象，它与<code>chicken1</code>指向同一个物理空间，更改<code>chicken1</code>时<code>chicken2</code>也会随之改变。</p>
<p>因此，要想得到两个一模一样的对象，只能通过new然后逐一对属性赋值和clone()两种方法来试现。</p>
<h2 id="2-2-clone方法的具体用法"><a href="#2-2-clone方法的具体用法" class="headerlink" title="2.2 clone方法的具体用法"></a>2.2 clone方法的具体用法</h2><p>要想使用clone()方法，必须在类中实现Cloneable接口，如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Chicken</span> <span class="keyword">implements</span> <span class="title">Cloneable</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> age = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span>  Object <span class="title">clone</span><span class="params">()</span><span class="keyword">throws</span> CloneNotSupportedException</span>&#123;</span><br><span class="line">        Chicken newchicken = (Chicken) <span class="keyword">super</span>.clone();</span><br><span class="line">        <span class="keyword">return</span> newchicken;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>到此，我们已经可以初步的用一下clone()方法了，如下:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Chicken</span> <span class="keyword">implements</span> <span class="title">Cloneable</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span>  <span class="keyword">int</span> age = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span>  Object <span class="title">clone</span><span class="params">()</span><span class="keyword">throws</span> CloneNotSupportedException</span>&#123;</span><br><span class="line">        Chicken newchicken = (Chicken) <span class="keyword">super</span>.clone();</span><br><span class="line">        <span class="keyword">return</span> newchicken;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> CloneNotSupportedException </span>&#123;</span><br><span class="line"></span><br><span class="line">        Chicken chicken1 = <span class="keyword">new</span> Chicken();</span><br><span class="line">        chicken1.setAge(<span class="number">1</span>);</span><br><span class="line">        Chicken chicken2 = (Chicken) chicken1.clone();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"chicken1指向的物理空间的地址："</span>+chicken1);</span><br><span class="line">        System.out.println(<span class="string">"chicken2指向的物理空间的地址："</span>+chicken2);</span><br><span class="line">        System.out.println(<span class="string">"chicken1的age："</span>+chicken1.getAge());</span><br><span class="line">        System.out.println(<span class="string">"chicken2的age："</span>+chicken2.getAge());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>输出：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chicken1指向的物理空间的地址：Chicken@16d3586</span><br><span class="line">chicken2指向的物理空间的地址：Chicken@154617c</span><br><span class="line">chicken1的age：1</span><br><span class="line">chicken2的age：1</span><br></pre></td></tr></table></figure>

<p>可以发现，<code>chicken1</code>与<code>chicken2</code>指向的地址不同，即二者是两个对象，而且我们并没有对<code>chicken2</code>的<code>age</code>进行设置，但它的值却不是初始化的<code>0</code>而是与<code>chicken1</code>的<code>age</code>相同，为<code>1</code>。能够很好的说明，我们的clone()方法得到了实现。</p>
<p>但是，要想深入理解clone()方法，现在还不算完。</p>
<p>clone()方法分为<strong>浅克隆</strong>（浅拷贝）与<strong>深克隆</strong>（深拷贝）两种。</p>
<h3 id="2-2-1-浅克隆"><a href="#2-2-1-浅克隆" class="headerlink" title="2.2.1 浅克隆"></a>2.2.1 浅克隆</h3><p>看下面的例子：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Chicken</span> <span class="keyword">implements</span> <span class="title">Cloneable</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span>  <span class="keyword">int</span> age = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> String name = <span class="string">"chickenname"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span>  Object <span class="title">clone</span><span class="params">()</span><span class="keyword">throws</span> CloneNotSupportedException</span>&#123;</span><br><span class="line">        Chicken newchicken = (Chicken) <span class="keyword">super</span>.clone();</span><br><span class="line">        <span class="keyword">return</span> newchicken;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> CloneNotSupportedException </span>&#123;</span><br><span class="line"></span><br><span class="line">        Chicken chicken1 = <span class="keyword">new</span> Chicken();</span><br><span class="line">        Chicken chicken2 = (Chicken) chicken1.clone();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"chicken1 == chicken2 : "</span> + (chicken1 == chicken2) );</span><br><span class="line">        System.out.println(<span class="string">"chicken1.name.equals(chicken2.name) : "</span></span><br><span class="line">                +  (chicken1.getName().equals(chicken2.getName()));</span><br><span class="line">        System.out.println(<span class="string">"chicken1.name == chicken2.name : "</span></span><br><span class="line">                +  (chicken1.getName() == chicken2.getName()));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>输出：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chicken1 == chicken2 : false					//chicken1与chicken2两者地址不同</span><br><span class="line">chicken1.name.equals(chicken2.name) : true		//两者name的值相同</span><br><span class="line">chicken1.name == chicken2.name : true			//两者name的地址相同</span><br></pre></td></tr></table></figure>

<p>通过上面的例子我们就可以看出来什么是<strong>浅克隆</strong>了，当执行<code>clone()</code>方法时，对于<code>Chicken</code>类里面的属性：</p>
<p>●如果其属于八个基本数据类型中的一个，例如<code>Chicken</code>中的<code>age</code>属性，那么<code>chicken2</code>的<code>age</code>与<code>chicken1</code>的<code>age</code>对应不同的物理空间；</p>
<p>●如果其属于引用数据类型(不属于八大基本数据类型的都是引用数据类型，如自定义的类、String、enum等)，例如<code>Chicken</code>中的<code>name</code>属性，那么<code>chicken2</code>的<code>name</code>与<code>chicken1</code>的<code>name</code>共用一个物理空间，并没有真正的把<code>name</code>拷贝过去，但是不影响我们的使用。</p>
<h3 id="2-2-1-深克隆"><a href="#2-2-1-深克隆" class="headerlink" title="2.2.1 深克隆"></a>2.2.1 深克隆</h3><p>既然浅克隆不会为引用数据类型真正克隆一个物理空间，那么深克隆的概念就呼之欲出了，深克隆自然就是<strong>会为类中的引用数据类型的属性克隆一个新的物理空间</strong>。</p>
<p>那么该如何实现深克隆呢？还记得我们在上面的1.2的代码中写的如何真正拷贝一个不同地址的String的方法吗？那就是new一个String。</p>
<p>如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Chicken</span> <span class="keyword">implements</span> <span class="title">Cloneable</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name = <span class="string">"chickenname"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getName</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span>  Object <span class="title">clone</span><span class="params">()</span><span class="keyword">throws</span> CloneNotSupportedException</span>&#123;</span><br><span class="line">        Chicken newchicken = (Chicken) <span class="keyword">super</span>.clone();</span><br><span class="line">        newchicken.name=<span class="keyword">new</span> String(<span class="keyword">this</span>.name);</span><br><span class="line">        <span class="keyword">return</span> newchicken;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> CloneNotSupportedException </span>&#123;</span><br><span class="line"></span><br><span class="line">        Chicken chicken1 = <span class="keyword">new</span> Chicken();</span><br><span class="line">        Chicken chicken2 = (Chicken) chicken1.clone();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"chicken1 == chicken2 : "</span> + (chicken1 == chicken2) );</span><br><span class="line">        System.out.println(<span class="string">"chicken1.name.equals(chicken2.name) : "</span></span><br><span class="line">                +  (chicken1.name.equals(chicken2.name)));</span><br><span class="line">        System.out.println(<span class="string">"chicken1.name == chicken2.name : "</span></span><br><span class="line">                +  (chicken1.name == chicken2.name));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>输出：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chicken1 == chicken2 : false					//chicken1与chicken2两者地址不同</span><br><span class="line">chicken1.name.equals(chicken2.name) : true		//两者name的值相同</span><br><span class="line">chicken1.name == chicken2.name : flase			//两者name的地址不相同</span><br></pre></td></tr></table></figure>

<p>这就是深克隆了，当然这里只提供了一个很简单的例子String，另外的还有如果属性有自定义的类的深克隆（假如Chicken中的属性里有一个我们自定义的Egg类），这时候就需要在Egg类中也提供clone()方法（而且要是深克隆）。更复杂的是如果Egg中的属性还有自定义的类，那么就要层层检查，保证每一层的类都要提供深克隆的clone()方法。这样是非常麻烦的，当然，我们只需要在理论上的理解即可，在实际应用中，我们几乎从不需要这样做。</p>
<p><strong>End</strong></p>
<p>PS：码了三个小时_(:з)∠)_，本来只想先码一点儿，但是一码就不想停下来。。。还有一大堆作业等着呢(ㄒoㄒ)</p>




<p>参考链接：</p>
<p> <a href="https://blog.csdn.net/Coding_Zhu/article/details/53096178" target="_blank" rel="noopener">JAVA基本数据类型与引用数据类型</a> </p>
<p><a href="https://blog.csdn.net/qq_34490018/article/details/82110578" target="_blank" rel="noopener">深入理解Java中的String（大坑）</a></p>
<p><a href="https://blog.csdn.net/zhangjg_blog/article/details/18369201" target="_blank" rel="noopener">详解Java中的clone方法 – 原型模式</a></p>
]]></content>
      <categories>
        <category>technology</category>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>git命令速查表</title>
    <url>/git%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5%E8%A1%A8/</url>
    <content><![CDATA[<p><img alt="1577243564858376" data-src="git%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5%E8%A1%A8/1577243564858376.png"></p>
<a id="more"></a>

<p>图片来源： <a href="https://www.w3cschool.cn/git/git-cheat-sheet.html" target="_blank" rel="noopener">https://www.w3cschool.cn/git/git-cheat-sheet.html</a> </p>
]]></content>
      <categories>
        <category>technology</category>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo站点配置文件说明</title>
    <url>/Hexo%E7%AB%99%E7%82%B9%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%B4%E6%98%8E/</url>
    <content><![CDATA[<p>以下是<code>站点配置文件</code>的默认内容，这里将里面的配置项都注释说明，可以根据需要自定义配置。</p>
<a id="more"></a>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## Docs: https://hexo.io/docs/configuration.html</span><br><span class="line">## Source: https://github.com/hexojs/hexo/</span><br><span class="line"># 网站配置</span><br><span class="line"></span><br><span class="line">title: Hexo            # 网站标题</span><br><span class="line">subtitle:              # 网站副标题</span><br><span class="line">description:           # 网站描述</span><br><span class="line">author: John Doe       # 你的昵称</span><br><span class="line">language:              # 网站使用的语言(英文:en, 简体中文:zh-CN，繁体中文:zh-tw)</span><br><span class="line">timezone:              # 网站时区，用于生成页面时填充相关时间，我的为Asia/Shanghai</span><br><span class="line"></span><br><span class="line"># URL</span><br><span class="line">## 如果你的站点要放入子目录, 请将url设置为&apos;http://yoursite.com/child&apos; 并将根目录设置为&apos;/child/&apos;</span><br><span class="line"></span><br><span class="line">url: http://yoursite.com  # 站点网址</span><br><span class="line">root: /                   # 网站根目录</span><br><span class="line">permalink: :year/:month/:day/:title/ #文单的永久链接格式</span><br><span class="line">permalink_defaults:       # 永久链接中各部分的默认值</span><br><span class="line"></span><br><span class="line"># 目录</span><br><span class="line">source_dir: source        # 资源文件夹，这个文件夹用来存放博客内容</span><br><span class="line">public_dir: public        # 公共文件夹，这个文件夹用来存放生成的站点静态文件</span><br><span class="line">tag_dir: tags             # 标签文件夹</span><br><span class="line">archive_dir: archives     # 归档文件夹</span><br><span class="line">category_dir: categories  # 分类文件夹</span><br><span class="line">code_dir: downloads/code  # Include code文件夹</span><br><span class="line">i18n_dir: :lang           # 国际化文件夹，存放各种语言定义</span><br><span class="line">skip_render:              # 跳过指定文件的渲染</span><br><span class="line"></span><br><span class="line"># 写作</span><br><span class="line">new_post_name: :title.md  # 新文章的文件名称</span><br><span class="line">default_layout: post      # 预设布局</span><br><span class="line">titlecase: false          # 把标题转换为 title case</span><br><span class="line">external_link: true       # 在新标签中打开链接</span><br><span class="line">filename_case: 0          # 把文件名称转换为 (1) 小写或 (2) 大写</span><br><span class="line">render_drafts: false      # 显示草稿</span><br><span class="line">post_asset_folder: false  # 启动 Asset 文件夹</span><br><span class="line">relative_link: false      # 把链接改为与根目录的相对位址</span><br><span class="line">future: true              # 显示未来的文章</span><br><span class="line">highlight:                # 代码块的设置</span><br><span class="line">  enable: true</span><br><span class="line">  line_number: true</span><br><span class="line">  auto_detect: false</span><br><span class="line">  tab_replace:</span><br><span class="line"></span><br><span class="line"># 首页的分页设置</span><br><span class="line"># path: 博客首页的根路径. (default = &apos;&apos;)</span><br><span class="line"># per_page: 每页展示多少篇文章. (0 = 不分页)</span><br><span class="line"># order_by: 文章排序顺序. (默认为日期倒序)</span><br><span class="line"></span><br><span class="line">index_generator:</span><br><span class="line">  path: &apos;&apos;</span><br><span class="line">  per_page: 10</span><br><span class="line">  order_by: -date</span><br><span class="line"></span><br><span class="line"># 分类 &amp; 标签</span><br><span class="line">default_category: uncategorized  # 默认分类</span><br><span class="line">category_map:                    # 分类别名</span><br><span class="line">tag_map:                         # 标签别名</span><br><span class="line"></span><br><span class="line"># 日期 / 时间格式</span><br><span class="line">## Hexo 使用 Moment.js 来解析和显示时间</span><br><span class="line">## http://momentjs.com/docs/#/displaying/format/</span><br><span class="line">date_format: YYYY-MM-DD # 日期格式</span><br><span class="line">time_format: HH:mm:ss   # 时间格式</span><br><span class="line"></span><br><span class="line"># 分页</span><br><span class="line">## 每页显示的文章量 (0 = 关闭分页功能)</span><br><span class="line"></span><br><span class="line">per_page: 10</span><br><span class="line">pagination_dir: page</span><br><span class="line"></span><br><span class="line"># 扩展</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: landscape       # 主题</span><br><span class="line"></span><br><span class="line"># 部署</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type:</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>technology</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title>利用Hexo+Next搭建个人博客（三）——优化</title>
    <url>/%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89-%E4%BC%98%E5%8C%96/</url>
    <content><![CDATA[<p>搭建完一个博客的demo之后，为了让我们自己的博客变得刚好看一些，例如头像、动态背景、社交链接等等；还有功能更强大一些，例如添加搜索功能、支持<code>RSS</code>订阅、增加评论功能等等。接下来我们需要对博客进行各种自定义的设置。下面我列出了一些我做的自定义配置。</p>
<a id="more"></a>

<p><strong>一些对NexT不是很熟的小伙伴注意：</strong>可能在你为博客配置各种功能的时候会在网上搜到很多教程，虽然有一定的借鉴意义，但是有些已经不适配目前的版本了，一些旧版本<code>NexT</code>未集成的功能可能在新版本中集成了，但是如果仍旧依照旧版本的教程来修改配置文件或甚至<code>.swig</code>文件的话，可能会造成一些未知的bug或者冲突（不要问我怎么知道的(σ｀д′)σ），所以在搜索教程的时候要注意教程的写作时间，注意版本适配问题。当然，相信机智的你一定能解决这些问题的。</p>
<p>我的版本信息：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">* hexo-v3.9.0</span><br><span class="line">* NexT.Muse v7.4.1</span><br></pre></td></tr></table></figure>

<h2 id="1-界面优化"><a href="#1-界面优化" class="headerlink" title="1.界面优化"></a>1.界面优化</h2><h3 id="1-1侧栏设置"><a href="#1-1侧栏设置" class="headerlink" title="1.1侧栏设置"></a>1.1侧栏设置</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">侧栏设置包括：侧栏位置、侧栏显示与否、文章间距等等</span><br></pre></td></tr></table></figure>

<p>打开 <strong>主题配置文件</strong> 找到<code>sidebar</code>字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sidebar:</span><br><span class="line"># Sidebar Position - 侧栏位置</span><br><span class="line">  #position: left        #靠左放置</span><br><span class="line">  position: right      #靠右放置</span><br><span class="line">  </span><br><span class="line"># 手动定义侧边栏宽度。如果注释，将默认为:</span><br><span class="line">  # Muse | Mist: 320</span><br><span class="line">  # Pisces | Gemini: 240</span><br><span class="line">  #width: 300</span><br><span class="line"></span><br><span class="line"># Sidebar Display - 侧栏显示时机（只对Muse | Mist两种风格有效）</span><br><span class="line">  display: post        #默认行为，在文章页面（拥有目录列表）时显示</span><br><span class="line">  #display: always       #在所有页面中都显示</span><br><span class="line">  #display: hide        #在所有页面中都隐藏（可以手动展开）</span><br><span class="line">  #display: remove      #完全移除</span><br><span class="line"></span><br><span class="line">  offset: 12            #文章间距（只对Pisces | Gemini两种风格有效）</span><br><span class="line">  </span><br><span class="line">  onmobile: false       #在窄视图上启用侧边栏（只对Muse | Mist两种风格有效）</span><br></pre></td></tr></table></figure>

<h3 id="1-2头像设置"><a href="#1-2头像设置" class="headerlink" title="1.2头像设置"></a>1.2头像设置</h3><p>打开 <strong>主题配置文件</strong> 找到<code>Sidebar Avatar</code>字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Sidebar Avatar</span><br><span class="line">avatar:</span><br><span class="line">  url: /images/header.jpg</span><br><span class="line">  rounded: ture       # 是否圆形显示头像true|false</span><br><span class="line">  rotated: ture       # 光标移到头像上后头像是否旋转true|false</span><br></pre></td></tr></table></figure>

<p>替换头像：将自己想要替换的头像命名为<code>header.jpg</code>，将其放在<code>next\source\images</code>目录下，设置<code>url</code>字段为<code>/images/header.jpg</code></p>
<h3 id="1-3动态背景"><a href="#1-3动态背景" class="headerlink" title="1.3动态背景"></a>1.3动态背景</h3><p>NexT提供了两种动态背景效果，一种是<code>canvas-nest</code>几何线条效果，一种是<code>canvas-ribbon</code>彩带效果，下面提供两种效果的添加方式，可以两者选其一，也可以都选。</p>
<h4 id="canvas-nest几何线条效果"><a href="#canvas-nest几何线条效果" class="headerlink" title="canvas-nest几何线条效果"></a>canvas-nest几何线条效果</h4><p>效果如下：线条会聚集在光标附近</p>
<p><img alt="1571138355871" data-src="%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89-%E4%BC%98%E5%8C%96/1571138355871.png"></p>
<p><strong>step1：</strong>进入到next目录下（前提：已经在MyBlog1.1目录中）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd themes/next</span><br></pre></td></tr></table></figure>

<p><strong>step2：</strong>安装<code>canvas-nest</code>模块到 <code>source/lib</code>目录中</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/theme-next/theme-next-canvas-nest source/lib/canvas-nest</span><br></pre></td></tr></table></figure>

<p><strong>step3：</strong>打开 <strong>主题配置文件</strong> 找到<code>canvas_nest</code>字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">canvas_nest:</span><br><span class="line">  enable: true			# 是否显示true|false</span><br><span class="line">  onmobile: true 		# 是否在移动端展示true|false</span><br><span class="line">  color: &quot;120,120,120&quot; 	# 线条的颜色（RGB表示）, 用 `,` 隔开</span><br><span class="line">  opacity: 0.5 			# 线条头透明度: 0~1</span><br><span class="line">  zIndex: -1 			# 用于控制线条所在层的位置, 默认:-1。值越大，显示的层面离用户越近。</span><br><span class="line">  count: 150			# 线条的总条数</span><br></pre></td></tr></table></figure>

<h4 id="canvas-ribbon彩带效果"><a href="#canvas-ribbon彩带效果" class="headerlink" title="canvas-ribbon彩带效果"></a>canvas-ribbon彩带效果</h4><p>效果如下：彩带会随着鼠标点击改变</p>
<p><img alt="1571139846137" data-src="%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89-%E4%BC%98%E5%8C%96/1571139846137.png"></p>
<p><strong>step1：</strong>进入到next目录下（前提：已经在MyBlog1.1目录中）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd themes/next</span><br></pre></td></tr></table></figure>

<p><strong>step2：</strong>安装<code>canvas-nest</code>模块到 <code>source/lib</code>目录中</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/theme-next/theme-next-canvas-nest source/lib/canvas-nest</span><br></pre></td></tr></table></figure>

<p><strong>step3：</strong>打开 <strong>主题配置文件</strong> 找到<code>canvas_ribbon</code>字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">canvas_ribbon:</span><br><span class="line">  enable: 			# 是否显示true|false</span><br><span class="line">  size: 300 		# 彩带宽度</span><br><span class="line">  alpha: 0.6 		# 彩带透明度</span><br><span class="line">  zIndex: -1 		# 用于控制彩带所在层的位置, 默认:-1。值越大，显示的层面离用户越近。</span><br></pre></td></tr></table></figure>

<h3 id="1-4在右上角或者左上角实现fork-me-on-github"><a href="#1-4在右上角或者左上角实现fork-me-on-github" class="headerlink" title="1.4在右上角或者左上角实现fork me on github"></a>1.4在右上角或者左上角实现fork me on github</h3><p>效果如下：</p>
<p><img alt="1571141236469" data-src="%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89-%E4%BC%98%E5%8C%96/1571141236469.png"></p>
<p><strong>step1：</strong>在<a href="http://tholman.com/github-corners/" target="_blank" rel="noopener">GitHub Corners</a>或者<a href="https://github.blog/2008-12-19-github-ribbons/" target="_blank" rel="noopener">GitHub Ribbons</a>选择自己喜欢的图标，然后copy相应的代码</p>
<p><strong>step2：</strong>将刚刚复制的代码粘贴到<code>themes/next/layout/_layout.swig</code>文件中<code>&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</code>下面一行</p>
<p><strong>step3：</strong>把代码中的<code>href</code>后面的值替换成你要跳转的地址，比如你的GitHub主页</p>
<h3 id="1-5显示摘要"><a href="#1-5显示摘要" class="headerlink" title="1.5显示摘要"></a>1.5显示摘要</h3><p>在next的默认配置中，首页显示文章会显示全文而不是文章的摘要，这样看起来很难受，next提供了两种方法显示摘要。</p>
<h4 id="自动显示摘要"><a href="#自动显示摘要" class="headerlink" title="自动显示摘要"></a>自动显示摘要</h4><p>打开 <strong>主题配置文件</strong> 找到<code>auto_excerpt</code>字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">auto_excerpt:</span><br><span class="line">  enable: true     # 是否开启自动显示摘要ture|false</span><br><span class="line">  length: 80	   # 摘要长度，截取文章的前n个字符</span><br></pre></td></tr></table></figure>

<h4 id="手动控制摘要"><a href="#手动控制摘要" class="headerlink" title="手动控制摘要"></a>手动控制摘要</h4><p>在文章中加入<code>&lt;!-- more --&gt;</code> 字段，<code>&lt;!-- more --&gt;</code> 以前的都为文章摘要。</p>
<p>当两者同时使用时，<code>&lt;!-- more --&gt;</code>的优先级更高。</p>
<h3 id="1-6设置网站缩略图标"><a href="#1-6设置网站缩略图标" class="headerlink" title="1.6设置网站缩略图标"></a>1.6设置网站缩略图标</h3><p>在<code>MyBlog1.1\themes\next\source\images</code>文件夹下有三个文件</p>
<p><code>apple-touch-icon-next.png</code></p>
<p><code>favicon-16x16-next.png</code></p>
<p><code>favicon-32x32-next.png</code></p>
<p>将自己想用的图标复制成三份，按照上面三张图片的像素进行更改，并且重命名为这三个图片的名字，替换即可。</p>
<h3 id="1-7去除hexo支持信息与主题版本信息"><a href="#1-7去除hexo支持信息与主题版本信息" class="headerlink" title="1.7去除hexo支持信息与主题版本信息"></a>1.7去除hexo支持信息与主题版本信息</h3><p>就是把这个去掉</p>
<p><img alt="1571145529107" data-src="%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89-%E4%BC%98%E5%8C%96/1571145529107.png"></p>
<p>打开 <strong>主题配置文件</strong> 找到<code>powered</code>和<code>theme</code>字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">powered:</span><br><span class="line">    enable: false</span><br><span class="line">    version: false</span><br><span class="line"></span><br><span class="line">theme:</span><br><span class="line">    enable: false</span><br><span class="line">    version: false</span><br></pre></td></tr></table></figure>

<h3 id="1-8侧边栏社交信息链接"><a href="#1-8侧边栏社交信息链接" class="headerlink" title="1.8侧边栏社交信息链接"></a>1.8侧边栏社交信息链接</h3><p>效果如下：</p>
<p><img alt="1571149724636" data-src="%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89-%E4%BC%98%E5%8C%96/1571149724636.png"></p>
<p>打开 <strong>主题配置文件</strong> 找到<code>social</code>字段，选择你想展示的社交链接</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">social:</span><br><span class="line">  GitHub: https://github.com/LXF-DX3906 || github</span><br><span class="line">  E-Mail: mailto:xuefei_l@outlook.com || envelope</span><br><span class="line">  #Weibo: https://weibo.com/yourname || weibo</span><br><span class="line">  #Google: https://plus.google.com/yourname || google</span><br><span class="line">  #Twitter: https://twitter.com/yourname || twitter</span><br><span class="line">  #FB Page: https://www.facebook.com/yourname || facebook</span><br><span class="line">  #VK Group: https://vk.com/yourname || vk</span><br><span class="line">  StackOverflow: https://stackoverflow.com/users/11585996/xuefei-lv || stack-overflow</span><br><span class="line">  #YouTube: https://youtube.com/yourname || youtube</span><br><span class="line">  #Instagram: https://instagram.com/yourname || instagram</span><br><span class="line">  #Skype: skype:yourname?call|chat || skype</span><br></pre></td></tr></table></figure>

<h3 id="1-9书签功能"><a href="#1-9书签功能" class="headerlink" title="1.9书签功能"></a>1.9书签功能</h3><p>会在文章的左上角或右上角生成一个标签标志，点击它可以记录我们文章阅读的进度，下次再打开时会定位到该进度位置。</p>
<p><img alt="Snipaste_2019-10-16_13-19-47" data-src="%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89-%E4%BC%98%E5%8C%96/Snipaste_2019-10-16_13-19-47.png"></p>
<p>打开 <strong>主题配置文件</strong> 找到<code>bookmark</code>字段，将<code>enbale</code>设置为<code>true</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bookmark:</span><br><span class="line">  enable: 		 #是否开启书签功能true|false</span><br><span class="line">  color: &quot;#222&quot;	 # 自定义书签颜色</span><br><span class="line">  # 如果save的值为auto，在关闭页面和点击书签时都会保存进度</span><br><span class="line">  # 如果save的值为manual, 只有在点击书签时会保存进度</span><br><span class="line">  save: manual</span><br></pre></td></tr></table></figure>

<h3 id="1-10添加文章权利声明"><a href="#1-10添加文章权利声明" class="headerlink" title="1.10添加文章权利声明"></a>1.10添加文章权利声明</h3><p>在看一些博客的时候，你会发现有的文章下面会有这样的权利声明， Creative Commons 4.0国际许可证包括<code>by</code>，<code>by-nc</code>，<code>by-nc-nd</code>，<code>by-nc-sa</code>，<code>by-nd</code>，<code>by-sa</code>，<code>zero</code>等。这些许可允许创作者告知他们保留哪些权利，以及他们为了接收者或其他创作者的利益而放弃哪些权利。</p>
<p>虽然还没接触到这些，但是加上去总要显得正式些^o^y。</p>
<p><img alt="Snipaste_2019-10-16_13-21-02" data-src="%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89-%E4%BC%98%E5%8C%96/Snipaste_2019-10-16_13-21-02.png"></p>
<p><code>NexT</code>提供了这样的功能，允许我们在文章下方和侧边栏加上权利声明，可以在<strong>主题配置文件</strong>中设置：</p>
<p>找到<code>creative_commons</code>字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">creative_commons:</span><br><span class="line">  license: by-nc-sa  #权利声明的类型by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</span><br><span class="line">  sidebar: false     #是否在侧边栏显示</span><br><span class="line">  post: true		 #是否在文章下方显示</span><br><span class="line">  language:</span><br></pre></td></tr></table></figure>

<h3 id="1-11更改代码块样式以及添加复制按钮"><a href="#1-11更改代码块样式以及添加复制按钮" class="headerlink" title="1.11更改代码块样式以及添加复制按钮"></a>1.11更改代码块样式以及添加复制按钮</h3><p>如果觉得文章中的代码块的样式不太好看的话<code>NexT</code>提供了多种代码块的样式可供选择，具体设置方法如下：</p>
<p>打开 <strong>主题配置文件</strong> 找到<code>codeblock</code>字段，根据提示选择想要的代码块样式，代码块的样式可以分为两部分，一个是代码<code>highlight</code>，另一个是代码块<code>style</code>，具体什么样可以自行设置下看看</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">codeblock:</span><br><span class="line">  # 代码高亮主题</span><br><span class="line">  # 可供选择的值: normal | night | night eighties | night blue | night bright | solarized | solarized dark | galactic </span><br><span class="line">  # 具体信息可参照: https://github.com/chriskempson/tomorrow-theme 该网站上提供了一部分代码样式的展示图片，还有一部分没有，可以自行设定一下试试看</span><br><span class="line">  highlight_theme: normal</span><br><span class="line">  # 在代码块上增加复制代码按钮</span><br><span class="line">  copy_button:</span><br><span class="line">    enable: true</span><br><span class="line">    # 是否展示复制结果</span><br><span class="line">    show_result: false</span><br><span class="line">    # 代码块的样式: default | flat | mac</span><br><span class="line">    style: mac</span><br></pre></td></tr></table></figure>

<h3 id="1-12网页加载时进度条"><a href="#1-12网页加载时进度条" class="headerlink" title="1.12网页加载时进度条"></a>1.12网页加载时进度条</h3><p><code>NexT</code>提供了网页加载进度条功能，网页加载时在顶部显示加载进度条，有多种样式可供选择。</p>
<p><strong>step1：</strong>定位到<code>themes/next</code>目录下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd themes/next</span><br></pre></td></tr></table></figure>

<p><strong>step2：</strong>安装<code>theme-next-pace</code>插件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/theme-next/theme-next-pace source/lib/pace</span><br></pre></td></tr></table></figure>

<p><strong>step3：</strong>打开 <strong>主题配置文件</strong> 找到<code>pace</code>字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pace:</span><br><span class="line">  enable: true  #是否开启加载进度条</span><br><span class="line">  # 进度条样式:可在 https://github.hubspot.com/pace/docs/welcome/ 查看</span><br><span class="line">  # big-counter | bounce | barber-shop | center-atom | center-circle | center-radar | center-simple</span><br><span class="line">  # corner-indicator | fill-left | flat-top | flash | loading-bar | mac-osx | material | minimal</span><br><span class="line">  theme: minimal</span><br></pre></td></tr></table></figure>

<h3 id="1-13添加3D动态背景"><a href="#1-13添加3D动态背景" class="headerlink" title="1.13添加3D动态背景"></a>1.13添加3D动态背景</h3><p><code>NexT</code>提供了3D动态背景功能，有多种样式可供选择，我尝试设置了一下，酷炫是酷炫，但是有点影响阅读了，所以又关了，不过还是把过程记录下来吧，有需要的小伙伴也可以设置下。</p>
<p><strong>step1：</strong>定位到<code>themes/next</code>目录下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd themes/next</span><br></pre></td></tr></table></figure>

<p><strong>step2：</strong>安装<code>theme-next-three</code>插件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/theme-next/theme-next-three source/lib/pace</span><br></pre></td></tr></table></figure>

<p><strong>step3：</strong>打开 <strong>主题配置文件</strong> 找到<code>three</code>字段，有三种样式可以开启</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">three:</span><br><span class="line">  enable: true</span><br><span class="line">  three_waves: false</span><br><span class="line">  canvas_lines: false</span><br><span class="line">  canvas_sphere: false</span><br></pre></td></tr></table></figure>

<h3 id="1-14文章结尾添加结束标记"><a href="#1-14文章结尾添加结束标记" class="headerlink" title="1.14文章结尾添加结束标记"></a>1.14文章结尾添加结束标记</h3><p><strong>step1：</strong>在目录 <code>themes/next/layout/_macro/</code> 下添加 <code>passage-end-tag.swig</code> ，内容如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;    </span><br><span class="line">	&#123;% if not is_index %&#125;        </span><br><span class="line">		&lt;div style=&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;------ 本文结束------		&lt;/div&gt;    </span><br><span class="line">	&#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<p><strong>step2：</strong>打开 <code>themes/next/layout/_macro/post.swig</code> 文件，在<code>END POST BODY</code>字段前新增内容如下:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;    </span><br><span class="line">	&#123;% if not is_index %&#125;</span><br><span class="line">    	&#123;% include &apos;passage-end-tag.swig&apos; %&#125;    </span><br><span class="line">    &#123;% endif %&#125; </span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<p><strong>step3：</strong>打开<code>主题配置文件</code> ，在<code>Post Setting</code>字段下添加代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 文章末尾添加“本文结束”标记</span><br><span class="line">passage_end_tag:</span><br><span class="line">	enabled: true</span><br></pre></td></tr></table></figure>

<h3 id="1-15修改小型代码块颜色"><a href="#1-15修改小型代码块颜色" class="headerlink" title="1.15修改小型代码块颜色"></a><strong>1.15修改小型代码块颜色</strong></h3><p> 修改<code>\themes\next\source\css\ _variables\base.styl</code>文件, 加入自定义颜色: </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$whitesmoke   = #f5f5f5;</span><br><span class="line">$gainsboro    = #eee;</span><br><span class="line">$gray-lighter = #ddd;</span><br><span class="line">$grey-light   = #ccc;</span><br><span class="line">$grey         = #bbb;</span><br><span class="line">$grey-dark    = #999;</span><br><span class="line">$grey-dim     = #666;</span><br><span class="line">$black-light  = #555;</span><br><span class="line">$black-dim    = #333;</span><br><span class="line">$black-deep   = #222;</span><br><span class="line">$red          = #ff2a2a;</span><br><span class="line">$blue-bright  = #87daff;</span><br><span class="line">$blue         = #0684bd;</span><br><span class="line">$blue-deep    = #262a30;</span><br><span class="line">$orange       = #fc6423;</span><br><span class="line">//下面是我自定义的颜色</span><br><span class="line">$my-codeblock-foreground = #9966FF     // 用``围出的代码块字体颜色</span><br><span class="line">$my-codeblock-background = #f5f5f5;    // 用``围出的代码块字体颜色</span><br></pre></td></tr></table></figure>

<p>修改<code>$code-background</code>和<code>$code-foreground</code>的值:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> // Code &amp; Code Blocks // 用``围出的代码块 </span><br><span class="line"> // -------------------------------------------------- </span><br><span class="line">$code-font-family               = $font-family-monospace </span><br><span class="line">$code-font-size                 = 15px </span><br><span class="line">$code-background                = $my-codeblock-background </span><br><span class="line">$code-foreground                = $my-codeblock-foreground </span><br><span class="line">$code-border-radius             = 4px</span><br></pre></td></tr></table></figure>

<h3 id="1-16添加看板娘"><a href="#1-16添加看板娘" class="headerlink" title="1.16添加看板娘"></a>1.16添加看板娘</h3><p><strong>step1：</strong>安装<code>hexo-helper-live2d</code>模块</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure>

<p><strong>step2：</strong>安装<code>live2d-widget-model-hijiki</code>模块（该模块只是其中的一个模型，更多模型请在<a href="https://github.com/xiazeyu/live2d-widget-models" target="_blank" rel="noopener">此处</a>查看详细信息，选择自己喜欢的模型进行安装，模型样式可在<a href="https://huaji8.top/post/live2d-plugin-2.0/" target="_blank" rel="noopener">此处</a>查看）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install live2d-widget-model-hijiki --save</span><br></pre></td></tr></table></figure>

<p><strong>step3：</strong>打开<strong>站点配置文件</strong>，在最后加上如下代码：在use字段选择自己喜欢的模型</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">live2d:</span><br><span class="line"> enable: true                             # 开启Live2D</span><br><span class="line"> scriptFrom: local                        # 插件来源</span><br><span class="line"> pluginRootPath: live2dw/                 # 插件根目录(相对路径)</span><br><span class="line"> pluginJsPath: lib/                       # 脚本文件路径(相对于插件根目录路径)</span><br><span class="line"> pluginModelPath: assets/                 # 模型文件路径(相对于插件根目录)</span><br><span class="line"> tagMode: false                           # 是否标签模式</span><br><span class="line"> debug: false                             # 是否开启调试模式</span><br><span class="line"> model:</span><br><span class="line">  use: live2d-widget-model-hijiki        # 选择模型</span><br><span class="line"> display:</span><br><span class="line">  position: left                        # 模型在页面上的位置</span><br><span class="line">  width: 200                             # 模型宽度</span><br><span class="line">  height: 400                            # 模型高度</span><br><span class="line"> mobile:</span><br><span class="line">  show: true                             # 是否在手机端显示</span><br><span class="line"> react:</span><br><span class="line">  opacity: 0.8                             # 设置模型透明度</span><br></pre></td></tr></table></figure>

<h2 id="2-功能优化"><a href="#2-功能优化" class="headerlink" title="2.功能优化"></a>2.功能优化</h2><h3 id="2-1添加本地搜索功能"><a href="#2-1添加本地搜索功能" class="headerlink" title="2.1添加本地搜索功能"></a>2.1添加本地搜索功能</h3><p><strong>step1：</strong>安装 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fflashlab%2Fhexo-generator-search" target="_blank" rel="noopener">hexo-generator-searchdb</a> 插件</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>

<p><strong>step2：</strong>打开 <strong>站点配置文件</strong> 找到<code>Extensions</code>在下面添加</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 搜索</span></span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  <span class="built_in">limit</span>: 10000</span><br></pre></td></tr></table></figure>

<p><strong>step3：</strong>打开 <strong>主题配置文件</strong> 找到<code>Local search</code>，将<code>enable</code>设置为<code>true</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  trigger: auto				# trigger若为auto, 通过改变输入触发搜索</span><br><span class="line">  							# trigger若为manual, 通过按下enter键或者点击搜索按钮触发搜索</span><br><span class="line">  top_n_per_article: 1 		# 展示每篇文章的前n个结果，如果想要展示所有结果，设置为-1</span><br><span class="line">  unescape: false			# 将html字符串转义为可读的字符串。</span><br><span class="line">  preload: false			# 当加载页面时预加载搜索结果</span><br></pre></td></tr></table></figure>

<h3 id="2-2添加站点访问计数"><a href="#2-2添加站点访问计数" class="headerlink" title="2.2添加站点访问计数"></a>2.2添加站点访问计数</h3><p>next提供了多种访问计数的方式，在这里我们选择使用<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fbusuanzi.ibruce.info" target="_blank" rel="noopener">不蒜子</a></p>
<p>打开 <strong>主题配置文件</strong> 找到<code>busuanzi_count</code>字段，将<code>enbale</code>设置为<code>true</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">busuanzi_count:</span><br><span class="line">  enable: true                #是否显示计数ture|false</span><br><span class="line">  total_visitors: true		  #访客数，uv的方式，单个用户连续点击n篇文章，只记录1次访客数</span><br><span class="line">  total_visitors_icon: user</span><br><span class="line">  total_views: true           #访问量，pv的方式，单个用户连续点击n篇文章，记录n次访问量</span><br><span class="line">  total_views_icon: eye</span><br><span class="line">  post_views: true            #是否显示每篇文章的访问次数ture|false</span><br><span class="line">  post_views_icon: eye</span><br></pre></td></tr></table></figure>

<p>网站访问次数</p>
<p><img alt="1571144615949" data-src="%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89-%E4%BC%98%E5%8C%96/1571144615949.png"></p>
<p>文章显示次数</p>
<p><img alt="1571144642323" data-src="%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89-%E4%BC%98%E5%8C%96/1571144642323.png"></p>
<p>还可以将小人与眼睛的图标改成如下效果</p>
<p><img alt="1571145217091" data-src="%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89-%E4%BC%98%E5%8C%96/1571145217091.png"></p>
<p>打开<code>themes\next\layout\_partials\analytics\busuanzi-counter.swig</code></p>
<p>更改如下两段代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;span class=&quot;post-meta-item&quot; id=&quot;busuanzi_container_site_uv&quot; style=&quot;display: none;&quot;&gt;</span><br><span class="line">      &lt;!--&lt;span class=&quot;post-meta-item-icon&quot;&gt;--&gt;</span><br><span class="line">        &lt;!--&lt;i class=&quot;fa fa-&#123;&#123; theme.busuanzi_count.total_visitors_icon &#125;&#125;&quot;&gt;&lt;/i&gt;--&gt;</span><br><span class="line">      &lt;!--&lt;/span&gt;--&gt;</span><br><span class="line">	  我的第</span><br><span class="line">      &lt;span class=&quot;site-uv&quot; title=&quot;&#123;&#123; __(&apos;footer.total_visitors&apos;) &#125;&#125;&quot;&gt;</span><br><span class="line">        &lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">	  位朋友</span><br><span class="line">    &lt;/span&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;span class=&quot;post-meta-item&quot; id=&quot;busuanzi_container_site_pv&quot; style=&quot;display: none;&quot;&gt;</span><br><span class="line">      &lt;!--&lt;span class=&quot;post-meta-item-icon&quot;&gt;--&gt;</span><br><span class="line">        &lt;!--&lt;i class=&quot;fa fa-&#123;&#123; theme.busuanzi_count.total_views_icon &#125;&#125;&quot;&gt;&lt;/i&gt;--&gt;</span><br><span class="line">      &lt;!--&lt;/span&gt;--&gt;</span><br><span class="line">	  历经</span><br><span class="line">      &lt;span class=&quot;site-pv&quot; title=&quot;&#123;&#123; __(&apos;footer.total_views&apos;) &#125;&#125;&quot;&gt;</span><br><span class="line">        &lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt;</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">	  次回眸才与你相遇</span><br><span class="line">    &lt;/span&gt;</span><br></pre></td></tr></table></figure>

<h3 id="2-3添加网站字数统计"><a href="#2-3添加网站字数统计" class="headerlink" title="2.3添加网站字数统计"></a>2.3添加网站字数统计</h3><p>安装<code>hexo-symbols-count-time</code>模块</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-symbols-count-time</span><br></pre></td></tr></table></figure>

<p>打开 <strong>主题配置文件</strong> 找到<code>symbols-count-time</code>字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  separated_meta: true</span><br><span class="line">  item_text_post: true</span><br><span class="line">  item_text_total: true</span><br><span class="line">  awl: 4</span><br><span class="line">  wpm: 275</span><br></pre></td></tr></table></figure>

<h3 id="2-4添加RSS订阅"><a href="#2-4添加RSS订阅" class="headerlink" title="2.4添加RSS订阅"></a>2.4添加RSS订阅</h3><p>有关什么是RSS的知识可以参考这篇文章<a href="https://juejin.im/post/5c382a326fb9a049f15469eb" target="_blank" rel="noopener">如何用RSS订阅？</a></p>
<p><strong>step1：</strong>安装<code>hexo-generator-feed</code>插件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>

<p><strong>step2：</strong>在<strong>站点配置文件</strong>的<code>Extensions</code>字段下添加配置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># RSS功能</span><br><span class="line">feed:</span><br><span class="line">    type: atom</span><br><span class="line">    path: atom.xml</span><br><span class="line">    limit: 20</span><br></pre></td></tr></table></figure>

<p>执行<code>hexo generator</code>命令在 <code>public</code> 文件夹中生成 <code>atom.xml</code> 文件</p>
<p>配置含义：</p>
<ul>
<li><code>type</code>: RSS的类型(atom/rss2)</li>
<li><code>path</code>: 文件路径，默认是 atom.xml/rss2.xml</li>
<li><code>limit</code>: 展示文章的数量,使用 0 或则 false 代表展示全所有的帖子</li>
<li><code>hub</code>: URL of the PubSubHubbub hubs (如果使用不到可以为空)</li>
<li><code>content</code>: （可选）设置 <code>true</code> 可以在 RSS 文件中包含文章全部内容，默认：false</li>
<li><code>content_limit</code>: （可选）摘要中使用的帖子内容的默认长度。 仅在内容设置为false且未显示自定义帖子描述时才使用。</li>
<li><code>content_limit_delim</code>: （可选）If content_limit is used to shorten post contents, only cut at the last occurrence of this delimiter before reaching the character limit. Not used by default.</li>
<li><code>order_by</code>: 订阅内容的顺序. (默认: -date)<br>（后面几个选项一般用不到，有两个也没找到比较准确的翻译，所以放上了原文，知道的小伙伴可以在下方评论）</li>
</ul>
<p><strong>step3：</strong>打开 <strong>主题配置文件</strong> 找到<code>rss</code>字段，添加值<code>&quot;atom.xml&quot;</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rss: &quot;atom.xml&quot;</span><br></pre></td></tr></table></figure>

<p>在菜单栏会生成RSS按钮</p>
<p><img alt="1571147556898" data-src="%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89-%E4%BC%98%E5%8C%96/1571147556898.png"></p>
<h3 id="2-5添加评论功能"><a href="#2-5添加评论功能" class="headerlink" title="2.5添加评论功能"></a>2.5添加评论功能</h3><p>之前使用过多种评论插件，从gitalk到livere（来必力），不过最后选择了<code>Valine</code>。</p>
<p> <code>Valine</code> 诞生于2017年8月7日，最初由<code>@云淡风轻</code>大佬开发（这里附上<a href="https://ioliu.cn/2017/add-valine-comments-to-your-blog/" target="_blank" rel="noopener">原文链接</a>），后又经过许多大佬的开发和维护，是一款基于<a href="https://leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a>的快速、简洁且高效的无后端评论系统。 </p>
<p><strong>step1：</strong>注册<a href="https://leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a>并创建一个开发版应用（免费）</p>
<p><img alt="1571148120730" data-src="%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89-%E4%BC%98%E5%8C%96/1571148120730.png"></p>
<p><strong>step2：</strong>在LeanCloud -&gt; 存储 -&gt; 创建Class -&gt; 无限制的Class</p>
<p><img alt="1571148298873" data-src="%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89-%E4%BC%98%E5%8C%96/1571148298873.png"></p>
<p><strong>step3：</strong>在LeanCloud-设置-把除数据存储其他选项都关闭。</p>
<p><img alt="1571148411537" data-src="%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89-%E4%BC%98%E5%8C%96/1571148411537.png"></p>
<p><strong>step4：</strong>设置安全域名</p>
<p><img alt="1571148593106" data-src="%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89-%E4%BC%98%E5%8C%96/1571148593106.png"></p>
<p><strong>step5：</strong>打开 <strong>主题配置文件</strong> ，配置文件中有两处<code>Valine</code>字段，它们分别如下所示</p>
<p>●这里的<code>valine</code>字段是填写<code>valine</code>脚本的源文件地址，可在<a href="https://www.jsdelivr.com/package/npm/valine" target="_blank" rel="noopener">此处</a>查看最新的<code>valine</code>脚本地址，将其链接复制下来填入到<code>valine</code>字段之后即可</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Valine</span><br><span class="line">  # Example:</span><br><span class="line">  # valine: //cdn.jsdelivr.net/npm/valine@1/dist/Valine.min.js</span><br><span class="line">  # valine: //cdnjs.cloudflare.com/ajax/libs/valine/1.3.4/Valine.min.js</span><br><span class="line">  valine: https://cdn.jsdelivr.net/npm/valine@1.3.10/dist/Valine.min.js</span><br></pre></td></tr></table></figure>

<p>●这里的<code>valine</code>字段是用来配置评论系统的，填写<code>appid</code>和<code>appkey</code>（在LeanCloud的设置-&gt;应用Keys中），其他字段可以根据提示自行配置，下面是我的配置。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Valine.</span><br><span class="line"># You can get your appid and appkey from https://leancloud.cn</span><br><span class="line"># more info please open https://valine.js.org</span><br><span class="line">valine:</span><br><span class="line">  enable: true # 为true时启用评论 </span><br><span class="line">  appid:  # your leancloud application appid 注意空一格再输入ID和key,这里填写上面得到的APP ID</span><br><span class="line">  appkey:  # your leancloud application appkey 这里填写上面得到的APP KEY</span><br><span class="line">  notify: false # mail notifier , https://github.com/xCss/Valine/wiki 是否开启新评论邮件通知</span><br><span class="line">  verify: false # Verification code 验证码</span><br><span class="line">  placeholder: 你的言论将上交国家,请注意文明用言,否则可能被拒收或查水表 ヾﾉ≧∀≦)o 来呀！吐槽一番吧！</span><br><span class="line">  				# 评论框中预设的文字,随意填写</span><br><span class="line">  avatar: mm 	# gravatar style 头像,采用gravatar头像,到http://cn.gravatar.com/了解</span><br><span class="line">  guest_info: nick,mail,link # 访客信息,显示在评论框上面,三者可随意选择或全选</span><br><span class="line">  pageSize: 10 # pagination size 评论分页大小</span><br></pre></td></tr></table></figure>

<h3 id="2-6相关文章推荐"><a href="#2-6相关文章推荐" class="headerlink" title="2.6相关文章推荐"></a>2.6相关文章推荐</h3><p><code>NexT</code>提供了相关文章推荐的功能，是借助<code>hexo-related-popular-posts</code>模块实现的，具体细节可以查看该模块的<a href="https://github.com/tea3/hexo-related-popular-posts" target="_blank" rel="noopener">GitHub地址</a> ，<code>hexo-related-popular-posts</code>模块可以实现<code>相关文章推荐</code>和<code>热门文章</code>的功能，我觉得自己的博客应该没有设置热门文章功能的必要hhh，所以只配置了相关文章推荐的功能。</p>
<p>效果展示：（会在根据博文的标签来匹配相关文章，在博文的下方生成相关文章列表）</p>
<p><img alt="1571202142784" data-src="%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89-%E4%BC%98%E5%8C%96/1571202142784.png"></p>
<p><strong>step1：</strong>打开控制台，定位到博客主目录，安装<code>quicklink</code>模块：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-related-popular-posts --save</span><br></pre></td></tr></table></figure>

<p><strong>step2：</strong>打开<strong>主题配置文件</strong>，找到<code>related_posts</code>字段，将<code>enable</code>设置为<code>true</code>，其他值采用默认即可。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">related_posts:</span><br><span class="line">  enable: true  #是否开启相关文章功能true|false</span><br><span class="line">  title: # 相关文章板块的标题，如上图为相关文章，可以自定义（如：这边还有相似的文章哟ˋ( ° ▽、° ) ），默认为“相关文章”</span><br><span class="line">  display_in_home: false  #是否在首页展示每篇博文的相关文章，会在摘要下方显示</span><br><span class="line">  params:                 </span><br><span class="line">    maxCount: 5			  #相关文章最多展示条数</span><br></pre></td></tr></table></figure>

<h3 id="2-7快速连接技术"><a href="#2-7快速连接技术" class="headerlink" title="2.7快速连接技术"></a>2.7快速连接技术</h3><p>什么是快速连接技术，下面是其<a href="https://github.com/GoogleChromeLabs/quicklink" target="_blank" rel="noopener">GitHub源地址</a>上给出的解释：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">通过在空闲时间预取视区内链接来加快后续页面加载速度</span><br></pre></td></tr></table></figure>

<p>按我的理解应该是在我们访问博文页面的时候，如果博文位于视区内的部分有网页链接，那么浏览器在空闲时会预加载该链接对应的页面以达到加快后续的访问速度的目的。</p>
<p><strong>step1：</strong>打开控制台，定位到博客主目录，安装<code>quicklink</code>模块：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install --save quicklink</span><br></pre></td></tr></table></figure>

<p><strong>step2：</strong>打开<strong>主题配置文件</strong>，找到<code>quicklink</code>字段，将<code>enable</code>设置为<code>true</code>，其他值采用默认即可。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">quicklink:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure>

<p>最后附上一篇大佬的文章<a href="https://yangbingdong.com/2017/build-blog-hexo-advanced/" target="_blank" rel="noopener">基于Hexo搭建个人博客——进阶篇(从入门到入土)</a></p>
]]></content>
      <categories>
        <category>technology</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title>利用Hexo+Next搭建个人博客（二）--使用next主题</title>
    <url>/%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%EF%BC%89-%E4%BD%BF%E7%94%A8next%E4%B8%BB%E9%A2%98/</url>
    <content><![CDATA[<p>Hexo有很多主题可供选择，想要了解详细内容可以看一下知乎上的这个问题<a href="https://www.zhihu.com/question/24422335" target="_blank" rel="noopener">有哪些好看的Hexo主题</a></p>
<p>最终我选择了next。</p>
<a id="more"></a>

<h2 id="1-下载next主题"><a href="#1-下载next主题" class="headerlink" title="1.下载next主题"></a>1.下载next主题</h2><p>访问<a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">next的github地址</a>，Clone or Download，将next的压缩包下载下来。</p>
<p><img alt="1571124461688" data-src="%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%EF%BC%89-%E4%BD%BF%E7%94%A8next%E4%B8%BB%E9%A2%98/1571124461688.png"></p>
<p>将压缩包解压到博客目录MyBlog1.1(我的博客目录的名称)下的themes文件夹中，并将其重命名为next</p>
<h2 id="2-配置next主题"><a href="#2-配置next主题" class="headerlink" title="2.配置next主题"></a>2.配置next主题</h2><p>首先进行一下文件说明，在 <code>Hexo</code> 项目源码目录下，有两个主要的配置文件，其名称都是 <code>_config.yml</code> 。 其中，一份位于站点根目录下，主要包含 <code>Hexo</code> 本身的配置；另一份位于<code>themes\next</code>目录下，这份配置由主题作者提供，主要用于主题相关的配置。为了描述方便，在以下说明中，将前者称为<strong>站点配置文件</strong>， 后者称为<strong>主题配置文件</strong>。</p>
<h3 id="2-1修改站点配置文件"><a href="#2-1修改站点配置文件" class="headerlink" title="2.1修改站点配置文件"></a>2.1修改站点配置文件</h3><p>打开<code>MyBlog1.1/</code>目录下的<strong>站点配置文件</strong><code>_config.yml</code>：</p>
<p>前期可以先只更改一处内容，把标题、子标题、作者等自定义一下，其他的可以以后有时间研究，例如我的</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: 槐雪</span><br><span class="line">subtitle: 愿你所有快乐无需假装，愿你此生尽兴赤诚善良</span><br><span class="line">description: 个人博客</span><br><span class="line">keywords:</span><br><span class="line">author: Monodrama</span><br><span class="line">language: zh-CN</span><br><span class="line">timezone: Asia/Shanghai</span><br></pre></td></tr></table></figure>

<p>关于站点配置文件的详细说明，可以查看 <a href="http://lvxuefei.top/2019/10/17/Hexo%E7%AB%99%E7%82%B9%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%B4%E6%98%8E/#more" target="_blank" rel="noopener">Hexo站点配置文件说明</a></p>
<h3 id="2-2修改主题配置文件"><a href="#2-2修改主题配置文件" class="headerlink" title="2.2修改主题配置文件"></a>2.2修改主题配置文件</h3><p>打开<code>MyBlog1.1\themes\next</code>目录下的<code>_config.yml</code><strong>主题配置文件</strong></p>
<h4 id="选择scheme"><a href="#选择scheme" class="headerlink" title="选择scheme"></a>选择scheme</h4><p>Next提供了四种不同的外观，在<strong>主题配置文件</strong>中找到Scheme Setting，根据个人喜好选择scheme</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Scheme Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Schemes</span><br><span class="line">#scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br><span class="line">scheme: Gemini</span><br></pre></td></tr></table></figure>

<p><strong>Muse：</strong></p>
<p><img alt="1571127888685" data-src="%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%EF%BC%89-%E4%BD%BF%E7%94%A8next%E4%B8%BB%E9%A2%98/1571127888685.png"></p>
<p><img alt="1571127946997" data-src="%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%EF%BC%89-%E4%BD%BF%E7%94%A8next%E4%B8%BB%E9%A2%98/1571127946997.png"></p>
<p><strong>Mist：</strong></p>
<p><img alt="1571127990295" data-src="%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%EF%BC%89-%E4%BD%BF%E7%94%A8next%E4%B8%BB%E9%A2%98/1571127990295.png"></p>
<p><img alt="1571128002536" data-src="%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%EF%BC%89-%E4%BD%BF%E7%94%A8next%E4%B8%BB%E9%A2%98/1571128002536.png"></p>
<p><strong>Pisces：</strong></p>
<p><img alt="1571128052963" data-src="%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%EF%BC%89-%E4%BD%BF%E7%94%A8next%E4%B8%BB%E9%A2%98/1571128052963.png"></p>
<p><strong>Gemini：</strong></p>
<p><img alt="1571128085907" data-src="%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%EF%BC%89-%E4%BD%BF%E7%94%A8next%E4%B8%BB%E9%A2%98/1571128085907.png"></p>
<h4 id="设置菜单"><a href="#设置菜单" class="headerlink" title="设置菜单"></a>设置菜单</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">菜单包括：首页、归档、分类、标签、关于等等</span><br></pre></td></tr></table></figure>

<p>我们刚开始默认的菜单只有首页和归档两个，不能够满足我们的要求。</p>
<p><img alt="1571128525006" data-src="%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%EF%BC%89-%E4%BD%BF%E7%94%A8next%E4%B8%BB%E9%A2%98/1571128525006.png"></p>
<p>所以需要添加菜单，打开 <strong>主题配置文件</strong> 找到<code>Menu Settings</code>，根据个人需要选择，将前面的#去掉即可</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Menu Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">menu:</span><br><span class="line">  home: / || home                      #首页</span><br><span class="line">  #about: /about/ || user              #关于</span><br><span class="line">  #tags: /tags/ || tags                #标签</span><br><span class="line">  #categories: /categories/ || th	   #分类</span><br><span class="line">  archives: /archives/ || archive      #归档</span><br><span class="line">  #schedule: /schedule/ || calendar	   #日程表</span><br><span class="line">  #sitemap: /sitemap.xml || sitemap    #站点地图</span><br><span class="line">  #commonweal: /404/ || heartbeat      #公益404</span><br></pre></td></tr></table></figure>

<p><strong>初始化对应的Menu文件夹</strong></p>
<p>去掉#后，还要初始化每个菜单项对应的页面的内容</p>
<p>比如要创建tages页面，需要在命令行中输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new page &quot;tags&quot;</span><br></pre></td></tr></table></figure>

<p><img alt="1571128990055" data-src="%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%EF%BC%89-%E4%BD%BF%E7%94%A8next%E4%B8%BB%E9%A2%98/1571128990055.png"></p>
<p>这时会在<code>MyBlog1.1\source\</code>目录下生成一个名为tags的文件夹</p>
<p>编辑/source/tags/index.md文件为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: tags</span><br><span class="line">date: 2019-10-05 16:02:39</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure>

<p>增加对应的type字段，其中<code>comments</code>字段是控制评论功能的，关于添加评论功能会在后面讲到。</p>
<p>其他页面同理。</p>
<p>其中，tags、archives与categories等动态生成的页面会随着我们博文的更新而不断增加内容。</p>
<p>假入我写了一篇博文，给它加了一个名为tag_demo的标签，那么在tags页就会自动增加tag_demo这个标签，有关如何推送博文以及博文的格式会在后文<strong>创建一篇文章中</strong>讲到。</p>
<p>再者就是about等需要我们自定义的页面，打开<code>MyBlog.1.1\source\about\index.md</code></p>
<p>添加自定义内容</p>
<p><img alt="1571129951601" data-src="%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%EF%BC%89-%E4%BD%BF%E7%94%A8next%E4%B8%BB%E9%A2%98/1571129951601.png"></p>
<p>至此，我们已经拥有了一个简单实用的个人博客了，下面介绍如何发博文。</p>
<h2 id="3-创建一篇文章"><a href="#3-创建一篇文章" class="headerlink" title="3.创建一篇文章"></a>3.创建一篇文章</h2><p>执行命令创建一篇文章</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new &apos;测试文章&apos;</span><br></pre></td></tr></table></figure>

<p>我们发现在<code>MyBlog1.1\source\_posts\</code>目录下生成了测试文章.md。</p>
<p>看到.md后缀应该可以知道hexo的文章支持markdown语法，至于markdown语法是什么就不再赘述，可以借助搜索引擎自行学习。</p>
<p>编辑测试文章.md的内容为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 测试文章</span><br><span class="line">date: 2019-08-11 23:06:42</span><br><span class="line">tags: </span><br><span class="line">  - 标签1</span><br><span class="line">  - 标签2</span><br><span class="line">categories:</span><br><span class="line">  - 目录1</span><br><span class="line">  - 目录1的子目录</span><br><span class="line">photo: http://ww1.sinaimg.cn/large/007oltUXgy1g5egxq0hrhj33282ao7wj.jpg</span><br><span class="line">---</span><br><span class="line">这是摘要</span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line">以下是正文</span><br><span class="line"># 标题1</span><br><span class="line">1</span><br><span class="line">## 标题2</span><br><span class="line">2</span><br></pre></td></tr></table></figure>

<p>简单介绍一下文章前面的配置字段：</p>
<p>其中<code>tags</code>为文章标签，格式如上，标签之间为并列关系，如下：</p>
<p><img alt="1571131884715" data-src="%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%EF%BC%89-%E4%BD%BF%E7%94%A8next%E4%B8%BB%E9%A2%98/1571131884715.png"></p>
<p><code>catagories</code>为文章目录，格式如上，目录之间为包含关系，下面的目录是上面的目录的子目录，如下：</p>
<p><img alt="1571131852134" data-src="%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%EF%BC%89-%E4%BD%BF%E7%94%A8next%E4%B8%BB%E9%A2%98/1571131852134.png"></p>
<p><code>photo</code>为文章的封面，是可选字段，加入之后会在首页中展示该篇文章的封面，不加入则只会显示文章摘要。</p>
<p><code>&lt;!--more--&gt;</code>字段之前为文章摘要，会在首页中显示。</p>
<p>通过命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>

<p>发布文章。</p>
<p>不过每次发布前，建议先执行<code>hexo clean</code>和<code>hexo generate</code>进行清理编译。</p>
<p>发布后可在<code>http://yourgithubname.github.io</code>上查看。</p>
]]></content>
      <categories>
        <category>technology</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title>利用Hexo+Next搭建个人博客（一）--初始化demo</title>
    <url>/%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89-%E5%88%9D%E5%A7%8B%E5%8C%96demo/</url>
    <content><![CDATA[<p>之前第一次搭博客花了两天左右，网上搜各种教程，但是各种教程对应的版本较为混乱，导致最后博客出现了一些小bug，虽然不影响使用，但是强迫症犯了X﹏X，就准备再搭一个然后把之前的博文迁移过去，写下这个系列博客以做记录吧~</p>
<a id="more"></a>

<h2 id="0-前提准备："><a href="#0-前提准备：" class="headerlink" title="0.前提准备："></a>0.前提准备：</h2><p>▣一个GitHub账号</p>
<p>▣安装Git，详情可以看<a href="https://www.liaoxuefeng.com/wiki/896043488029600" target="_blank" rel="noopener">廖雪峰老师的git教程</a></p>
<p>▣安装Node.js<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a></p>
<p>▣npm包管理器</p>
<h2 id="1-安装Hexo"><a href="#1-安装Hexo" class="headerlink" title="1.安装Hexo"></a>1.安装Hexo</h2><p>新建博客文件夹，命名为MyBlog1.1</p>
<p>cmd打开命令行控制器，cd到MyBlog1.1文件夹下，输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install i -g hexo</span><br></pre></td></tr></table></figure>

<p>确认是否安装成功：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure>

<p><img alt="1571106524090" data-src="%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89-%E5%88%9D%E5%A7%8B%E5%8C%96demo/1571106524090.png"></p>
<h2 id="2-初始化博客"><a href="#2-初始化博客" class="headerlink" title="2.初始化博客"></a>2.初始化博客</h2><p>初始化博客：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure>

<p>成功后结果如下：</p>
<p><img alt="1571106712512" data-src="%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89-%E5%88%9D%E5%A7%8B%E5%8C%96demo/1571106712512.png"></p>
<p>▣简单解释各文件夹的作用</p>
<p><code>node_modules</code>：依赖包</p>
<p><code>scaffolds</code>：命令生成文章等的模板</p>
<p><code>source</code>：自己推送的博文以及各种默认页面都存放在这个文件夹下</p>
<p><code>themes</code>：存放Hexo的主题，我用的是Next（想要了解更多主题可以看一下知乎上的这篇回答<a href="https://www.zhihu.com/question/24422335" target="_blank" rel="noopener">有哪些好看的Hexo主题</a>）</p>
<p><code>_config.yml</code>：整个博客的配置</p>
<p><code>package.json</code>：项目所需模块项目的配置信息</p>
<p>▣到这一步，你已经可以有点小小的成就感回馈了，在博客目录下输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure>

<p>在浏览器中打开<a href="http://localhost:4000，你可以看到以下界面，这是Hexo的默认界面，想要更好看就要为它配置主题了，关于主题配置会在下面写到。" target="_blank" rel="noopener">http://localhost:4000，你可以看到以下界面，这是Hexo的默认界面，想要更好看就要为它配置主题了，关于主题配置会在下面写到。</a></p>
<p><img alt="1571107080136" data-src="%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89-%E5%88%9D%E5%A7%8B%E5%8C%96demo/1571107080136.png"></p>
<p><code>Ctr+C</code>关闭服务</p>
<h2 id="3-将博客部署到GitHub上"><a href="#3-将博客部署到GitHub上" class="headerlink" title="3.将博客部署到GitHub上"></a>3.将博客部署到GitHub上</h2><p>但是我们现在只是初步地将我们的个人博客部署到了我们的本地电脑上，只能通过localhost访问，想要将博客部署到互联网上使别人能够访问的话，还要借助github的github pages功能（当然github pages只是一个选择，还可以选择Coding等来部署我们的个人博客）。</p>
<h3 id="3-1新建仓库"><a href="#3-1新建仓库" class="headerlink" title="3.1新建仓库"></a>3.1新建仓库</h3><p>在github上新建一个名为<code>你的用户名.github.io</code>的仓库，比如说，如果你的github用户名是test，那么你就新建<code>test.github.io</code>的仓库（必须是你的用户名，其它名称无效），将来你的网站访问地址就是 <a href="http://test.github.io/" target="_blank" rel="noopener">http://test.github.io</a> 了。</p>
<p><img alt="1571108405499" data-src="%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89-%E5%88%9D%E5%A7%8B%E5%8C%96demo/1571108405499.png"></p>
<h3 id="3-2配置SSH-Key"><a href="#3-2配置SSH-Key" class="headerlink" title="3.2配置SSH Key"></a><strong>3.2配置SSH Key</strong></h3><p>之前配置过的可以跳过</p>
<p>查看是否已经有ssh密钥</p>
<p>打开用户主目录，查找.ssh文件夹</p>
<p><img alt="1571108450226" data-src="%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89-%E5%88%9D%E5%A7%8B%E5%8C%96demo/1571108450226.png"></p>
<ul>
<li><p>如果有，再看看这个目录下有没有id_rsa和id_rsa.pub这两个文件。如果有，可以直接跳至下一小节“修改配置以关联github”</p>
</li>
<li><p>如果已经有ssh密钥，想要重新生成ssh密钥，需要清理原有ssh密钥：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ mkdir key_backup</span><br><span class="line">$ cp id_rsa* key_backup</span><br><span class="line">$ rm id_rsa*</span><br></pre></td></tr></table></figure>
</li>
<li><p>如果没有，打开命令行，输入命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa –C “youremail@example.com”</span><br></pre></td></tr></table></figure>

<p>此处的邮箱地址为你自己的邮箱地址。一路Enter过来就好，得到信息：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Your public key has been saved in /c/Users/user/.ssh/id_rsa.pub.</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p>找到该文件，打开，复制里面的所有内容，然后进入Sign in to GitHub：<a href="https://github.com/settings/ssh" target="_blank" rel="noopener">https://github.com/settings/ssh</a></p>
<p>New SSH key —&gt;Title：blog —&gt; Key：输入刚才复制的—&gt; Add SSH key</p>
<h3 id="3-3修改配置以关联github"><a href="#3-3修改配置以关联github" class="headerlink" title="3.3修改配置以关联github"></a>3.3修改配置以关联github</h3><p>打开MyBlog1.1文件夹，打开博客配置文件<code>_config.yml</code>,修改一些基础配置（<strong>记得冒号后必须有空格，不然配置不生效！</strong>）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">    type: git</span><br><span class="line">    repo: https://github.com/YourgithubName/YourgithubName.github.io.git</span><br><span class="line">    branch: master</span><br></pre></td></tr></table></figure>

<h3 id="3-4最后一步，上传到Github"><a href="#3-4最后一步，上传到Github" class="headerlink" title="3.4最后一步，上传到Github"></a>3.4最后一步，上传到Github</h3><p>上传到Github</p>
<ul>
<li>需要先安装Hexo上传仓库的工具，执行<code>npm install hexo-deployer-git --save</code>，这样你写好的文章才能部署到github服务器。</li>
<li>执行命令（建议每次都这样做，先清除、再编译上传）</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>

<ul>
<li>在浏览器输入<code>http://yourgithubname.github.io</code>，这样你就可以看到自己的在线博客了~</li>
</ul>
<p>参考：<a href="https://juejin.im/post/5abcd2286fb9a028d66440ba" target="_blank" rel="noopener">手把手教你用Hexo搭建个人技术博客</a></p>
<p>​            <a href="https://zhuanlan.zhihu.com/p/26625249" target="_blank" rel="noopener">GitHub+Hexo 搭建个人网站详细教程</a></p>
]]></content>
      <categories>
        <category>technology</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title>利用ETL工具Kettle（Pentaho Data Integration）将csv文件导入sql server数据库</title>
    <url>/%E5%88%A9%E7%94%A8ETL%E5%B7%A5%E5%85%B7Kettle%EF%BC%88Pentaho-Data-Integration%EF%BC%89%E5%B0%86csv%E6%96%87%E4%BB%B6%E5%AF%BC%E5%85%A5sql-server%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    <content><![CDATA[<h1 id="0-预装环境"><a href="#0-预装环境" class="headerlink" title="0.预装环境"></a>0.预装环境</h1><p>jdk1.8（我测试的结果是java SE 13不适配kettle8.3.0.0-371，虽然可以打开kettle，但是无法创建数据库连接，把新版本java卸了重新安装旧版本也是一件挺麻烦的事）</p>
<a id="more"></a>

<h2 id="1-下载开源ETL工具："><a href="#1-下载开源ETL工具：" class="headerlink" title="1.下载开源ETL工具："></a>1.下载开源ETL工具：</h2><p>Pentaho Kettle：<a href="https://community.hitachivantara.com/s/article/downloads" target="_blank" rel="noopener">https://community.hitachivantara.com/s/article/downloads</a> 网页中的Data Integration</p>
<p>下载好后为一压缩文件，将压缩文件解压到任意文件夹即可，解压后内容如下。</p>
<p><img alt="1569824832312.png" data-src="http://ww1.sinaimg.cn/large/007oltUXly1g7r0x3p1lcj30o50j8abw.jpg"></p>
<p>单击<strong>Spoon.bat</strong>，打开kettle，第一次打开大概要等几分钟。</p>
<p><img alt="1569825081518.png" data-src="http://ww1.sinaimg.cn/large/007oltUXly1g7r0xe9ty2j30o50j7mzh.jpg"></p>
<p>打开后界面如下</p>
<p><img alt="1569825417291.png" data-src="http://ww1.sinaimg.cn/large/007oltUXly1g7r0xtxxtlj31hc0smjt6.jpg"></p>
<p>如果点开十分钟仍没有任何反应，可以以记事本方式打开Spoon.bat并修改Spoon.bat里面的内容，<strong>将-Xms与-Xmx后的参数全改为512</strong>，之后重新打开。</p>
<p><img alt="1569825309180.png" data-src="http://ww1.sinaimg.cn/large/007oltUXly1g7r0y75mj2j310c00vgli.jpg"></p>
<h2 id="2-安装sql-server"><a href="#2-安装sql-server" class="headerlink" title="2.安装sql server"></a>2.安装sql server</h2><p>网上sql server的安装教程有很多，不再赘述。</p>
<p>安装后有以下工具</p>
<p><img alt="1569825491401.png" data-src="http://ww1.sinaimg.cn/large/007oltUXly1g7r0yd85inj308v0a1gny.jpg"></p>
<h2 id="3-使用Kettle将CSV文件内容导入sql-server数据库"><a href="#3-使用Kettle将CSV文件内容导入sql-server数据库" class="headerlink" title="3.使用Kettle将CSV文件内容导入sql server数据库"></a>3.使用Kettle将CSV文件内容导入sql server数据库</h2><h3 id="3-1配置sql-server"><a href="#3-1配置sql-server" class="headerlink" title="3.1配置sql server"></a>3.1配置sql server</h3><p>在开始正式步骤之前，需修改一下sql server的网络配置，打开<strong>SQL Server 2107 配置管理器</strong>，右键SQL Native Client11.0配置的客户端协议中的TCP/IP选项，将其设为启用状态。</p>
<p><img alt="1569825801763.png" data-src="http://ww1.sinaimg.cn/large/007oltUXly1g7r0ylmudtj30wu0oujtt.jpg"></p>
<p>将SQL Server服务中的三个服务全设置为运行状态</p>
<p><img alt="1569825889686.png" data-src="http://ww1.sinaimg.cn/large/007oltUXly1g7r0yuxp14j30wu0ou0w0.jpg"></p>
<p>打开<strong>Microsoft SQL Server Management Studio</strong>，采用默认方式，直接单击连接</p>
<p><img alt="1569826016006.png" data-src="http://ww1.sinaimg.cn/large/007oltUXly1g7r0z6vxgqj31c00ph75m.jpg"></p>
<p>打开左侧面板：安全性—&gt;登录名，右键用户sa，选择属性，这里可以设置用户sa的密码，直接在密码框中输入即可</p>
<p><img alt="1569826170590.png" data-src="http://ww1.sinaimg.cn/large/007oltUXly1g7r0ze6aitj31c00phju0.jpg"></p>
<p>单击sa属性窗口左侧的<strong>状态</strong>项，将<strong>登录名</strong>设置为启用状态。</p>
<p><img alt="1569826298788.png" data-src="http://ww1.sinaimg.cn/large/007oltUXly1g7r0zp6j6cj31c00ph0v6.jpg"></p>
<p>至此，SQL Server前期配置完成。</p>
<h3 id="3-2下载jTDS-SQL-Server-and-Sybase-JDBC-driver"><a href="#3-2下载jTDS-SQL-Server-and-Sybase-JDBC-driver" class="headerlink" title="3.2下载jTDS - SQL Server and Sybase JDBC driver"></a>3.2下载jTDS - SQL Server and Sybase JDBC driver</h3><p>Java连接SQL Server 2000数据库时，有两种方法：</p>
<p>（1）通过Microsoft的JDBC驱动连接。但是该种方法目前已不适用。</p>
<p>驱动程序名称：com.microsoft.jdbc.sqlserver.SQLServerDriver</p>
<p>（2）通过jTDS驱动连接。下载地址：<a href="http://sourceforge.net/projects/jtds/files/jtds/" target="_blank" rel="noopener">http://sourceforge.net/projects/jtds/files/jtds/</a></p>
<p>驱动程序名称：net.sourceforge.jtds.jdbc.Driver</p>
<p>下载jTDS - SQL Server and Sybase JDBC driver，将压缩文件中的jtds-1.3.1.jar包放入kettle的lib文件夹下</p>
<p><img alt="1569829056661.png" data-src="http://ww1.sinaimg.cn/large/007oltUXly1g7r10knjf5j30n20k0ab5.jpg"></p>
<p>kettle配置完成</p>
<h3 id="3-3将csv文件导入sql-server数据库"><a href="#3-3将csv文件导入sql-server数据库" class="headerlink" title="3.3将csv文件导入sql server数据库"></a>3.3将csv文件导入sql server数据库</h3><p>新建test.csv文件，输入测试内容</p>
<p><img alt="1569826865642.png" data-src="http://ww1.sinaimg.cn/large/007oltUXly1g7r10rkevpj30kg0anaar.jpg"></p>
<p>打开<strong>Microsoft SQL Server Management Studio</strong>，在左侧栏右键数据库-&gt;新建数据库，输入数据库名称test</p>
<p><img alt="1569827260933.png" data-src="http://ww1.sinaimg.cn/large/007oltUXly1g7r110mrmoj30ph0juwet.jpg"></p>
<p>打开左侧面板test-&gt;表，右键表-&gt;新建-&gt;表，命名为csv_to_db，插入列ID，NAME，RELEASE_TIME，点击保存</p>
<p><img alt="1569827316253.png" data-src="http://ww1.sinaimg.cn/large/007oltUXly1g7r118mhdgj31c00phtat.jpg"></p>
<p><img alt="1569829543759.png" data-src="http://ww1.sinaimg.cn/large/007oltUXly1g7r11t1jgzj31c00le0uk.jpg"></p>
<p>打开kettle，文件-&gt;新建-&gt;转换，新建转换</p>
<p><img alt="1569827001843.png" data-src="http://ww1.sinaimg.cn/large/007oltUXly1g7r1274esnj31hc0smq4u.jpg"></p>
<p>在主对象树中，右键DB连接-&gt;新建数据库连接</p>
<p>参数如下：</p>
<p>主机名称：localhost或127.0.0.1均可</p>
<p>数据库名称：将要连接的数据库名称，这里为test</p>
<p>实例名称：空</p>
<p>端口号：默认为1433</p>
<p>用户名：我们在前面设置为启用状态的登录名sa</p>
<p>密码：在前面为sa设置的密码</p>
<p><img alt="1569827700107.png" data-src="http://ww1.sinaimg.cn/large/007oltUXly1g7r12o7ywxj30xw0ihaax.jpg"></p>
<p>点击测试，如下即为连接成功</p>
<p><img alt="1569827858731.png" data-src="http://ww1.sinaimg.cn/large/007oltUXly1g7r130gf27j30xw0ih75i.jpg"></p>
<p>单击kettle左侧栏核心对象，在输入栏下将csv文件拖入工作区</p>
<p><img alt="1569827998760.png" data-src="http://ww1.sinaimg.cn/large/007oltUXly1g7r1394tenj31hc0smq5a.jpg"></p>
<p>双击csv文件输入图标，选择数据源，点击获取字段，确认，之后确定</p>
<p><img alt="1569828077122.png" data-src="http://ww1.sinaimg.cn/large/007oltUXly1g7r13ss98gj30qo0sewfj.jpg"></p>
<p>在输出栏将表输出拖入工作区，按住shift利用鼠标从csv文件输入拖到表输出，点击主输出步骤</p>
<p><img alt="1569828130523.png" data-src="http://ww1.sinaimg.cn/large/007oltUXly1g7r14crvjrj31hc0smwgo.jpg"></p>
<p>双击表输出，选择数据库连接test，浏览目标表，选择上面新建的csv_to_db，勾选指定数据库字段，点击获取字段</p>
<p><img alt="1569828267096.png" data-src="http://ww1.sinaimg.cn/large/007oltUXly1g7r14jhk75j30ro0set9n.jpg"></p>
<p>点击输入字段映射，此时会报出提示，继续点击确定，选择csv中要映射的数据库表字段，单击ADD</p>
<p><img alt="1569828365147.png" data-src="http://ww1.sinaimg.cn/large/007oltUXly1g7r14r1w7zj31200p1aa9.jpg"></p>
<p><img alt="1569828590146.png" data-src="http://ww1.sinaimg.cn/large/007oltUXly1g7r14y10u6j31200se0t4.jpg"></p>
<p>确定后，点击工作区上侧的运行，转换成功</p>
<p><img alt="1569828699761.png" data-src="http://ww1.sinaimg.cn/large/007oltUXly1g7r154nmsnj31hc0smgou.jpg"></p>
<p>转换成功，可在<strong>Microsoft SQL Server Management Studio</strong>中通过sql语句查询查看结果（没找到像oracle数据库中那样可以直接查看表内容的方法，只能用sql语句了）。</p>
<p>右键test-&gt;新建查询</p>
<p><img alt="1569829169151.png" data-src="http://ww1.sinaimg.cn/large/007oltUXly1g7r15bvaj0j31c00legng.jpg"></p>
<p>输入查询语句，结果如下</p>
<p><img alt="1569829711152.png" data-src="http://ww1.sinaimg.cn/large/007oltUXly1g7r15o871vj31c00oq41w.jpg"></p>
]]></content>
      <categories>
        <category>technology</category>
        <category>数据仓库</category>
      </categories>
      <tags>
        <tag>SQL Server</tag>
        <tag>Kettle</tag>
      </tags>
  </entry>
  <entry>
    <title>山川过雨晓光浮，初看江南第一州</title>
    <url>/%E5%8D%97%E4%BA%AC/</url>
    <content><![CDATA[<h3 id="南京二日"><a href="#南京二日" class="headerlink" title="南京二日"></a>南京二日</h3><p>南京很大，但南京城真的不算大，因此，南京城里的景点间都离得很近，光说不算，看图说话：</p><a id="more"></a>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5w5dd669cj30cy0n5jy6.jpg"></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5w5dpusr5j30hf0ly13s.jpg"></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5w5fakzxcj304u00d741.jpg"></p>
<p><em>同一比例尺下的南京与上海（图中圈出的为主要景点的分布区域，当然可能并不完全准确）</em></p>
<br>

<br>

<p>南京与上海同为6000多万平方公里，但上海几乎处处皆城，而南京城只居于南京的中心，要想逛完上海免不了动辄以小时为计的奔波，而南京则不至于如此麻烦。</p>
<p>说了那么多，只是想突出一点，南京的各个景点都离得很近，并且都在城内，交通便捷，因此安排行程还是比较方便的。</p>
<p>由于在上海已经跑了三天，加上天气炎热，因此在南京游的景点并不算多。</p>
<br>

<br>

<p><strong><em>8.7晚23：00到南京，住新街口莫泰168</em></strong></p>
<p>关于住宿问题，建议住在离新街口或夫子庙较近的地方，交通方便，离各个景点也比较近。</p>
<p>比较推荐民宿（木鸟短租app），同样的价格，能得到更好的住宿体验，毕竟一个舒适的住宿环境能极大地提升旅游的体验。（住不惯民宿的话，选择酒店时可以参考各大app上的评价，如美团，携程，去哪儿，大众点评等）</p>
<br>



<br>

<p><strong><em>8.8</em></strong></p>
<p><strong><em>上午10：00，骑行，新街口——&gt;夫子庙附近莲湖糕团店，吃早饭</em></strong>!</p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uvi3hvtjj32ao328u0y.jpg"></p>
<p><em>赤豆莲子元宵+牛肉锅贴</em></p>
<br>

<br>

<p>餐厅在景区附近，价格可以说是很良心了，第一口下去的赤豆莲子元宵令人欲罢不能，在这里借用知乎上的一段评价：“这碗元宵色泽乌黑，口感浓稠粘糯，小火慢炖将所有食材的外形化解，逼出所有的味道，任他们互相拥抱融合。红豆被细细地磨成了没有脾气的末，释放出清香，而在这香味之中又蕴含着桂花的香气，才品出了桂花的香气，又嚼出了炖得柔软的莲子的清甜微苦，方吃出莲子的滋味，又触到稀烂的红枣的香甜，所有这些味道都在白糖的甜味上铺陈开来，甘甜清香、软糯细腻，这一切，却都隐藏在其貌不扬的黑之中。品完赤豆元宵之后回头再看它，便不敢小瞧这黑乎乎的甜品，只觉得自己捧着喝下的，是一碗黑夜中的璀璨星空。”</p>
<p>当然个人体验也是不错的，不过仅限于前几口，再多吃就会甜到发腻了，两人一碗足矣，另外牛肉锅贴味道也是不错的。</p>
<br>

<br>

<p><strong><em>上午11：00—下午16：00游夫子庙及周围景点</em></strong></p>
<p>南京的景点分布比较密集，往往一个景点附近会有大大小小近十个景点，可以说可玩性极强，只夫子庙附近就有中国科举博物馆，乌衣巷，王导谢安纪念馆，李香君故居，以及夜泊秦淮的游船可以体验。</p>
<p>金陵素有“六朝古都，十朝都会”之美称，游览历史文化之地时，不免时时驻足逗留，以致打乱了原有的计划，不得已取消了许多行程。仅夫子庙周边便花费了一天的时间（当然这也与起床太晚脱不了干系╮(╯▽╰)╭）</p>
<p>夫子庙一众景点位于古秦淮风光带，其以夫子庙古建筑群为中心、十里秦淮为轴线、明城墙为纽带，串联起众多全国重点文物保护单位、省级和市级文物保护单位，以儒家思想与科举文化、民俗文化等为内涵，集自然风光、山水园林、庙宇学堂、街市民居、乡土人情、美食购物、科普教育、节庆文化于一体，是南京历史文化荟萃之地。</p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uwdjd9fsj32ao2h24qp.jpg"></p>
<p><em>古秦淮</em></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uzjc3stwj332820o1c7.jpg"></p>
<p><em>天下文枢</em></p>
<br>

<br>

<p> <strong>夫子庙—学生￥15/人，游览时间1h</strong></p>
<p>注：夫子庙及王导谢安纪念馆的门票是有联票的，要比分开买便宜，建议在乌衣巷王导谢安纪念馆门口售票处买联票。</p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uwa05mlcj329e30idrz.jpg"></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uwi9th1gj33282ao7vr.jpg"></p>
<p><em>夫子庙—大成殿</em></p>
<br>

<br>

<p>夫子庙景点由孔庙、学宫、贡院三大建筑群组成，其中浓缩了中国千年的儒家文化与几百年的科举文化</p>
<br>

<br>

<p><strong>王导谢安纪念馆—学生￥4/人，游览时间20min</strong></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uwqcl37bj33282aonc4.jpg"></p>
<p><em>“朱雀桥边野草花，乌衣巷口夕阳斜”</em></p>
<br>

<br>

<p>王导谢安纪念馆与李香君故居就在乌衣巷内，乌衣巷很短，短到不需百步就能走完，但这里却寄寓着无数读过刘禹锡的那首诗的中国人的纷繁想象。</p>
<br>

<br>

<p><strong>李香君故居—学生￥8/人，游览时间20min</strong></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uxjlcsosj31vj328ap5.jpg"></p>
<p><em>”舞低杨柳楼心月，歌尽桃花扇底风“</em></p>
<br>

<br>

<p>李香君是秦淮河畔媚香楼里的红姑娘，今时的李香君故居便是当年的媚香楼了，媚香楼建得精巧别致，临水而立，站在楼上凭栏而望，烟水澄碧、画舫织彩的秦淮河尽收眼底。楼中别有洞天，甚是精致，站在楼中想象当年李香君与一众才子摇琴鼓瑟，吟诗作赋的景象，倒也别有一番趣味。</p>
<br>

<br>

<p><strong>中国科举博物馆—学生￥25/人（南北馆联票），游览时间1h30min</strong></p>
<p>科举博物馆，顾名思义，为中国科举文化的集中展示。其中南馆比较小，由一些古建筑组成，多展示一些古代学子科举时所用的物品和一些由科举制度衍生出来的传统文化。</p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uxk5fr0wj32xm278nff.jpg"></p>
<p><em>坐在南馆的走廊上，对面是文德桥，桥的左边便是乌衣巷</em></p>
<br>

<br>

<p>北馆是名副其实的现代博物馆，有地下三层地上一层共四层，主体长36米，宽36米，高20米，整体沉入地下，上部为方形浅水池，参观者穿过贡院牌坊，与明远楼相对，博物馆如同一面古镜，将明远楼的倒影收入其中。明远楼前的池水面积刚好1300平米，巧妙的用横向的面积寓意纵向的过去1300年的科举历史。</p>
<p>博物馆从地面下去，一共4层130米，一米抵十年，刚好再次寓意科举1300年的历史。走完博物馆，也就走过了1300年科举泱泱历史。建筑风格四四方方，像米字格似有棱有角。如鱼鳞一般的瓦片外墙，用书简堆砌而成的内墙，设计感十足又不乏历史味道。</p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uxxew10tj32ww1ts7fq.jpg"></p>
<p><em>北馆上部的浅水池</em></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uxy93ie9j33282ao4f2.jpg"></p>
<p><em>鱼鳞般的瓦片外墙</em></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uxysmm72j33282ao7wh.jpg"></p>
<p><em>馆内的文字墙</em></p>
<br>

<br>

<p>至此古秦淮夫子庙风光带游览完毕，不过最后没有夜泊秦淮有点遗憾</p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uy3msebrj31xf2xoe0v.jpg"></p>
<br>

<br>

<p>回住处稍作休整后，夜往先锋书店。</p>
<br>

<br>

<p><strong>先锋书店，游览时间视个人喜好而定</strong></p>
<p>提到先锋书店（注：一般提到先锋书店默认的是五台山总店，莫要找错），让我们先看一看它的名气从何而来，2013年，CNN专题报道先锋书店，赞称“中国最美书店”。 2014年3月，被英国广播公司BBC评为全球十大最美书店。2015年6月，被英国卫报评为“全球十二家最美书店”。2015年8月，美国有线电视新闻网（CNN）选出17家“全球最酷书店”，先锋书店名列其中。2016年3月，美国《国家地理》评选出全球十大书店，南京先锋书店入选，系亚洲唯一入选书店。</p>
<p>书店给我留下的最深刻的印象便是其内部设计的巧妙了，利用一个90°转角与一个斜坡给人两度柳暗花明的感觉，店中书香氤氲，灯光也很舒服，阅读体验上佳（羡慕南大了(っ*´Д`)っ，离得那么近），里面还有很多漂亮的明信片。</p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uyf5xepxj33282aogr6.jpg"></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uyg2uu6cj32y227kn67.jpg"></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uyg9y0yzj32ao328wzy.jpg"></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uzku24rmj32ao328jzy.jpg"></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uygfeor1j32ao3281j0.jpg"></p>
<p><em>像这样的明信片墙，书店中还有好几面</em></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uylf1d9mj30vu125k4r.jpg"></p>
<p><em>挑了一本书回来(≖◡≖)</em></p>
<br>

<br>

<p><strong>8.9</strong></p>
<p><strong>10：00—10：40新街口—中山陵 乘地铁（下马坊站下）</strong></p>
<p>中山陵建议提前一至两天预约，可在”钟山风景区”微信公众号上提前预约 （每日7：00至22：00），周一闭馆维护不对外开放（法定假日及孙中山先生诞辰、逝世纪念日除外）</p>
<br>

<p>钟山风景区也是一个景点的聚集区，这里有中山陵，灵谷寺，明孝陵，美龄宫等诸多景点，从东到西分别为灵谷寺，中山陵，美龄宫，明孝陵。建议从灵谷寺开始向西游览。灵谷寺与中山陵相距近2km，中山陵与美龄宫相距近2km，美龄宫与明孝陵相邻。各景点间有巴士及出租车，相邻景点票价皆为十元。</p>
<br>

<br>

<p><strong>中山陵—免费（提前预约），游览时间1h</strong></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uz9uw36cj32ni1vdtjl.jpg"></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uzan1xx2j329g23in80.jpg"></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uzatsa7aj331m214qmb.jpg"></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uzb7y0zyj32ao328b29.jpg"></p>
<p><em>云山苍苍，江水泱泱，先生之风，山高水长</em></p>
<br>

<br>

<p><strong>音乐台，游览时间20min</strong></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uzmq47psj33282aoqv5.jpg"></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5v05r8kpbj33282aoe81.jpg"></p>
<p><em>音乐台中成群结队的白鸽</em></p>
<br>

<br>

<p>音乐台中很多人来喂鸽子，广场中播放着萨克斯，乐声与鸽群相得益彰。</p>
<br>

<br>

<p><strong>灵谷寺—学生（灵谷寺+音乐台+美龄宫+明孝陵联票）￥50/人，游览时间1h30min</strong></p>
<p>灵谷寺中不仅包含灵谷寺一处景点，还有很多其他的古建筑，包括松风阁，灵谷寺，灵谷塔等。</p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5v0655zdyj32zi28m4m7.jpg"></p>
<p><em>松风阁</em></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5v06df3f8j331r266488.jpg"></p>
<p><em>灵谷寺</em></p>
<br>

<br>

<p>寺中有一泉眼，还算清冽，可以接点尝一尝。</p>
<br>

<br>

<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5v06my442j32ao328gvx.jpg"></p>
<p><em>寺内的玄奘院，院中藏有玄奘法师的舍利</em></p>
<br>

<br>

<p>去时正逢法会，寺中有僧人与信众正诵经唱佛。</p>
<br>

<br>

<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5v078n2znj326a3287wc.jpg"></p>
<p><em>灵谷塔</em></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5v07tyz1aj33282aotwb.jpg"></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5v0800yrpj32ao328qjy.jpg"></p>
<p><em>塔有九层，登顶时的景色，远处是南京城</em></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5v0btq50rj32ao328tfw.jpg"></p>
<p><em>塔中心有一直径一米左右的石柱，石梯绕柱而建，弯曲度极大</em></p>
<br>

<br>

<p><strong>明孝陵，游览时间1h</strong></p>
<p>明孝陵为明太祖朱元璋之陵寝，分为神道与陵宫两部分，神道旁有各类神兽石像立于两侧。</p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5v0gzitrij32ao328kjl.jpg"></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5v0h8o4f0j33282aowz1.jpg"></p>
<p><em>明孝陵景区更像一座公园，景点内绿草如因，蔚为开阔，明孝陵上只一座城墙加一座大殿，殿中并无物件，只拉了几副明朝陵墓的介绍条幅。</em></p>
<br>

<br>

<p><strong>17：00-17：30乘地铁（苜蓿园站-鸡鸣寺站）到东南大学（四牌楼校区）</strong></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5w2uix1xyj31400u0jxj.jpg"></p>
<p>​        <em>东南大学四牌楼校区比较小，骑自行车逛校园一圈大约只需要5分钟，校内多为近代建筑，颇具古色，由于时间比较紧，只粗粗浏览了一遍。</em></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5w2xgn7i0j332824p4a0.jpg"></p>
<p>​        <em>南京大学（鼓楼校区）与东南大学离得比较近，骑自行车5分钟即至，南大（鼓楼）比东南大一些，去时已天色渐晚，再加上路旁郁郁苍苍的行道树的掩映，身处闹市的校园显得更加幽静。时间不允许，匆匆走过一遍后前往南京站乘高铁回昆山。</em></p>
<br>

<br>

<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5w4k8i7urj30o40of4c8.jpg"></p>
<p><em>最后附一张南京主要景点分布图</em></p>
<br>

<br>

<p>至此南京的两日之行便结束了，计划赶不及变化，许多地方还来不及游历，但倒也不算很遗憾，毕竟去的地方都未曾令我失望，甚至还时不时会有一些意想不到的惊喜出现，虽然天气炎热，但人是真的少啊ヾ(≧▽≦*)o，唯一一点缺憾是没有去遇难同胞纪念馆，只能留到下次了。希望再会，南京。</p>
]]></content>
      <categories>
        <category>遇见风景</category>
        <category>南京</category>
      </categories>
      <tags>
        <tag>游记</tag>
      </tags>
  </entry>
  <entry>
    <title>乌镇</title>
    <url>/%E4%B9%8C%E9%95%87/</url>
    <content><![CDATA[<h1 id="乌镇"><a href="#乌镇" class="headerlink" title="乌镇"></a>乌镇</h1><p>21日晚，从杭州东站坐大巴到乌镇东栅。</p><a id="more"></a>
<p>晚上住民宿，房东待人很热情，房东家在东栅景区内，晚上跟着房东进去，所以免了东栅的门票，第二天醒来就直接是水乡里的清晨了。</p>
<p>东栅相对可玩的较少，所以转了一圈就到西栅去了。</p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5egfkws54j32ao328u0y.jpg"></p>
<p><em>走在东栅到西栅的路上，旁边是清一色的白墙灰瓦</em></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5egfyqz04j33282ao7wi.jpg"></p>
<p><em>站在桥上</em></p>
<p>游西栅</p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5eggib0unj33282aob2a.jpg"></p>
<p><em>顶着大太阳走了近半个小时才到西栅，有点后悔没有等景区的直达车</em></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5egjlwoxrj33282ao7wj.jpg"></p>
<p><em>从西栅景区大门进去后，转个弯就是乌镇大剧院，平铺在水上</em></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5efz6uu4lj30k00bswfc.jpg"></p>
<p><em>随后就是木心美术馆，不过周一没开门，有点遗憾</em></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5egmi86gpj324i2u0hdu.jpg"></p>
<p><em>染坊的晾晒场</em></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5egodfptsj33282ao4qr.jpg"></p>
<p><em>叙昌酱园里飘着浓厚的酱香</em></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5egpkooa9j33282aokjo.jpg"></p>
<p><em>透过青石小道旁树木的空隙可以看到一排排停在水面上的乌篷船</em></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5egricdinj33282ao1kz.jpg"></p>
<p><em>圆形拱门与水上的木房子</em></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5egu8dv0nj33282aob2a.jpg"></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5egxa54vaj33282ao7wi.jpg"></p>
<p><em>各家门前修到水面上的石梯或许是浣洗用的</em></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5ehe60h39j32ao328npe.jpg"></p>
<p><em>黄磊的酒坊</em></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5egxq0hrhj33282ao7wj.jpg"></p>
<p><em>坐在乌篷船上，船下流着的是京杭大运河的支流</em></p>
<p>下午从桐乡站乘高铁到昆山。</p>
]]></content>
      <categories>
        <category>遇见风景</category>
        <category>乌镇</category>
      </categories>
      <tags>
        <tag>游记</tag>
      </tags>
  </entry>
  <entry>
    <title>基于PyQT、PocketSphinx的python语音识别小程序</title>
    <url>/%E5%9F%BA%E4%BA%8EPyQT%E3%80%81PocketSphinx%E7%9A%84python%E8%AF%AD%E9%9F%B3%E8%AF%86%E5%88%AB%E5%B0%8F%E7%A8%8B%E5%BA%8F/</url>
    <content><![CDATA[<h1 id="1-使用说明"><a href="#1-使用说明" class="headerlink" title="1.使用说明"></a>1.使用说明</h1><h2 id="1-1项目简介"><a href="#1-1项目简介" class="headerlink" title="1.1项目简介"></a>1.1项目简介</h2><p>参照微软cotana的工作方式，编写自己的一个python语音助手程序，借助PyQt5和Pipy，创建可视化窗口，能实现基本的语音识别功能，同时根据几个特定的关键词执行简单的行动（如music，readme等）。</p><a id="more"></a>
<h2 id="1-2项目功能要求"><a href="#1-2项目功能要求" class="headerlink" title="1.2项目功能要求"></a>1.2项目功能要求</h2><p>●实现语音识别，并将识别的内容在屏幕上打印出来</p>
<p>●设置几个命令关键词（music，readme），并实现相应的行动。若识别出的内容中包含设置的几个关键词，则程序执行相应的行动。</p>
<p>●设置两种识别模式：PocketSphinx中包含7个Recognizer API：程序中使用了两个API：recognize_sphinx和recognize_google。（两种识别模式可由用户自行选择，其中recognize_sphinx可直接在本地运行，但识别精度较低；recognize_google识别精度较高，但是使用recognize_google需要处于联网状态下且IP地址需要在境外，否则语音识别会出现错误）</p>
<p>●设置文本框：用户可直接在文本框中输入命令，其执行效力与语音输入等效。</p>
<h2 id="1-3操作手册"><a href="#1-3操作手册" class="headerlink" title="1.3操作手册"></a>1.3操作手册</h2><h3 id="1-3-1整体界面"><a href="#1-3-1整体界面" class="headerlink" title="1.3.1整体界面"></a>1.3.1整体界面</h3><p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5ednzu2hqj30am0kcjsb.jpg"></p>
<h3 id="1-3-2开始声音识别"><a href="#1-3-2开始声音识别" class="headerlink" title="1.3.2开始声音识别"></a>1.3.2开始声音识别</h3><p>点击图中红框内按钮，程序创建监听线程</p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5edocw85xj30am0kc0tf.jpg"></p>
<p>识别过程中，程序显示：I‘m listening……</p>
<p>语音输入结束后，程序显示识别内容：</p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5edoqyqrzj30am0kcgm0.jpg"></p>
<p>执行music命令：</p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5edp0v6mxj30xc0pwwg8.jpg"></p>
<h3 id="1-3-3选择声音识别模式"><a href="#1-3-3选择声音识别模式" class="headerlink" title="1.3.3选择声音识别模式"></a>1.3.3选择声音识别模式</h3><p>在菜单栏选择识别模式，√说明该模式被选择。</p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5edp9mmaxj30am0kcaao.jpg"></p>
<h3 id="1-3-4文本输入"><a href="#1-3-4文本输入" class="headerlink" title="1.3.4文本输入"></a>1.3.4文本输入</h3><p>在文本框输入文本内容，点击右侧按钮确认输入。</p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5edplzcwmj30am0kc3z3.jpg"></p>
<p>系统显示输入结果：</p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5edpx6g2wj30am0kcdgh.jpg"></p>
<p>执行music命令：</p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5edq3kiimj30xc0pwtal.jpg"></p>
<h1 id="2-程序设计与实现"><a href="#2-程序设计与实现" class="headerlink" title="2.程序设计与实现"></a>2.程序设计与实现</h1><h2 id="2-1设计"><a href="#2-1设计" class="headerlink" title="2.1设计"></a>2.1设计</h2><h3 id="类设计："><a href="#类设计：" class="headerlink" title="类设计："></a>类设计：</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ui_MainWindow</span><span class="params">(object)</span>:</span></span><br></pre></td></tr></table></figure>

<p>Ui_Mainwindow类加载图形化用户界面，控制界面布局，类中包含各种Label，PushButton，MenuBar控件。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">myWindow</span><span class="params">(QtWidgets.QMainWindow)</span>:</span></span><br></pre></td></tr></table></figure>

<p>mywindow类处理交互逻辑，类中包含各种执行函数，同时实现控件与函数的连接。</p>
<h2 id="2-2实现"><a href="#2-2实现" class="headerlink" title="2.2实现"></a>2.2实现</h2><h3 id="主要函数实现："><a href="#主要函数实现：" class="headerlink" title="主要函数实现："></a>主要函数实现：</h3><h4 id="①声音监听与处理函数"><a href="#①声音监听与处理函数" class="headerlink" title="①声音监听与处理函数"></a>①声音监听与处理函数</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">listen</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="comment"># Working with Microphones</span></span><br><span class="line">    mic = sr.Recognizer()</span><br><span class="line">    <span class="keyword">with</span> sr.Microphone() <span class="keyword">as</span> source:  <span class="comment"># use the default microphone as the audio source</span></span><br><span class="line">        audio = mic.listen(source)  <span class="comment"># listen for the first phrase and extract it into audio data</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> self.isgoogle:</span><br><span class="line">            content = mic.recognize_google(audio)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            content = mic.recognize_sphinx(audio)</span><br><span class="line">    <span class="keyword">except</span> sr.RequestError:</span><br><span class="line">        self.ui.label.setText(<span class="string">"Something was wrong! Try again......"</span>)</span><br><span class="line"></span><br><span class="line">    COMMEND = [<span class="string">"music"</span>, <span class="string">"open"</span>]</span><br><span class="line">    commend_is_music = re.search(COMMEND[<span class="number">0</span>].lower(), content.lower())</span><br><span class="line">    commend_is_file = re.search(COMMEND[<span class="number">1</span>].lower(), content.lower())</span><br><span class="line">    <span class="keyword">if</span> commend_is_music:</span><br><span class="line">        self.ui.label.setText(<span class="string">"you said: \" "</span> + content + <span class="string">"\""</span>)</span><br><span class="line">        win32api.ShellExecute(<span class="number">0</span>, <span class="string">'open'</span>, <span class="string">'D:\\网易云音乐\\CloudMusic\\cloudmusic.exe'</span>, <span class="string">''</span>, <span class="string">''</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">elif</span> commend_is_file:</span><br><span class="line">        self.ui.label.setText(<span class="string">"you said: \""</span> + content + <span class="string">"\""</span>)</span><br><span class="line">        win32api.ShellExecute(<span class="number">0</span>, <span class="string">'open'</span>, <span class="string">'D:\\Notpad++\\Notepad++\\notepad++.exe'</span>, <span class="string">''</span>, <span class="string">''</span>, <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        self.ui.label.setText(<span class="string">"you said: \" "</span> + content + <span class="string">"\"\nIt's not a valid command."</span>)</span><br></pre></td></tr></table></figure>

<h4 id="②创建监听线程"><a href="#②创建监听线程" class="headerlink" title="②创建监听线程"></a>②创建监听线程</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">listen_thread</span><span class="params">(self)</span>:</span></span><br><span class="line">    self.ui.label.setText(<span class="string">"I'm listening...... "</span>)</span><br><span class="line">    t1 = threading.Thread(target=self.listen)</span><br><span class="line">    t1.setDaemon(<span class="literal">True</span>)</span><br><span class="line">    t1.start()</span><br></pre></td></tr></table></figure>

<h4 id="③文本处理函数"><a href="#③文本处理函数" class="headerlink" title="③文本处理函数"></a>③文本处理函数</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">text_changed</span><span class="params">(self)</span>:</span></span><br><span class="line">    content = self.ui.textbox.text()</span><br><span class="line">    print(content)</span><br><span class="line">    COMMEND = [<span class="string">"music"</span>, <span class="string">"open"</span>]</span><br><span class="line">    commend_is_music = re.search(COMMEND[<span class="number">0</span>].lower(), content.lower())</span><br><span class="line">    commend_is_file = re.search(COMMEND[<span class="number">1</span>].lower(), content.lower())</span><br><span class="line">    <span class="keyword">if</span> commend_is_music:</span><br><span class="line">        self.ui.label.setText(<span class="string">"you typed: \" "</span> + content + <span class="string">"\""</span>)</span><br><span class="line">        win32api.ShellExecute(<span class="number">0</span>, <span class="string">'open'</span>, <span class="string">'D:\\网易云音乐\\CloudMusic\\cloudmusic.exe'</span>, <span class="string">''</span>, <span class="string">''</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">elif</span> commend_is_file:</span><br><span class="line">        self.ui.label.setText(<span class="string">"you typed: \""</span> + content + <span class="string">"\""</span>)</span><br><span class="line">        win32api.ShellExecute(<span class="number">0</span>, <span class="string">'open'</span>, <span class="string">'D:\\Notpad++\\Notepad++\\notepad++.exe'</span>, <span class="string">''</span>, <span class="string">''</span>, <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        self.ui.label.setText(<span class="string">"you typed: \" "</span> + content + <span class="string">"\"\nIt's not a valid command."</span>)</span><br></pre></td></tr></table></figure>

<h4 id="④创建文本处理线程"><a href="#④创建文本处理线程" class="headerlink" title="④创建文本处理线程"></a>④创建文本处理线程</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">text_thread</span><span class="params">(self)</span>:</span></span><br><span class="line">    t2 = threading.Thread(target=self.text_changed)</span><br><span class="line">    t2.setDaemon(<span class="literal">True</span>)</span><br><span class="line">    t2.start()</span><br></pre></td></tr></table></figure>

<h4 id="⑤连接各类控件与相应函数"><a href="#⑤连接各类控件与相应函数" class="headerlink" title="⑤连接各类控件与相应函数"></a>⑤连接各类控件与相应函数</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">self.ui.recognize_btn.clicked.connect(self.listen_thread)<span class="comment">#语音识别按钮连接监听线程</span></span><br><span class="line">self.ui.sphinx_bar.triggered.connect(self.sphinxbar_recognize)<span class="comment">#sphinx模式触发</span></span><br><span class="line">self.ui.google_bar.triggered.connect(self.googlebar_recognize)<span class="comment">#google模式触发</span></span><br><span class="line">self.ui.text_btn.clicked.connect(self.text_thread)<span class="comment">#文本框输入确认按钮连接文本处理线程</span></span><br></pre></td></tr></table></figure>

<h1 id="3-测试"><a href="#3-测试" class="headerlink" title="3.测试"></a>3.测试</h1><h2 id="3-1语音输入"><a href="#3-1语音输入" class="headerlink" title="3.1语音输入"></a>3.1语音输入</h2><p>测试用例：hello</p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5edr6ctl9j30am0kct97.jpg"></p>
<p>测试用例：music</p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5edrdoimmj30am0kc0t8.jpg"></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5edrm21qxj30xc0pwwg8.jpg"></p>
<p>测试用例：open readme file</p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5edrxodhfj30am0kcgmf.jpg"></p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5eds36m45j31hc0swn0k.jpg"></p>
<h2 id="3-2文本输入"><a href="#3-2文本输入" class="headerlink" title="3.2文本输入"></a>3.2文本输入</h2><p>测试用例：hello</p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5edsca8nyj30am0kcq3o.jpg"></p>
<p>测试用例：music</p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5edsmhcy9j30am0kcq3j.jpg"></p>
<p>测试用例：open readme file</p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5edsub02zj30am0kc755.jpg"></p>
<h1 id="4-简单出错处理"><a href="#4-简单出错处理" class="headerlink" title="4.简单出错处理"></a>4.简单出错处理</h1><p>若IP地址在境内时选择了google的API进行识别，则程序会提示错误。</p>
<p>如图所示</p>
<p><img alt data-src="http://ww1.sinaimg.cn/large/007oltUXgy1g5edt0s3cej30am0kcmxr.jpg"></p>
<h1 id="5-识别准确性分析"><a href="#5-识别准确性分析" class="headerlink" title="5.识别准确性分析"></a>5.识别准确性分析</h1><h2 id="5-1准确性分析"><a href="#5-1准确性分析" class="headerlink" title="5.1准确性分析"></a>5.1准确性分析</h2><p>recognize_sphinx（）可与CMU Sphinx 引擎脱机工作，即无需联网，可实现本地识别，但其准确性较差，经实际使用发现，很多简单命令都需要进行多次尝试才能识别出来。</p>
<p>经查阅资料知道：PocketSphinx是一个计算量和体积都很小的嵌入式语音识别引擎。在Sphinx-2（Sphinx-2: 采用半连续隐含马尔可夫模型（SCHMM）建模，采用的技术相对落后，使得识别精度要低于其它的译码器。</p>
<p>）的基础上针对嵌入式系统的需求修改、优化而来，是第一个开源面向嵌入式的中等词汇量连续语音识别项目。识别精度和Sphinx-2差不多。</p>
<h2 id="5-2进行尝试性的改进"><a href="#5-2进行尝试性的改进" class="headerlink" title="5.2进行尝试性的改进"></a>5.2进行尝试性的改进</h2><p>1）考虑到周围噪音的影响，可尝试采用recognizer.adjust_for_ambient_noise()函数降低周围噪音的影响。</p>
<p>2）考虑更换API，采用recognize_google（）对声音进行处理，识别准确性得到明显的提升，不足之处是需要联网和境外ip。</p>
]]></content>
      <categories>
        <category>technology</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
</search>
