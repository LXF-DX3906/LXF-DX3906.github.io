<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>槐雪</title>
  
  <subtitle>愿你所有快乐无需假装，愿你此生尽兴赤诚善良</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https:/LXF-DX3906.github.io/"/>
  <updated>2019-10-16T01:35:40.121Z</updated>
  <id>https:/LXF-DX3906.github.io/</id>
  
  <author>
    <name>Monodrama</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>利用Hexo+Next搭建个人博客（三）——优化(各种tips、黑科技，不断更新)</title>
    <link href="https:/LXF-DX3906.github.io/2019/10/15/%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89-%E4%BC%98%E5%8C%96-%E5%90%84%E7%A7%8Dtips%E3%80%81%E9%BB%91%E7%A7%91%E6%8A%80%EF%BC%8C%E4%B8%8D%E6%96%AD%E6%9B%B4%E6%96%B0/"/>
    <id>https:/LXF-DX3906.github.io/2019/10/15/利用Hexo-Next搭建个人博客（三）-优化-各种tips、黑科技，不断更新/</id>
    <published>2019-10-15T15:01:05.000Z</published>
    <updated>2019-10-16T01:35:40.121Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-界面优化"><a href="#1-界面优化" class="headerlink" title="1.界面优化"></a>1.界面优化</h2><h3 id="1-1侧栏设置"><a href="#1-1侧栏设置" class="headerlink" title="1.1侧栏设置"></a>1.1侧栏设置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">侧栏设置包括：侧栏位置、侧栏显示与否、文章间距等等</span><br></pre></td></tr></table></figure><a id="more"></a><p>打开 <strong>主题配置文件</strong> 找到<code>sidebar</code>字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">sidebar:</span><br><span class="line"># Sidebar Position - 侧栏位置</span><br><span class="line">  position: left        #靠左放置</span><br><span class="line">  #position: right      #靠右放置</span><br><span class="line">  </span><br><span class="line"># 手动定义侧边栏宽度。如果注释，将默认为:</span><br><span class="line">  # Muse | Mist: 320</span><br><span class="line">  # Pisces | Gemini: 240</span><br><span class="line">  #width: 300</span><br><span class="line"></span><br><span class="line"># Sidebar Display - 侧栏显示时机（只对Muse | Mist两种风格有效）</span><br><span class="line">  display: post        #默认行为，在文章页面（拥有目录列表）时显示</span><br><span class="line">  #display: always       #在所有页面中都显示</span><br><span class="line">  #display: hide        #在所有页面中都隐藏（可以手动展开）</span><br><span class="line">  #display: remove      #完全移除</span><br><span class="line"></span><br><span class="line">  offset: 12            #文章间距（只对Pisces | Gemini两种风格有效）</span><br><span class="line">  </span><br><span class="line">  onmobile: false       #在窄视图上启用侧边栏（只对Muse | Mist两种风格有效）</span><br></pre></td></tr></table></figure><h3 id="1-2头像设置"><a href="#1-2头像设置" class="headerlink" title="1.2头像设置"></a>1.2头像设置</h3><p>打开 <strong>主题配置文件</strong> 找到<code>Sidebar Avatar</code>字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Sidebar Avatar</span><br><span class="line">avatar:</span><br><span class="line">  url: /images/header.jpg</span><br><span class="line">  rounded: ture       # 是否圆形显示头像true|false</span><br><span class="line">  rotated: ture       # 光标移到头像上后头像是否旋转true|false</span><br></pre></td></tr></table></figure><p>替换头像：将自己想要替换的头像命名为<code>header.jpg</code>，将其放在<code>next\source\images</code>目录下，设置<code>url</code>字段为<code>/images/header.jpg</code></p><h3 id="1-3动态背景"><a href="#1-3动态背景" class="headerlink" title="1.3动态背景"></a>1.3动态背景</h3><p>NexT提供了两种动态背景效果，一种是<code>canvas-nest</code>几何线条效果，一种是<code>canvas-ribbon</code>彩带效果，下面提供两种效果的添加方式，可以两者选其一，也可以都选。</p><h4 id="canvas-nest几何线条效果"><a href="#canvas-nest几何线条效果" class="headerlink" title="canvas-nest几何线条效果"></a>canvas-nest几何线条效果</h4><p>效果如下：线条会聚集在光标附近</p><p><img src="/LXF-DX3906.github.io/2019/10/15/利用Hexo-Next搭建个人博客（三）-优化-各种tips、黑科技，不断更新/1571138355871.png" alt="1571138355871"></p><p><strong>step1：</strong>进入到next目录下（前提：已经在MyBlog1.1目录中）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd themes/next</span><br></pre></td></tr></table></figure><p><strong>step2：</strong>安装<code>canvas-nest</code>模块到 <code>source/lib</code>目录中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/theme-next/theme-next-canvas-nest source/lib/canvas-nest</span><br></pre></td></tr></table></figure><p><strong>step3：</strong>打开 <strong>主题配置文件</strong> 找到<code>canvas_nest</code>字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">canvas_nest:</span><br><span class="line">  enable: true# 是否显示true|false</span><br><span class="line">  onmobile: true # 是否在移动端展示true|false</span><br><span class="line">  color: &quot;120,120,120&quot; # 线条的颜色（RGB表示）, 用 `,` 隔开</span><br><span class="line">  opacity: 0.5 # 线条头透明度: 0~1</span><br><span class="line">  zIndex: -1 # 用于控制线条所在层的位置, 默认:-1。值越大，显示的层面离用户越近。</span><br><span class="line">  count: 150# 线条的总条数</span><br></pre></td></tr></table></figure><h4 id="canvas-ribbon彩带效果"><a href="#canvas-ribbon彩带效果" class="headerlink" title="canvas-ribbon彩带效果"></a>canvas-ribbon彩带效果</h4><p>效果如下：彩带会随着鼠标点击改变</p><p><img src="/LXF-DX3906.github.io/2019/10/15/利用Hexo-Next搭建个人博客（三）-优化-各种tips、黑科技，不断更新/1571139846137.png" alt="1571139846137"></p><p><strong>step1：</strong>进入到next目录下（前提：已经在MyBlog1.1目录中）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd themes/next</span><br></pre></td></tr></table></figure><p><strong>step2：</strong>安装<code>canvas-nest</code>模块到 <code>source/lib</code>目录中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/theme-next/theme-next-canvas-nest source/lib/canvas-nest</span><br></pre></td></tr></table></figure><p><strong>step3：</strong>打开 <strong>主题配置文件</strong> 找到<code>canvas_ribbon</code>字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">canvas_ribbon:</span><br><span class="line">  enable: # 是否显示true|false</span><br><span class="line">  size: 300 # 彩带宽度</span><br><span class="line">  alpha: 0.6 # 彩带透明度</span><br><span class="line">  zIndex: -1 # 用于控制彩带所在层的位置, 默认:-1。值越大，显示的层面离用户越近。</span><br></pre></td></tr></table></figure><h3 id="1-4在右上角或者左上角实现fork-me-on-github"><a href="#1-4在右上角或者左上角实现fork-me-on-github" class="headerlink" title="1.4在右上角或者左上角实现fork me on github"></a>1.4在右上角或者左上角实现fork me on github</h3><p>效果如下：</p><p><img src="/LXF-DX3906.github.io/2019/10/15/利用Hexo-Next搭建个人博客（三）-优化-各种tips、黑科技，不断更新/1571141236469.png" alt="1571141236469"></p><p><strong>step1：</strong>在<a href="http://tholman.com/github-corners/" target="_blank" rel="noopener">GitHub Corners</a>或者<a href="https://github.blog/2008-12-19-github-ribbons/" target="_blank" rel="noopener">GitHub Ribbons</a>选择自己喜欢的图标，然后copy相应的代码</p><p><strong>step2：</strong>将刚刚复制的代码粘贴到<code>themes/next/layout/_layout.swig</code>文件中<code>&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</code>下面一行</p><p><strong>step3：</strong>把代码中的<code>href</code>后面的值替换成你要跳转的地址，比如你的GitHub主页</p><h3 id="1-5显示摘要"><a href="#1-5显示摘要" class="headerlink" title="1.5显示摘要"></a>1.5显示摘要</h3><p>在next的默认配置中，首页显示文章会显示全文而不是文章的摘要，这样看起来很难受，next提供了两种方法显示摘要。</p><h4 id="自动显示摘要"><a href="#自动显示摘要" class="headerlink" title="自动显示摘要"></a>自动显示摘要</h4><p>打开 <strong>主题配置文件</strong> 找到<code>auto_excerpt</code>字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">auto_excerpt:</span><br><span class="line">  enable: true     # 是否开启自动显示摘要ture|false</span><br><span class="line">  length: 80   # 摘要长度，截取文章的前n个字符</span><br></pre></td></tr></table></figure><h4 id="手动控制摘要"><a href="#手动控制摘要" class="headerlink" title="手动控制摘要"></a>手动控制摘要</h4><p>在文章中加入<code>&lt;!-- more --&gt;</code> 字段，<code>&lt;!-- more --&gt;</code> 以前的都为文章摘要。</p><p>当两者同时使用时，<code>&lt;!-- more --&gt;</code>的优先级更高。</p><h3 id="1-6设置网站缩略图标"><a href="#1-6设置网站缩略图标" class="headerlink" title="1.6设置网站缩略图标"></a>1.6设置网站缩略图标</h3><p>在<code>MyBlog1.1\themes\next\source\images</code>文件夹下有三个文件</p><p><code>apple-touch-icon-next.png</code></p><p><code>favicon-16x16-next.png</code></p><p><code>favicon-32x32-next.png</code></p><p>将自己想用的图标复制成三份，按照上面三张图片的像素进行更改，并且重命名为这三个图片的名字，替换即可。</p><h3 id="1-7去除hexo支持信息与主题版本信息"><a href="#1-7去除hexo支持信息与主题版本信息" class="headerlink" title="1.7去除hexo支持信息与主题版本信息"></a>1.7去除hexo支持信息与主题版本信息</h3><p>就是把这个去掉</p><p><img src="/LXF-DX3906.github.io/2019/10/15/利用Hexo-Next搭建个人博客（三）-优化-各种tips、黑科技，不断更新/1571145529107.png" alt="1571145529107"></p><p>打开 <strong>主题配置文件</strong> 找到<code>powered</code>和<code>theme</code>字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">powered:</span><br><span class="line">    enable: false</span><br><span class="line">    version: false</span><br><span class="line"></span><br><span class="line">theme:</span><br><span class="line">    enable: false</span><br><span class="line">    version: false</span><br></pre></td></tr></table></figure><h3 id="1-8侧边栏社交信息链接"><a href="#1-8侧边栏社交信息链接" class="headerlink" title="1.8侧边栏社交信息链接"></a>1.8侧边栏社交信息链接</h3><p>效果如下：</p><p><img src="/LXF-DX3906.github.io/2019/10/15/利用Hexo-Next搭建个人博客（三）-优化-各种tips、黑科技，不断更新/1571149724636.png" alt="1571149724636"></p><p>打开 <strong>主题配置文件</strong> 找到<code>social</code>字段，选择你想展示的社交链接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">social:</span><br><span class="line">  GitHub: https://github.com/LXF-DX3906 || github</span><br><span class="line">  E-Mail: mailto:xuefei_l@outlook.com || envelope</span><br><span class="line">  #Weibo: https://weibo.com/yourname || weibo</span><br><span class="line">  #Google: https://plus.google.com/yourname || google</span><br><span class="line">  #Twitter: https://twitter.com/yourname || twitter</span><br><span class="line">  #FB Page: https://www.facebook.com/yourname || facebook</span><br><span class="line">  #VK Group: https://vk.com/yourname || vk</span><br><span class="line">  StackOverflow: https://stackoverflow.com/users/11585996/xuefei-lv || stack-overflow</span><br><span class="line">  #YouTube: https://youtube.com/yourname || youtube</span><br><span class="line">  #Instagram: https://instagram.com/yourname || instagram</span><br><span class="line">  #Skype: skype:yourname?call|chat || skype</span><br></pre></td></tr></table></figure><h2 id="2-功能优化"><a href="#2-功能优化" class="headerlink" title="2.功能优化"></a>2.功能优化</h2><h3 id="2-1添加本地搜索功能"><a href="#2-1添加本地搜索功能" class="headerlink" title="2.1添加本地搜索功能"></a>2.1添加本地搜索功能</h3><p><strong>step1：</strong>安装 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fflashlab%2Fhexo-generator-search" target="_blank" rel="noopener">hexo-generator-searchdb</a> 插件</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><p><strong>step2：</strong>打开 <strong>站点配置文件</strong> 找到<code>Extensions</code>在下面添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 搜索</span></span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  <span class="built_in">limit</span>: 10000</span><br></pre></td></tr></table></figure><p><strong>step3：</strong>打开 <strong>主题配置文件</strong> 找到<code>Local search</code>，将<code>enable</code>设置为<code>true</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  trigger: auto# trigger若为auto, 通过改变输入触发搜索</span><br><span class="line">  # trigger若为manual, 通过按下enter键或者点击搜索按钮触发搜索</span><br><span class="line">  top_n_per_article: 1 # 展示每篇文章的前n个结果，如果想要展示所有结果，设置为-1</span><br><span class="line">  unescape: false# 将html字符串转义为可读的字符串。</span><br><span class="line">  preload: false# 当加载页面时预加载搜索结果</span><br></pre></td></tr></table></figure><h3 id="2-2添加站点访问计数"><a href="#2-2添加站点访问计数" class="headerlink" title="2.2添加站点访问计数"></a>2.2添加站点访问计数</h3><p>next提供了多种访问计数的方式，在这里我们选择使用<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fbusuanzi.ibruce.info" target="_blank" rel="noopener">不蒜子</a></p><p>打开 <strong>主题配置文件</strong> 找到<code>busuanzi_count</code>字段，将<code>enbale</code>设置为<code>true</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">busuanzi_count:</span><br><span class="line">  enable: true                #是否显示计数ture|false</span><br><span class="line">  total_visitors: true  #访客数，uv的方式，单个用户连续点击n篇文章，只记录1次访客数</span><br><span class="line">  total_visitors_icon: user</span><br><span class="line">  total_views: true           #访问量，pv的方式，单个用户连续点击n篇文章，记录n次访问量</span><br><span class="line">  total_views_icon: eye</span><br><span class="line">  post_views: true            #是否显示每篇文章的访问次数ture|false</span><br><span class="line">  post_views_icon: eye</span><br></pre></td></tr></table></figure><p>网站访问次数</p><p><img src="/LXF-DX3906.github.io/2019/10/15/利用Hexo-Next搭建个人博客（三）-优化-各种tips、黑科技，不断更新/1571144615949.png" alt="1571144615949"></p><p>文章显示次数</p><p><img src="/LXF-DX3906.github.io/2019/10/15/利用Hexo-Next搭建个人博客（三）-优化-各种tips、黑科技，不断更新/1571144642323.png" alt="1571144642323"></p><p>还可以将小人与眼睛的图标改成如下效果</p><p><img src="/LXF-DX3906.github.io/2019/10/15/利用Hexo-Next搭建个人博客（三）-优化-各种tips、黑科技，不断更新/1571145217091.png" alt="1571145217091"></p><p>打开<code>themes\next\layout\_partials\analytics\busuanzi-counter.swig</code></p><p>更改如下两段代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;span class=&quot;post-meta-item&quot; id=&quot;busuanzi_container_site_uv&quot; style=&quot;display: none;&quot;&gt;</span><br><span class="line">      &lt;!--&lt;span class=&quot;post-meta-item-icon&quot;&gt;--&gt;</span><br><span class="line">        &lt;!--&lt;i class=&quot;fa fa-&#123;&#123; theme.busuanzi_count.total_visitors_icon &#125;&#125;&quot;&gt;&lt;/i&gt;--&gt;</span><br><span class="line">      &lt;!--&lt;/span&gt;--&gt;</span><br><span class="line">  我的第</span><br><span class="line">      &lt;span class=&quot;site-uv&quot; title=&quot;&#123;&#123; __(&apos;footer.total_visitors&apos;) &#125;&#125;&quot;&gt;</span><br><span class="line">        &lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">  位朋友</span><br><span class="line">    &lt;/span&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;span class=&quot;post-meta-item&quot; id=&quot;busuanzi_container_site_pv&quot; style=&quot;display: none;&quot;&gt;</span><br><span class="line">      &lt;!--&lt;span class=&quot;post-meta-item-icon&quot;&gt;--&gt;</span><br><span class="line">        &lt;!--&lt;i class=&quot;fa fa-&#123;&#123; theme.busuanzi_count.total_views_icon &#125;&#125;&quot;&gt;&lt;/i&gt;--&gt;</span><br><span class="line">      &lt;!--&lt;/span&gt;--&gt;</span><br><span class="line">  历经</span><br><span class="line">      &lt;span class=&quot;site-pv&quot; title=&quot;&#123;&#123; __(&apos;footer.total_views&apos;) &#125;&#125;&quot;&gt;</span><br><span class="line">        &lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt;</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">  次回眸才与你相遇</span><br><span class="line">    &lt;/span&gt;</span><br></pre></td></tr></table></figure><h3 id="2-3添加网站字数统计"><a href="#2-3添加网站字数统计" class="headerlink" title="2.3添加网站字数统计"></a>2.3添加网站字数统计</h3><p>安装<code>hexo-symbols-count-time</code>模块</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-symbols-count-time</span><br></pre></td></tr></table></figure><p>打开 <strong>主题配置文件</strong> 找到<code>symbols-count-time</code>字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  separated_meta: true</span><br><span class="line">  item_text_post: true</span><br><span class="line">  item_text_total: true</span><br><span class="line">  awl: 4</span><br><span class="line">  wpm: 275</span><br></pre></td></tr></table></figure><h3 id="2-4添加RSS订阅"><a href="#2-4添加RSS订阅" class="headerlink" title="2.4添加RSS订阅"></a>2.4添加RSS订阅</h3><p>有关什么是RSS的知识可以参考这篇文章<a href="https://juejin.im/post/5c382a326fb9a049f15469eb" target="_blank" rel="noopener">如何用RSS订阅？</a></p><p><strong>step1：</strong>安装<code>hexo-generator-feed</code>插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><p><strong>step2：</strong>在<strong>站点配置文件</strong>的<code>Extensions</code>字段下添加配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># RSS功能</span><br><span class="line">feed:</span><br><span class="line">    type: atom</span><br><span class="line">    path: atom.xml</span><br><span class="line">    limit: 20</span><br></pre></td></tr></table></figure><p>执行<code>hexo generator</code>命令在 <code>public</code> 文件夹中生成 <code>atom.xml</code> 文件</p><p>配置含义：</p><ul><li><code>type</code>: RSS的类型(atom/rss2)</li><li><code>path</code>: 文件路径，默认是 atom.xml/rss2.xml</li><li><code>limit</code>: 展示文章的数量,使用 0 或则 false 代表展示全所有的帖子</li><li><code>hub</code>: URL of the PubSubHubbub hubs (如果使用不到可以为空)</li><li><code>content</code>: （可选）设置 <code>true</code> 可以在 RSS 文件中包含文章全部内容，默认：false</li><li><code>content_limit</code>: （可选）摘要中使用的帖子内容的默认长度。 仅在内容设置为false且未显示自定义帖子描述时才使用。</li><li><code>content_limit_delim</code>: （可选）If content_limit is used to shorten post contents, only cut at the last occurrence of this delimiter before reaching the character limit. Not used by default.</li><li><code>order_by</code>: 订阅内容的顺序. (默认: -date)<br>（后面几个选项一般用不到，有两个也没找到比较准确的翻译，所以放上了原文，知道的小伙伴可以在下方评论）</li></ul><p><strong>step3：</strong>打开 <strong>主题配置文件</strong> 找到<code>rss</code>字段，添加值<code>&quot;atom.xml&quot;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rss: &quot;atom.xml&quot;</span><br></pre></td></tr></table></figure><p>在菜单栏会生成RSS按钮</p><p><img src="/LXF-DX3906.github.io/2019/10/15/利用Hexo-Next搭建个人博客（三）-优化-各种tips、黑科技，不断更新/1571147556898.png" alt="1571147556898"></p><h3 id="2-5添加评论功能"><a href="#2-5添加评论功能" class="headerlink" title="2.5添加评论功能"></a>2.5添加评论功能</h3><p>之前使用过多种评论插件，从gitalk到livere（来必力），不过最后选择了<code>Valine</code>。</p><p> <code>Valine</code> 诞生于2017年8月7日，最初由<code>@云淡风轻</code>大佬开发（这里附上<a href="https://ioliu.cn/2017/add-valine-comments-to-your-blog/" target="_blank" rel="noopener">原文链接</a>），后又经过许多大佬的开发和维护，是一款基于<a href="https://leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a>的快速、简洁且高效的无后端评论系统。 </p><p><strong>step1：</strong>注册<a href="https://leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a>并创建一个开发版应用（免费）</p><p><img src="/LXF-DX3906.github.io/2019/10/15/利用Hexo-Next搭建个人博客（三）-优化-各种tips、黑科技，不断更新/1571148120730.png" alt="1571148120730"></p><p><strong>step2：</strong>在LeanCloud -&gt; 存储 -&gt; 创建Class -&gt; 无限制的Class</p><p><img src="/LXF-DX3906.github.io/2019/10/15/利用Hexo-Next搭建个人博客（三）-优化-各种tips、黑科技，不断更新/1571148298873.png" alt="1571148298873"></p><p><strong>step3：</strong>在LeanCloud-设置-把除数据存储其他选项都关闭。</p><p><img src="/LXF-DX3906.github.io/2019/10/15/利用Hexo-Next搭建个人博客（三）-优化-各种tips、黑科技，不断更新/1571148411537.png" alt="1571148411537"></p><p><strong>step4：</strong>设置安全域名</p><p><img src="/LXF-DX3906.github.io/2019/10/15/利用Hexo-Next搭建个人博客（三）-优化-各种tips、黑科技，不断更新/1571148593106.png" alt="1571148593106"></p><p><strong>step5：</strong>打开 <strong>主题配置文件</strong> ，配置文件中有两处<code>Valine</code>字段，它们分别如下所示</p><p>●这里的<code>valine</code>字段是填写<code>valine</code>脚本的源文件地址，可在<a href="https://www.jsdelivr.com/package/npm/valine" target="_blank" rel="noopener">此处</a>查看最新的<code>valine</code>脚本地址，将其链接复制下来填入到<code>valine</code>字段之后即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Valine</span><br><span class="line">  # Example:</span><br><span class="line">  # valine: //cdn.jsdelivr.net/npm/valine@1/dist/Valine.min.js</span><br><span class="line">  # valine: //cdnjs.cloudflare.com/ajax/libs/valine/1.3.4/Valine.min.js</span><br><span class="line">  valine: https://cdn.jsdelivr.net/npm/valine@1.3.10/dist/Valine.min.js</span><br></pre></td></tr></table></figure><p>●这里的<code>valine</code>字段是用来配置评论系统的，填写<code>appid</code>和<code>appkey</code>（在LeanCloud的设置-&gt;应用Keys中），其他字段可以根据提示自行配置，下面是我的配置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># Valine.</span><br><span class="line"># You can get your appid and appkey from https://leancloud.cn</span><br><span class="line"># more info please open https://valine.js.org</span><br><span class="line">valine:</span><br><span class="line">  enable: true # 为true时启用评论 </span><br><span class="line">  appid:  # your leancloud application appid 注意空一格再输入ID和key,这里填写上面得到的APP ID</span><br><span class="line">  appkey:  # your leancloud application appkey 这里填写上面得到的APP KEY</span><br><span class="line">  notify: false # mail notifier , https://github.com/xCss/Valine/wiki 是否开启新评论邮件通知</span><br><span class="line">  verify: false # Verification code 验证码</span><br><span class="line">  placeholder: 你的言论将上交国家,请注意文明用言,否则可能被拒收或查水表 ヾﾉ≧∀≦)o 来呀！吐槽一番吧！</span><br><span class="line">  # 评论框中预设的文字,随意填写</span><br><span class="line">  avatar: mm # gravatar style 头像,采用gravatar头像,到http://cn.gravatar.com/了解</span><br><span class="line">  guest_info: nick,mail,link # 访客信息,显示在评论框上面,三者可随意选择或全选</span><br><span class="line">  pageSize: 10 # pagination size 评论分页大小</span><br></pre></td></tr></table></figure><h3 id="2-6相关文章推荐"><a href="#2-6相关文章推荐" class="headerlink" title="2.6相关文章推荐"></a>2.6相关文章推荐</h3><h2 id="3-绑定域名"><a href="#3-绑定域名" class="headerlink" title="3.绑定域名"></a>3.绑定域名</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-界面优化&quot;&gt;&lt;a href=&quot;#1-界面优化&quot; class=&quot;headerlink&quot; title=&quot;1.界面优化&quot;&gt;&lt;/a&gt;1.界面优化&lt;/h2&gt;&lt;h3 id=&quot;1-1侧栏设置&quot;&gt;&lt;a href=&quot;#1-1侧栏设置&quot; class=&quot;headerlink&quot; title=&quot;1.1侧栏设置&quot;&gt;&lt;/a&gt;1.1侧栏设置&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;侧栏设置包括：侧栏位置、侧栏显示与否、文章间距等等&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="-Hexo" scheme="https:/LXF-DX3906.github.io/categories/Hexo/"/>
    
    
      <category term="-Hexo -NexT" scheme="https:/LXF-DX3906.github.io/tags/Hexo-NexT/"/>
    
  </entry>
  
  <entry>
    <title>利用Hexo+Next搭建个人博客（二）--使用next主题</title>
    <link href="https:/LXF-DX3906.github.io/2019/10/15/%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%EF%BC%89-%E4%BD%BF%E7%94%A8next%E4%B8%BB%E9%A2%98/"/>
    <id>https:/LXF-DX3906.github.io/2019/10/15/利用Hexo-Next搭建个人博客（二）-使用next主题/</id>
    <published>2019-10-15T15:00:50.000Z</published>
    <updated>2019-10-15T15:32:15.008Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0-选择主题"><a href="#0-选择主题" class="headerlink" title="0.选择主题"></a>0.选择主题</h1><p>Hexo有很多主题可供选择，想要了解详细内容可以看一下知乎上的这个问题<a href="https://www.zhihu.com/question/24422335" target="_blank" rel="noopener">有哪些好看的Hexo主题</a></p><a id="more"></a><p>最终我选择了next。</p><h2 id="1-下载next主题"><a href="#1-下载next主题" class="headerlink" title="1.下载next主题"></a>1.下载next主题</h2><p>访问<a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">next的github地址</a>，Clone or Download，将next的压缩包下载下来。</p><p><img src="/LXF-DX3906.github.io/2019/10/15/利用Hexo-Next搭建个人博客（二）-使用next主题/1571124461688.png" alt="1571124461688"></p><p>将压缩包解压到博客目录MyBlog1.1下的themes文件夹中，并将其重命名为next</p><h2 id="2-配置next主题"><a href="#2-配置next主题" class="headerlink" title="2.配置next主题"></a>2.配置next主题</h2><p>首先进行一下文件说明，在 <code>Hexo</code> 项目源码目录下，有两个主要的配置文件，其名称都是 <code>_config.yml</code> 。 其中，一份位于站点根目录下，主要包含 <code>Hexo</code> 本身的配置；另一份位于<code>themes</code>目录下，这份配置由主题作者提供，主要用于主题相关的配置。为了描述方便，在以下说明中，将前者称为<strong>站点配置文件</strong>， 后者称为<strong>主题配置文件</strong>。</p><h3 id="2-1修改站点配置文件"><a href="#2-1修改站点配置文件" class="headerlink" title="2.1修改站点配置文件"></a>2.1修改站点配置文件</h3><p>打开<code>MyBlog1.1/</code>目录下的<strong>站点配置文件</strong><code>_config.yml</code>：</p><p>前期可以先只更改一处内容，把标题、子标题、作者等自定义一下，其他的可以以后有时间研究，例如我的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">title: 槐雪</span><br><span class="line">subtitle: 愿你所有快乐无需假装，愿你此生尽兴赤诚善良</span><br><span class="line">description: 个人博客</span><br><span class="line">keywords:</span><br><span class="line">author: Monodrama</span><br><span class="line">language: zh-CN</span><br><span class="line">timezone: Asia/Shanghai</span><br></pre></td></tr></table></figure><p>关于站点配置文件的详细说明，可以查看</p><h3 id="2-2修改主题配置文件"><a href="#2-2修改主题配置文件" class="headerlink" title="2.2修改主题配置文件"></a>2.2修改主题配置文件</h3><p>打开<code>MyBlog1.1\themes\next</code>目录下的<code>_config.yml</code><strong>主题配置文件</strong></p><h4 id="选择scheme"><a href="#选择scheme" class="headerlink" title="选择scheme"></a>选择scheme</h4><p>Next提供了四种不同的外观，在<strong>主题配置文件</strong>中找到Scheme Setting，根据个人喜好选择scheme</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Scheme Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Schemes</span><br><span class="line">#scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br><span class="line">scheme: Gemini</span><br></pre></td></tr></table></figure><p><strong>Muse：</strong></p><p><img src="/LXF-DX3906.github.io/2019/10/15/利用Hexo-Next搭建个人博客（二）-使用next主题/1571127888685.png" alt="1571127888685"></p><p><img src="/LXF-DX3906.github.io/2019/10/15/利用Hexo-Next搭建个人博客（二）-使用next主题/1571127946997.png" alt="1571127946997"></p><p><strong>Mist：</strong></p><p><img src="/LXF-DX3906.github.io/2019/10/15/利用Hexo-Next搭建个人博客（二）-使用next主题/1571127990295.png" alt="1571127990295"></p><p><img src="/LXF-DX3906.github.io/2019/10/15/利用Hexo-Next搭建个人博客（二）-使用next主题/1571128002536.png" alt="1571128002536"></p><p><strong>Pisces：</strong></p><p><img src="/LXF-DX3906.github.io/2019/10/15/利用Hexo-Next搭建个人博客（二）-使用next主题/1571128052963.png" alt="1571128052963"></p><p><strong>Gemini：</strong></p><p><img src="/LXF-DX3906.github.io/2019/10/15/利用Hexo-Next搭建个人博客（二）-使用next主题/1571128085907.png" alt="1571128085907"></p><h4 id="设置菜单"><a href="#设置菜单" class="headerlink" title="设置菜单"></a>设置菜单</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">菜单包括：首页、归档、分类、标签、关于等等</span><br></pre></td></tr></table></figure><p>我们刚开始默认的菜单只有首页和归档两个，不能够满足我们的要求。</p><p><img src="/LXF-DX3906.github.io/2019/10/15/利用Hexo-Next搭建个人博客（二）-使用next主题/1571128525006.png" alt="1571128525006"></p><p>所以需要添加菜单，打开 <strong>主题配置文件</strong> 找到<code>Menu Settings</code>，根据个人需要选择，将前面的#去掉即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Menu Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">menu:</span><br><span class="line">  home: / || home                      #首页</span><br><span class="line">  #about: /about/ || user              #关于</span><br><span class="line">  #tags: /tags/ || tags                #标签</span><br><span class="line">  #categories: /categories/ || th   #分类</span><br><span class="line">  archives: /archives/ || archive      #归档</span><br><span class="line">  #schedule: /schedule/ || calendar   #日程表</span><br><span class="line">  #sitemap: /sitemap.xml || sitemap    #站点地图</span><br><span class="line">  #commonweal: /404/ || heartbeat      #公益404</span><br></pre></td></tr></table></figure><p><strong>初始化对应的Menu文件夹</strong></p><p>去掉#后，还要初始化每个菜单项对应的页面的内容</p><p>比如要创建tages页面，需要在命令行中输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;tags&quot;</span><br></pre></td></tr></table></figure><p><img src="/LXF-DX3906.github.io/2019/10/15/利用Hexo-Next搭建个人博客（二）-使用next主题/1571128990055.png" alt="1571128990055"></p><p>这时会在<code>MyBlog1.1\source\</code>目录下生成一个名为tags的文件夹</p><p>编辑/source/tags/index.md文件为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: tags</span><br><span class="line">date: 2019-10-05 16:02:39</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure><p>增加对应的type字段，其中<code>comments</code>字段是控制评论功能的，关于添加评论功能会在后面讲到。</p><p>其他页面同理。</p><p>其中，tags、archives与categories等动态生成的页面会随着我们博文的更新而不断增加内容。</p><p>假入我写了一篇博文，给它加了一个名为tag_demo的标签，那么在tags页就会自动增加tag_demo这个标签，有关如何推送博文以及博文的格式会在后文<strong>创建一篇文章中</strong>讲到。</p><p>再者就是about等需要我们自定义的页面，打开<code>MyBlog.1.1\source\about\index.md</code></p><p>添加自定义内容</p><p><img src="/LXF-DX3906.github.io/2019/10/15/利用Hexo-Next搭建个人博客（二）-使用next主题/1571129951601.png" alt="1571129951601"></p><p>至此，我们已经拥有了一个简单实用的个人博客了，下面介绍如何发博文。</p><h2 id="3-创建一篇文章"><a href="#3-创建一篇文章" class="headerlink" title="3.创建一篇文章"></a>3.创建一篇文章</h2><p>执行命令创建一篇文章</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &apos;测试文章&apos;</span><br></pre></td></tr></table></figure><p>我们发现在<code>MyBlog1.1\source\_posts\</code>目录下生成了测试文章.md。</p><p>看到.md后缀应该可以知道hexo的文章支持markdown语法，至于markdown语法是什么就不再赘述，可以借助搜索引擎自行学习。</p><p>编辑测试文章.md的内容为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 测试文章</span><br><span class="line">date: 2019-08-11 23:06:42</span><br><span class="line">tags: </span><br><span class="line">  - 标签1</span><br><span class="line">  - 标签2</span><br><span class="line">categories:</span><br><span class="line">  - 目录1</span><br><span class="line">  - 目录1的子目录</span><br><span class="line">photo: http://ww1.sinaimg.cn/large/007oltUXgy1g5egxq0hrhj33282ao7wj.jpg</span><br><span class="line">---</span><br><span class="line">这是摘要</span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line">以下是正文</span><br><span class="line"># 标题1</span><br><span class="line">1</span><br><span class="line">## 标题2</span><br><span class="line">2</span><br></pre></td></tr></table></figure><p>简单介绍一下文章前面的配置字段：</p><p>其中<code>tags</code>为文章标签，格式如上，标签之间为并列关系，如下：</p><p><img src="/LXF-DX3906.github.io/2019/10/15/利用Hexo-Next搭建个人博客（二）-使用next主题/1571131884715.png" alt="1571131884715"></p><p><code>catagories</code>为文章目录，格式如上，目录之间为包含关系，下面的目录是上面的目录的子目录，如下：</p><p><img src="/LXF-DX3906.github.io/2019/10/15/利用Hexo-Next搭建个人博客（二）-使用next主题/1571131852134.png" alt="1571131852134"></p><p><code>photo</code>为文章的封面，是可选字段，加入之后会在首页中展示该篇文章的封面，不加入则只会显示文章摘要。</p><p><code>&lt;!--more--&gt;</code>字段之前为文章摘要，会在首页中显示。</p><p>通过命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>发布文章。</p><p>不过每次发布前，建议先执行<code>hexo clean</code>和<code>hexo generate</code>进行清理编译。</p><p>发布后可在<code>http://yourgithubname.github.io</code>上查看。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0-选择主题&quot;&gt;&lt;a href=&quot;#0-选择主题&quot; class=&quot;headerlink&quot; title=&quot;0.选择主题&quot;&gt;&lt;/a&gt;0.选择主题&lt;/h1&gt;&lt;p&gt;Hexo有很多主题可供选择，想要了解详细内容可以看一下知乎上的这个问题&lt;a href=&quot;https://www.zhihu.com/question/24422335&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;有哪些好看的Hexo主题&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="-Hexo" scheme="https:/LXF-DX3906.github.io/categories/Hexo/"/>
    
    
      <category term="-Hexo -NexT" scheme="https:/LXF-DX3906.github.io/tags/Hexo-NexT/"/>
    
  </entry>
  
  <entry>
    <title>利用Hexo+Next搭建个人博客（一）--初始化demo</title>
    <link href="https:/LXF-DX3906.github.io/2019/10/15/%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89-%E5%88%9D%E5%A7%8B%E5%8C%96demo/"/>
    <id>https:/LXF-DX3906.github.io/2019/10/15/利用Hexo-Next搭建个人博客（一）-初始化demo/</id>
    <published>2019-10-15T15:00:31.000Z</published>
    <updated>2019-10-15T15:31:45.653Z</updated>
    
    <content type="html"><![CDATA[<p>之前第一次搭博客花了两天左右，网上搜各种教程，但是各种教程对应的版本较为混乱，导致最后博客出现了一些小bug，虽然不影响使用，但是强迫症犯了X﹏X，就准备再搭一个然后把之前的博文迁移过去，写下这个系列博客以做记录吧~</p><a id="more"></a><h2 id="0-前提准备："><a href="#0-前提准备：" class="headerlink" title="0.前提准备："></a>0.前提准备：</h2><p>▣一个GitHub账号</p><p>▣安装Git，详情可以看廖雪峰老师的git教程<a href="https://www.liaoxuefeng.com/wiki/896043488029600" target="_blank" rel="noopener">https://www.liaoxuefeng.com/wiki/896043488029600</a></p><p>▣安装Node.js<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a></p><p>▣npm包管理器</p><h2 id="1-安装Hexo"><a href="#1-安装Hexo" class="headerlink" title="1.安装Hexo"></a>1.安装Hexo</h2><p>新建博客文件夹，命名为MyBlog1.1</p><p>cmd打开命令行控制器，cd到MyBlog1.1文件夹下，输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install i -g hexo</span><br></pre></td></tr></table></figure><p>确认是否安装成功：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><p><img src="/LXF-DX3906.github.io/2019/10/15/利用Hexo-Next搭建个人博客（一）-初始化demo/1571106524090.png" alt="1571106524090"></p><h2 id="2-初始化博客"><a href="#2-初始化博客" class="headerlink" title="2.初始化博客"></a>2.初始化博客</h2><p>初始化博客：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>成功后结果如下：</p><p><img src="/LXF-DX3906.github.io/2019/10/15/利用Hexo-Next搭建个人博客（一）-初始化demo/1571106712512.png" alt="1571106712512"></p><p>▣简单解释各文件夹的作用</p><p>node_modules：依赖包</p><p>scaffolds：命令生成文章等的模板</p><p>source：自己推送的博文以及各种默认页面都存放在这个文件夹下</p><p>themes：存放Hexo的主题，我用的是Next（想要了解更多主题可以看一下知乎上的回答<a href="https://www.zhihu.com/question/39388850）" target="_blank" rel="noopener">https://www.zhihu.com/question/39388850）</a></p><p>_config.yml：整个博客的配置</p><p>package.json：项目所需模块项目的配置信息</p><p>▣到这一步，你已经可以有点小小的成就感回馈了，在博客目录下输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>在浏览器中打开<a href="http://localhost:4000，你可以看到以下界面，这是Hexo的默认界面，想要更好看就要为它配置主题了，关于主题配置会在下面写到。" target="_blank" rel="noopener">http://localhost:4000，你可以看到以下界面，这是Hexo的默认界面，想要更好看就要为它配置主题了，关于主题配置会在下面写到。</a></p><p><img src="/LXF-DX3906.github.io/2019/10/15/利用Hexo-Next搭建个人博客（一）-初始化demo/1571107080136.png" alt="1571107080136"></p><p><code>Ctr+C</code>关闭服务</p><h2 id="3-将博客部署到GitHub上"><a href="#3-将博客部署到GitHub上" class="headerlink" title="3.将博客部署到GitHub上"></a>3.将博客部署到GitHub上</h2><p>但是我们现在只是初步地将我们的个人博客部署到了我们的本地电脑上，只能通过localhost访问，想要将博客部署到互联网上使别人能够访问的话，还要借助github的github pages功能（当然github pages只是一个选择，还可以选择Coding等来部署我们的个人博客）。</p><h3 id="3-1新建仓库"><a href="#3-1新建仓库" class="headerlink" title="3.1新建仓库"></a>3.1新建仓库</h3><p>在github上新建一个名为<code>你的用户名.github.io</code>的仓库，比如说，如果你的github用户名是test，那么你就新建<code>test.github.io</code>的仓库（必须是你的用户名，其它名称无效），将来你的网站访问地址就是 <a href="http://test.github.io/" target="_blank" rel="noopener">http://test.github.io</a> 了。</p><p><img src="/LXF-DX3906.github.io/2019/10/15/利用Hexo-Next搭建个人博客（一）-初始化demo/1571108405499.png" alt="1571108405499"></p><h3 id="3-2配置SSH-Key"><a href="#3-2配置SSH-Key" class="headerlink" title="3.2配置SSH Key"></a><strong>3.2配置SSH Key</strong></h3><p>之前配置过的可以跳过</p><p>查看是否已经有ssh密钥</p><p>打开用户主目录，查找.ssh文件夹</p><p><img src="/LXF-DX3906.github.io/2019/10/15/利用Hexo-Next搭建个人博客（一）-初始化demo/1571108450226.png" alt="1571108450226"></p><ul><li><p>如果有，再看看这个目录下有没有id_rsa和id_rsa.pub这两个文件。如果有，可以直接跳至下一小节“Github中添加SSH Key”</p></li><li><p>如果已经有ssh密钥，想要重新生成ssh密钥，需要清理原有ssh密钥：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir key_backup</span><br><span class="line">$ cp id_rsa* key_backup</span><br><span class="line">$ rm id_rsa*</span><br></pre></td></tr></table></figure></li><li><p>如果没有，打开命令行，输入命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa –C “youremail@example.com”</span><br></pre></td></tr></table></figure><p>此处的邮箱地址为你自己的邮箱地址。一路Enter过来就好，得到信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Your public key has been saved in /c/Users/user/.ssh/id_rsa.pub.</span><br></pre></td></tr></table></figure></li></ul><p>找到该文件，打开，复制里面的所有内容，然后进入Sign in to GitHub：<a href="https://github.com/settings/ssh" target="_blank" rel="noopener">https://github.com/settings/ssh</a></p><p>New SSH key —&gt;Title：blog —&gt; Key：输入刚才复制的—&gt; Add SSH key</p><h3 id="3-3修改配置以关联github"><a href="#3-3修改配置以关联github" class="headerlink" title="3.3修改配置以关联github"></a>3.3修改配置以关联github</h3><p>打开MyBlog1.1文件夹，打开博客配置文件<code>_config.yml</code>,修改一些基础配置（<strong>记得冒号后必须有空格，不然配置不生效！</strong>）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">    type: git</span><br><span class="line">    repo: https://github.com/YourgithubName/YourgithubName.github.io.git</span><br><span class="line">    branch: master</span><br></pre></td></tr></table></figure><h3 id="3-4最后一步，上传到Github"><a href="#3-4最后一步，上传到Github" class="headerlink" title="3.4最后一步，上传到Github"></a>3.4最后一步，上传到Github</h3><p>上传到Github</p><ul><li>需要先安装Hexo上传仓库的工具，执行<code>npm install hexo-deployer-git --save</code>，这样你写好的文章才能部署到github服务器。</li><li>执行命令（建议每次都这样做，先清除、再编译上传）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><ul><li>在浏览器输入<code>http://yourgithubname.github.io</code>，这样你就可以看到自己的在线博客了~</li></ul><p>参考：<a href="https://juejin.im/post/5abcd2286fb9a028d66440ba" target="_blank" rel="noopener">https://juejin.im/post/5abcd2286fb9a028d66440ba</a></p><p>​            <a href="https://zhuanlan.zhihu.com/p/26625249" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/26625249</a></p><p>​            <a href="https://baoyuzhang.github.io/2017/05/12/[Hexo搭建独立博客全纪录]（三）使用Hexo搭建博客/" target="_blank" rel="noopener">https://baoyuzhang.github.io/2017/05/12/%E3%80%90Hexo%E6%90%AD%E5%BB%BA%E7%8B%AC%E7%AB%8B%E5%8D%9A%E5%AE%A2%E5%85%A8%E7%BA%AA%E5%BD%95%E3%80%91%EF%BC%88%E4%B8%89%EF%BC%89%E4%BD%BF%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</a></p><p><a href="https://zhangslob.github.io/2017/02/28/教你免费搭建个人博客，Hexo-Github/" target="_blank" rel="noopener">https://zhangslob.github.io/2017/02/28/教你免费搭建个人博客，Hexo-Github/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前第一次搭博客花了两天左右，网上搜各种教程，但是各种教程对应的版本较为混乱，导致最后博客出现了一些小bug，虽然不影响使用，但是强迫症犯了X﹏X，就准备再搭一个然后把之前的博文迁移过去，写下这个系列博客以做记录吧~&lt;/p&gt;
    
    </summary>
    
    
      <category term="-Hexo" scheme="https:/LXF-DX3906.github.io/categories/Hexo/"/>
    
    
      <category term="-Hexo -NexT" scheme="https:/LXF-DX3906.github.io/tags/Hexo-NexT/"/>
    
  </entry>
  
  <entry>
    <title>利用ETL工具Kettle（Pentaho Data Integration）将csv文件导入sql server数据库</title>
    <link href="https:/LXF-DX3906.github.io/2019/09/30/%E5%88%A9%E7%94%A8ETL%E5%B7%A5%E5%85%B7Kettle%EF%BC%88Pentaho-Data-Integration%EF%BC%89%E5%B0%86csv%E6%96%87%E4%BB%B6%E5%AF%BC%E5%85%A5sql-server%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>https:/LXF-DX3906.github.io/2019/09/30/利用ETL工具Kettle（Pentaho-Data-Integration）将csv文件导入sql-server数据库/</id>
    <published>2019-09-30T07:52:35.000Z</published>
    <updated>2019-10-15T15:02:56.250Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0-预装环境"><a href="#0-预装环境" class="headerlink" title="0.预装环境"></a>0.预装环境</h1><p>jdk1.8（我测试的结果是java SE 13不适配kettle8.3.0.0-371，虽然可以打开kettle，但是无法创建数据库连接，把新版本java卸了重新安装旧版本也是一件挺麻烦的事）</p><a id="more"></a><h2 id="1-下载开源ETL工具："><a href="#1-下载开源ETL工具：" class="headerlink" title="1.下载开源ETL工具："></a>1.下载开源ETL工具：</h2><p>Pentaho Kettle：<a href="https://community.hitachivantara.com/s/article/downloads" target="_blank" rel="noopener">https://community.hitachivantara.com/s/article/downloads</a> 网页中的Data Integration</p><p>下载好后为一压缩文件，将压缩文件解压到任意文件夹即可，解压后内容如下。</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXly1g7r0x3p1lcj30o50j8abw.jpg" alt="1569824832312.png"></p><p>单击<strong>Spoon.bat</strong>，打开kettle，第一次打开大概要等几分钟。</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXly1g7r0xe9ty2j30o50j7mzh.jpg" alt="1569825081518.png"></p><p>打开后界面如下</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXly1g7r0xtxxtlj31hc0smjt6.jpg" alt="1569825417291.png"></p><p>如果点开十分钟仍没有任何反应，可以以记事本方式打开Spoon.bat并修改Spoon.bat里面的内容，<strong>将-Xms与-Xmx后的参数全改为512</strong>，之后重新打开。</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXly1g7r0y75mj2j310c00vgli.jpg" alt="1569825309180.png"></p><h2 id="2-安装sql-server"><a href="#2-安装sql-server" class="headerlink" title="2.安装sql server"></a>2.安装sql server</h2><p>网上sql server的安装教程有很多，不再赘述。</p><p>安装后有以下工具</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXly1g7r0yd85inj308v0a1gny.jpg" alt="1569825491401.png"></p><h2 id="3-使用Kettle将CSV文件内容导入sql-server数据库"><a href="#3-使用Kettle将CSV文件内容导入sql-server数据库" class="headerlink" title="3.使用Kettle将CSV文件内容导入sql server数据库"></a>3.使用Kettle将CSV文件内容导入sql server数据库</h2><h3 id="3-1配置sql-server"><a href="#3-1配置sql-server" class="headerlink" title="3.1配置sql server"></a>3.1配置sql server</h3><p>在开始正式步骤之前，需修改一下sql server的网络配置，打开<strong>SQL Server 2107 配置管理器</strong>，右键SQL Native Client11.0配置的客户端协议中的TCP/IP选项，将其设为启用状态。</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXly1g7r0ylmudtj30wu0oujtt.jpg" alt="1569825801763.png"></p><p>将SQL Server服务中的三个服务全设置为运行状态</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXly1g7r0yuxp14j30wu0ou0w0.jpg" alt="1569825889686.png"></p><p>打开<strong>Microsoft SQL Server Management Studio</strong>，采用默认方式，直接单击连接</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXly1g7r0z6vxgqj31c00ph75m.jpg" alt="1569826016006.png"></p><p>打开左侧面板：安全性—&gt;登录名，右键用户sa，选择属性，这里可以设置用户sa的密码，直接在密码框中输入即可</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXly1g7r0ze6aitj31c00phju0.jpg" alt="1569826170590.png"></p><p>单击sa属性窗口左侧的<strong>状态</strong>项，将<strong>登录名</strong>设置为启用状态。</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXly1g7r0zp6j6cj31c00ph0v6.jpg" alt="1569826298788.png"></p><p>至此，SQL Server前期配置完成。</p><h3 id="3-2下载jTDS-SQL-Server-and-Sybase-JDBC-driver"><a href="#3-2下载jTDS-SQL-Server-and-Sybase-JDBC-driver" class="headerlink" title="3.2下载jTDS - SQL Server and Sybase JDBC driver"></a>3.2下载jTDS - SQL Server and Sybase JDBC driver</h3><p>Java连接SQL Server 2000数据库时，有两种方法：</p><p>（1）通过Microsoft的JDBC驱动连接。但是该种方法目前已不适用。</p><p>驱动程序名称：com.microsoft.jdbc.sqlserver.SQLServerDriver</p><p>（2）通过jTDS驱动连接。下载地址：<a href="http://sourceforge.net/projects/jtds/files/jtds/" target="_blank" rel="noopener">http://sourceforge.net/projects/jtds/files/jtds/</a></p><p>驱动程序名称：net.sourceforge.jtds.jdbc.Driver</p><p>下载jTDS - SQL Server and Sybase JDBC driver，将压缩文件中的jtds-1.3.1.jar包放入kettle的lib文件夹下</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXly1g7r10knjf5j30n20k0ab5.jpg" alt="1569829056661.png"></p><p>kettle配置完成</p><h3 id="3-3将csv文件导入sql-server数据库"><a href="#3-3将csv文件导入sql-server数据库" class="headerlink" title="3.3将csv文件导入sql server数据库"></a>3.3将csv文件导入sql server数据库</h3><p>新建test.csv文件，输入测试内容</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXly1g7r10rkevpj30kg0anaar.jpg" alt="1569826865642.png"></p><p>打开<strong>Microsoft SQL Server Management Studio</strong>，在左侧栏右键数据库-&gt;新建数据库，输入数据库名称test</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXly1g7r110mrmoj30ph0juwet.jpg" alt="1569827260933.png"></p><p>打开左侧面板test-&gt;表，右键表-&gt;新建-&gt;表，命名为csv_to_db，插入列ID，NAME，RELEASE_TIME，点击保存</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXly1g7r118mhdgj31c00phtat.jpg" alt="1569827316253.png"></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXly1g7r11t1jgzj31c00le0uk.jpg" alt="1569829543759.png"></p><p>打开kettle，文件-&gt;新建-&gt;转换，新建转换</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXly1g7r1274esnj31hc0smq4u.jpg" alt="1569827001843.png"></p><p>在主对象树中，右键DB连接-&gt;新建数据库连接</p><p>参数如下：</p><p>主机名称：localhost或127.0.0.1均可</p><p>数据库名称：将要连接的数据库名称，这里为test</p><p>实例名称：空</p><p>端口号：默认为1433</p><p>用户名：我们在前面设置为启用状态的登录名sa</p><p>密码：在前面为sa设置的密码</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXly1g7r12o7ywxj30xw0ihaax.jpg" alt="1569827700107.png"></p><p>点击测试，如下即为连接成功</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXly1g7r130gf27j30xw0ih75i.jpg" alt="1569827858731.png"></p><p>单击kettle左侧栏核心对象，在输入栏下将csv文件拖入工作区</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXly1g7r1394tenj31hc0smq5a.jpg" alt="1569827998760.png"></p><p>双击csv文件输入图标，选择数据源，点击获取字段，确认，之后确定</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXly1g7r13ss98gj30qo0sewfj.jpg" alt="1569828077122.png"></p><p>在输出栏将表输出拖入工作区，按住shift利用鼠标从csv文件输入拖到表输出，点击主输出步骤</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXly1g7r14crvjrj31hc0smwgo.jpg" alt="1569828130523.png"></p><p>双击表输出，选择数据库连接test，浏览目标表，选择上面新建的csv_to_db，勾选指定数据库字段，点击获取字段</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXly1g7r14jhk75j30ro0set9n.jpg" alt="1569828267096.png"></p><p>点击输入字段映射，此时会报出提示，继续点击确定，选择csv中要映射的数据库表字段，单击ADD</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXly1g7r14r1w7zj31200p1aa9.jpg" alt="1569828365147.png"></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXly1g7r14y10u6j31200se0t4.jpg" alt="1569828590146.png"></p><p>确定后，点击工作区上侧的运行，转换成功</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXly1g7r154nmsnj31hc0smgou.jpg" alt="1569828699761.png"></p><p>转换成功，可在<strong>Microsoft SQL Server Management Studio</strong>中通过sql语句查询查看结果（没找到像oracle数据库中那样可以直接查看表内容的方法，只能用sql语句了）。</p><p>右键test-&gt;新建查询</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXly1g7r15bvaj0j31c00legng.jpg" alt="1569829169151.png"></p><p>输入查询语句，结果如下</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXly1g7r15o871vj31c00oq41w.jpg" alt="1569829711152.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0-预装环境&quot;&gt;&lt;a href=&quot;#0-预装环境&quot; class=&quot;headerlink&quot; title=&quot;0.预装环境&quot;&gt;&lt;/a&gt;0.预装环境&lt;/h1&gt;&lt;p&gt;jdk1.8（我测试的结果是java SE 13不适配kettle8.3.0.0-371，虽然可以打开kettle，但是无法创建数据库连接，把新版本java卸了重新安装旧版本也是一件挺麻烦的事）&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据仓库" scheme="https:/LXF-DX3906.github.io/categories/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/"/>
    
    
      <category term="SQL Server" scheme="https:/LXF-DX3906.github.io/tags/SQL-Server/"/>
    
      <category term="Kettle" scheme="https:/LXF-DX3906.github.io/tags/Kettle/"/>
    
  </entry>
  
  <entry>
    <title>山川过雨晓光浮，初看江南第一州</title>
    <link href="https:/LXF-DX3906.github.io/2019/08/11/%E5%8D%97%E4%BA%AC/"/>
    <id>https:/LXF-DX3906.github.io/2019/08/11/南京/</id>
    <published>2019-08-11T15:06:42.000Z</published>
    <updated>2019-10-15T15:02:23.965Z</updated>
    
    <content type="html"><![CDATA[<h3 id="南京二日"><a href="#南京二日" class="headerlink" title="南京二日"></a>南京二日</h3><p>南京很大，但南京城真的不算大，因此，南京城里的景点间都离得很近，光说不算，看图说话：</p><a id="more"></a><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5w5dd669cj30cy0n5jy6.jpg" alt></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5w5dpusr5j30hf0ly13s.jpg" alt></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5w5fakzxcj304u00d741.jpg" alt></p><p><em>同一比例尺下的南京与上海（图中圈出的为主要景点的分布区域，当然可能并不完全准确）</em></p><br><br><p>南京与上海同为6000多万平方公里，但上海几乎处处皆城，而南京城只居于南京的中心，要想逛完上海免不了动辄以小时为计的奔波，而南京则不至于如此麻烦。</p><p>说了那么多，只是想突出一点，南京的各个景点都离得很近，并且都在城内，交通便捷，因此安排行程还是比较方便的。</p><p>由于在上海已经跑了三天，加上天气炎热，因此在南京游的景点并不算多。</p><br><br><p><strong><em>8.7晚23：00到南京，住新街口莫泰168</em></strong></p><p>关于住宿问题，建议住在离新街口或夫子庙较近的地方，交通方便，离各个景点也比较近。</p><p>比较推荐民宿（木鸟短租app），同样的价格，能得到更好的住宿体验，毕竟一个舒适的住宿环境能极大地提升旅游的体验。（住不惯民宿的话，选择酒店时可以参考各大app上的评价，如美团，携程，去哪儿，大众点评等）</p><br><br><p><strong><em>8.8</em></strong></p><p><strong><em>上午10：00，骑行，新街口——&gt;夫子庙附近莲湖糕团店，吃早饭</em></strong>!</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uvi3hvtjj32ao328u0y.jpg" alt></p><p><em>赤豆莲子元宵+牛肉锅贴</em></p><br><br><p>餐厅在景区附近，价格可以说是很良心了，第一口下去的赤豆莲子元宵令人欲罢不能，在这里借用知乎上的一段评价：“这碗元宵色泽乌黑，口感浓稠粘糯，小火慢炖将所有食材的外形化解，逼出所有的味道，任他们互相拥抱融合。红豆被细细地磨成了没有脾气的末，释放出清香，而在这香味之中又蕴含着桂花的香气，才品出了桂花的香气，又嚼出了炖得柔软的莲子的清甜微苦，方吃出莲子的滋味，又触到稀烂的红枣的香甜，所有这些味道都在白糖的甜味上铺陈开来，甘甜清香、软糯细腻，这一切，却都隐藏在其貌不扬的黑之中。品完赤豆元宵之后回头再看它，便不敢小瞧这黑乎乎的甜品，只觉得自己捧着喝下的，是一碗黑夜中的璀璨星空。”</p><p>当然个人体验也是不错的，不过仅限于前几口，再多吃就会甜到发腻了，两人一碗足矣，另外牛肉锅贴味道也是不错的。</p><br><br><p><strong><em>上午11：00—下午16：00游夫子庙及周围景点</em></strong></p><p>南京的景点分布比较密集，往往一个景点附近会有大大小小近十个景点，可以说可玩性极强，只夫子庙附近就有中国科举博物馆，乌衣巷，王导谢安纪念馆，李香君故居，以及夜泊秦淮的游船可以体验。</p><p>金陵素有“六朝古都，十朝都会”之美称，游览历史文化之地时，不免时时驻足逗留，以致打乱了原有的计划，不得已取消了许多行程。仅夫子庙周边便花费了一天的时间（当然这也与起床太晚脱不了干系╮(╯▽╰)╭）</p><p>夫子庙一众景点位于古秦淮风光带，其以夫子庙古建筑群为中心、十里秦淮为轴线、明城墙为纽带，串联起众多全国重点文物保护单位、省级和市级文物保护单位，以儒家思想与科举文化、民俗文化等为内涵，集自然风光、山水园林、庙宇学堂、街市民居、乡土人情、美食购物、科普教育、节庆文化于一体，是南京历史文化荟萃之地。</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uwdjd9fsj32ao2h24qp.jpg" alt></p><p><em>古秦淮</em></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uzjc3stwj332820o1c7.jpg" alt></p><p><em>天下文枢</em></p><br><br><p> <strong>夫子庙—学生￥15/人，游览时间1h</strong></p><p>注：夫子庙及王导谢安纪念馆的门票是有联票的，要比分开买便宜，建议在乌衣巷王导谢安纪念馆门口售票处买联票。</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uwa05mlcj329e30idrz.jpg" alt></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uwi9th1gj33282ao7vr.jpg" alt></p><p><em>夫子庙—大成殿</em></p><br><br><p>夫子庙景点由孔庙、学宫、贡院三大建筑群组成，其中浓缩了中国千年的儒家文化与几百年的科举文化</p><br><br><p><strong>王导谢安纪念馆—学生￥4/人，游览时间20min</strong></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uwqcl37bj33282aonc4.jpg" alt></p><p><em>“朱雀桥边野草花，乌衣巷口夕阳斜”</em></p><br><br><p>王导谢安纪念馆与李香君故居就在乌衣巷内，乌衣巷很短，短到不需百步就能走完，但这里却寄寓着无数读过刘禹锡的那首诗的中国人的纷繁想象。</p><br><br><p><strong>李香君故居—学生￥8/人，游览时间20min</strong></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uxjlcsosj31vj328ap5.jpg" alt></p><p><em>”舞低杨柳楼心月，歌尽桃花扇底风“</em></p><br><br><p>李香君是秦淮河畔媚香楼里的红姑娘，今时的李香君故居便是当年的媚香楼了，媚香楼建得精巧别致，临水而立，站在楼上凭栏而望，烟水澄碧、画舫织彩的秦淮河尽收眼底。楼中别有洞天，甚是精致，站在楼中想象当年李香君与一众才子摇琴鼓瑟，吟诗作赋的景象，倒也别有一番趣味。</p><br><br><p><strong>中国科举博物馆—学生￥25/人（南北馆联票），游览时间1h30min</strong></p><p>科举博物馆，顾名思义，为中国科举文化的集中展示。其中南馆比较小，由一些古建筑组成，多展示一些古代学子科举时所用的物品和一些由科举制度衍生出来的传统文化。</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uxk5fr0wj32xm278nff.jpg" alt></p><p><em>坐在南馆的走廊上，对面是文德桥，桥的左边便是乌衣巷</em></p><br><br><p>北馆是名副其实的现代博物馆，有地下三层地上一层共四层，主体长36米，宽36米，高20米，整体沉入地下，上部为方形浅水池，参观者穿过贡院牌坊，与明远楼相对，博物馆如同一面古镜，将明远楼的倒影收入其中。明远楼前的池水面积刚好1300平米，巧妙的用横向的面积寓意纵向的过去1300年的科举历史。</p><p>博物馆从地面下去，一共4层130米，一米抵十年，刚好再次寓意科举1300年的历史。走完博物馆，也就走过了1300年科举泱泱历史。建筑风格四四方方，像米字格似有棱有角。如鱼鳞一般的瓦片外墙，用书简堆砌而成的内墙，设计感十足又不乏历史味道。</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uxxew10tj32ww1ts7fq.jpg" alt></p><p><em>北馆上部的浅水池</em></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uxy93ie9j33282ao4f2.jpg" alt></p><p><em>鱼鳞般的瓦片外墙</em></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uxysmm72j33282ao7wh.jpg" alt></p><p><em>馆内的文字墙</em></p><br><br><p>至此古秦淮夫子庙风光带游览完毕，不过最后没有夜泊秦淮有点遗憾</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uy3msebrj31xf2xoe0v.jpg" alt></p><br><br><p>回住处稍作休整后，夜往先锋书店。</p><br><br><p><strong>先锋书店，游览时间视个人喜好而定</strong></p><p>提到先锋书店（注：一般提到先锋书店默认的是五台山总店，莫要找错），让我们先看一看它的名气从何而来，2013年，CNN专题报道先锋书店，赞称“中国最美书店”。 2014年3月，被英国广播公司BBC评为全球十大最美书店。2015年6月，被英国卫报评为“全球十二家最美书店”。2015年8月，美国有线电视新闻网（CNN）选出17家“全球最酷书店”，先锋书店名列其中。2016年3月，美国《国家地理》评选出全球十大书店，南京先锋书店入选，系亚洲唯一入选书店。</p><p>书店给我留下的最深刻的印象便是其内部设计的巧妙了，利用一个90°转角与一个斜坡给人两度柳暗花明的感觉，店中书香氤氲，灯光也很舒服，阅读体验上佳（羡慕南大了(っ*´Д`)っ，离得那么近），里面还有很多漂亮的明信片。</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uyf5xepxj33282aogr6.jpg" alt></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uyg2uu6cj32y227kn67.jpg" alt></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uyg9y0yzj32ao328wzy.jpg" alt></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uzku24rmj32ao328jzy.jpg" alt></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uygfeor1j32ao3281j0.jpg" alt></p><p><em>像这样的明信片墙，书店中还有好几面</em></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uylf1d9mj30vu125k4r.jpg" alt></p><p><em>挑了一本书回来(≖◡≖)</em></p><br><br><p><strong>8.9</strong></p><p><strong>10：00—10：40新街口—中山陵 乘地铁（下马坊站下）</strong></p><p>中山陵建议提前一至两天预约，可在”钟山风景区”微信公众号上提前预约 （每日7：00至22：00），周一闭馆维护不对外开放（法定假日及孙中山先生诞辰、逝世纪念日除外）</p><br><p>钟山风景区也是一个景点的聚集区，这里有中山陵，灵谷寺，明孝陵，美龄宫等诸多景点，从东到西分别为灵谷寺，中山陵，美龄宫，明孝陵。建议从灵谷寺开始向西游览。灵谷寺与中山陵相距近2km，中山陵与美龄宫相距近2km，美龄宫与明孝陵相邻。各景点间有巴士及出租车，相邻景点票价皆为十元。</p><br><br><p><strong>中山陵—免费（提前预约），游览时间1h</strong></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uz9uw36cj32ni1vdtjl.jpg" alt></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uzan1xx2j329g23in80.jpg" alt></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uzatsa7aj331m214qmb.jpg" alt></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uzb7y0zyj32ao328b29.jpg" alt></p><p><em>云山苍苍，江水泱泱，先生之风，山高水长</em></p><br><br><p><strong>音乐台，游览时间20min</strong></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uzmq47psj33282aoqv5.jpg" alt></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5v05r8kpbj33282aoe81.jpg" alt></p><p><em>音乐台中成群结队的白鸽</em></p><br><br><p>音乐台中很多人来喂鸽子，广场中播放着萨克斯，乐声与鸽群相得益彰。</p><br><br><p><strong>灵谷寺—学生（灵谷寺+音乐台+美龄宫+明孝陵联票）￥50/人，游览时间1h30min</strong></p><p>灵谷寺中不仅包含灵谷寺一处景点，还有很多其他的古建筑，包括松风阁，灵谷寺，灵谷塔等。</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5v0655zdyj32zi28m4m7.jpg" alt></p><p><em>松风阁</em></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5v06df3f8j331r266488.jpg" alt></p><p><em>灵谷寺</em></p><br><br><p>寺中有一泉眼，还算清冽，可以接点尝一尝。</p><br><br><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5v06my442j32ao328gvx.jpg" alt></p><p><em>寺内的玄奘院，院中藏有玄奘法师的舍利</em></p><br><br><p>去时正逢法会，寺中有僧人与信众正诵经唱佛。</p><br><br><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5v078n2znj326a3287wc.jpg" alt></p><p><em>灵谷塔</em></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5uzyb9d7jj32bc3341ky.jpg" alt></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5v07m8bo3j31w02iogzr.jpg" alt></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5v07tyz1aj33282aotwb.jpg" alt></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5v0800yrpj32ao328qjy.jpg" alt></p><p><em>塔有九层，登顶时的景色，远处是南京城</em></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5v0btq50rj32ao328tfw.jpg" alt></p><p><em>塔中心有一直径一米左右的石柱，石梯绕柱而建，弯曲度极大</em></p><br><br><p><strong>明孝陵，游览时间1h</strong></p><p>明孝陵为明太祖朱元璋之陵寝，分为神道与陵宫两部分，神道旁有各类神兽石像立于两侧。</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5v0gzitrij32ao328kjl.jpg" alt></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5v0h8o4f0j33282aowz1.jpg" alt></p><p><em>明孝陵景区更像一座公园，景点内绿草如因，蔚为开阔，明孝陵上只一座城墙加一座大殿，殿中并无物件，只拉了几副明朝陵墓的介绍条幅。</em></p><br><br><p><strong>17：00-17：30乘地铁（苜蓿园站-鸡鸣寺站）到东南大学（四牌楼校区）</strong></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5w2uix1xyj31400u0jxj.jpg" alt></p><p>​        <em>东南大学四牌楼校区比较小，骑自行车逛校园一圈大约只需要5分钟，校内多为近代建筑，颇具古色，由于时间比较紧，只粗粗浏览了一遍。</em></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5w2xgn7i0j332824p4a0.jpg" alt></p><p>​        <em>南京大学（鼓楼校区）与东南大学离得比较近，骑自行车5分钟即至，南大（鼓楼）比东南大一些，去时已天色渐晚，再加上路旁郁郁苍苍的行道树的掩映，身处闹市的校园显得更加幽静。时间不允许，匆匆走过一遍后前往南京站乘高铁回昆山。</em></p><br><br><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5w4k8i7urj30o40of4c8.jpg" alt></p><p><em>最后附一张南京主要景点分布图</em></p><br><br><p>至此南京的两日之行便结束了，计划赶不及变化，许多地方还来不及游历，但倒也不算很遗憾，毕竟去的地方都未曾令我失望，甚至还时不时会有一些意想不到的惊喜出现，虽然天气炎热，但人是真的少啊ヾ(≧▽≦*)o，唯一一点缺憾是没有去遇难同胞纪念馆，只能留到下次了。希望再会，南京。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;南京二日&quot;&gt;&lt;a href=&quot;#南京二日&quot; class=&quot;headerlink&quot; title=&quot;南京二日&quot;&gt;&lt;/a&gt;南京二日&lt;/h3&gt;&lt;p&gt;南京很大，但南京城真的不算大，因此，南京城里的景点间都离得很近，光说不算，看图说话：&lt;/p&gt;
    
    </summary>
    
    
      <category term="遇见风景" scheme="https:/LXF-DX3906.github.io/categories/%E9%81%87%E8%A7%81%E9%A3%8E%E6%99%AF/"/>
    
      <category term="南京" scheme="https:/LXF-DX3906.github.io/categories/%E9%81%87%E8%A7%81%E9%A3%8E%E6%99%AF/%E5%8D%97%E4%BA%AC/"/>
    
    
      <category term="游记" scheme="https:/LXF-DX3906.github.io/tags/%E6%B8%B8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>逃避虽可耻但有用</title>
    <link href="https:/LXF-DX3906.github.io/2019/07/29/%E9%80%83%E9%81%BF%E8%99%BD%E5%8F%AF%E8%80%BB%E4%BD%86%E6%9C%89%E7%94%A8/"/>
    <id>https:/LXF-DX3906.github.io/2019/07/29/逃避虽可耻但有用/</id>
    <published>2019-07-29T12:34:11.000Z</published>
    <updated>2019-10-15T15:02:01.617Z</updated>
    
    <content type="html"><![CDATA[<p>​        一天时间刷完了一整部剧，上一部让我如此废寝忘食的剧还是琅琊榜。<strong>架构在各种理想与美好之上的现实写照</strong>，这样的评价虽然有些矛盾，但是确乎是我能想到的最恰当的说法了。作为一个善于妥协但始终坚守的理想主义者，对剧中的各个角色之间的人际关系着实羡慕，可爱细腻但渴望被认可的森山实栗，自卑木讷但能力极强的津崎平匡，帅气风流情商极高但保有真情的风见，49岁还单身的女强人兼森山的知心姨母的百合姐，握着彩虹杯的忍者大叔沼田，还有森山和津崎各自可爱的爸爸妈妈，虽然每个人都有他们的缺点，但每个人都坦然面对并始终积极地面对生活，显得格外的真诚可爱。</p><a id="more"></a><p>​        从津崎接受森山为了家政工作而提出的异想天开的契约结婚到二人真正地走到一起，其中充满着各种不可思议的理想化的巧合，也存在着各种当局者迷的矛盾误会。虽然其中的美好只在剧中才会出现，但是它却<strong>真实动人地触动了我心中的某些部分</strong>。过于理想化的剧情被很多人戏称之为程序员的yy，或许是专业相关，又或许是本就不对，我不太喜欢也不太认可这样的评价，毕竟男主换一个职业对这部剧的影响应该也不大吧。再说一说剧中几个让我比较触动的剧情吧。</p><p>​        <strong>森山带津崎去“见家长”</strong></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5h0z1t10qj31hc0u0u0x.jpg" alt></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5h146uwwrj31hc0u04qq.jpg" alt></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5h14gkzc2j31hc0u0hdt.jpg" alt></p><p>​        爸爸和妈妈看待津崎的眼光太真实了，让我笑了好一阵，妈妈的表情是满满地丈母娘看女婿，与看越喜欢，而爸爸则是一脸的不可置信。但是无论如何，爸爸妈妈都未对女儿的选择表现出任何强制性的要求，在对津崎有了一定的了解了的情况下，即使是面对女儿选择的闪婚也只是表示出了震惊，但更多的还是对女儿的选择的理解和尊重，在我看来，这才是最美好的家庭关系吧。</p><p>​        <strong>拥抱日</strong></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5h1mghwxrj31hc0u0npd.jpg" alt></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5h1moi1mkj31hc0u0npd.jpg" alt></p><p>“那之后我思考了一下 我觉得要定一个日子”</p><p>“日子？”</p><p>“要拥抱就定个拥抱日”</p><p>“取拥抱的读音8月9日怎么样？”</p><p>“不是这个意思 关键是频率 如果无限制地进行 跟工作的界限会变得暧昧 会想下次是什么时候 明天还是今天 成为精神上的压力 “</p><p>”实际上我也想过下一次要怎么办 烦恼是不是应该再申请一次拥抱挑战“</p><p>”那对制定日期有异议吗？“</p><p>”没有 频率要怎么办呢“</p><p>……</p><p>没有对彼此的喜欢双方怎么可能会达成这样的协议，只不过津崎内心太自卑，毕竟有单身35年的觉悟，而森山害怕自己当作认真而对方只是当作契约而已，越渴望得到认可越害怕被否定。索性在这样看似滑稽荒诞的协议中达到两人暂时的平衡点，看似及其不正常的协议的达成，实则是两人最具默契的表现，毕竟多数正常人是无法接受这样的协议的。</p><p><strong>要是永远都不到站就好了</strong></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5h293xi4ej31hc0u0kjl.jpg" alt></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5h29browcj31hc0u0e81.jpg" alt></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5h29jnyjvj31hc0u01ky.jpg" alt></p><p>两人的内心独白在此刻达到了一至，但各自却沉浸在对自己的不自信和对对方心思的捉摸不透的感情中，其实一切尽在不言中</p><p><strong>卖火柴的gakki</strong></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5h2i9bci0j31hc0u07wh.jpg" alt></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5h2irnqz9j31hc0u04qp.jpg" alt></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5h2izhptkj31hc0u04qp.jpg" alt></p><p>单纯觉得编剧脑洞清奇，不过可爱到爆</p><p><strong>有时逃避可耻且无用</strong></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5h41xb4crj31hc0u0kjl.jpg" alt></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5h3bj8mcgj31hc1c0k7k.jpg" alt></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5h3cjh3vdj31hc0yiwq1.jpg" alt></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5h3dbtlvuj31hc130k72.jpg" alt></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5h3dks682j31hc1yi4lv.jpg" alt></p><p>​        恰好能有两个人能一直维持甜甜的感情比比邻星上存在生命的概率还要低，生活中酸甜苦辣才是常态，森山觉得两个人在一起后的生活给彼此都添了很多麻烦，想要逃离两人的关系，可事实是即使一个人该有的麻烦还是会有甚至会更多，只不过是两人在一起后在感受到自己的不习惯的体验后彼此又都太为对方考虑了而已，妈妈曾经对森木说过：没有命中注定之人，你需要把他变成命中注定的。两个人不是合约关系，而是合营关系，觉得麻烦只是还未适应不是自己一个人的生活，家庭就是双方都是CEO，共同经营起彼此的感情。</p><p>​    暂时就写到这儿吧。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;​        一天时间刷完了一整部剧，上一部让我如此废寝忘食的剧还是琅琊榜。&lt;strong&gt;架构在各种理想与美好之上的现实写照&lt;/strong&gt;，这样的评价虽然有些矛盾，但是确乎是我能想到的最恰当的说法了。作为一个善于妥协但始终坚守的理想主义者，对剧中的各个角色之间的人际关系着实羡慕，可爱细腻但渴望被认可的森山实栗，自卑木讷但能力极强的津崎平匡，帅气风流情商极高但保有真情的风见，49岁还单身的女强人兼森山的知心姨母的百合姐，握着彩虹杯的忍者大叔沼田，还有森山和津崎各自可爱的爸爸妈妈，虽然每个人都有他们的缺点，但每个人都坦然面对并始终积极地面对生活，显得格外的真诚可爱。&lt;/p&gt;
    
    </summary>
    
    
      <category term="影视" scheme="https:/LXF-DX3906.github.io/categories/%E5%BD%B1%E8%A7%86/"/>
    
      <category term="逃避虽可耻但有用" scheme="https:/LXF-DX3906.github.io/categories/%E5%BD%B1%E8%A7%86/%E9%80%83%E9%81%BF%E8%99%BD%E5%8F%AF%E8%80%BB%E4%BD%86%E6%9C%89%E7%94%A8/"/>
    
    
      <category term="观后感" scheme="https:/LXF-DX3906.github.io/tags/%E8%A7%82%E5%90%8E%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>乌镇</title>
    <link href="https:/LXF-DX3906.github.io/2019/07/27/%E4%B9%8C%E9%95%87/"/>
    <id>https:/LXF-DX3906.github.io/2019/07/27/乌镇/</id>
    <published>2019-07-27T08:28:44.000Z</published>
    <updated>2019-10-15T15:01:32.613Z</updated>
    
    <content type="html"><![CDATA[<h1 id="乌镇"><a href="#乌镇" class="headerlink" title="乌镇"></a>乌镇</h1><p>21日晚，从杭州东站坐大巴到乌镇东栅。</p><a id="more"></a><p>晚上住民宿，房东待人很热情，房东家在东栅景区内，晚上跟着房东进去，所以免了东栅的门票，第二天醒来就直接是水乡里的清晨了。</p><p>东栅相对可玩的较少，所以转了一圈就到西栅去了。</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5egfkws54j32ao328u0y.jpg" alt></p><p><em>走在东栅到西栅的路上，旁边是清一色的白墙灰瓦</em></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5egfyqz04j33282ao7wi.jpg" alt></p><p><em>站在桥上</em></p><p>游西栅</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5eggib0unj33282aob2a.jpg" alt></p><p><em>顶着大太阳走了近半个小时才到西栅，有点后悔没有等景区的直达车</em></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5egjlwoxrj33282ao7wj.jpg" alt></p><p><em>从西栅景区大门进去后，转个弯就是乌镇大剧院，平铺在水上</em></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5efz6uu4lj30k00bswfc.jpg" alt></p><p><em>随后就是木心美术馆，不过周一没开门，有点遗憾</em></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5egmi86gpj324i2u0hdu.jpg" alt></p><p><em>染坊的晾晒场</em></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5egodfptsj33282ao4qr.jpg" alt></p><p><em>叙昌酱园里飘着浓厚的酱香</em></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5egpkooa9j33282aokjo.jpg" alt></p><p><em>透过青石小道旁树木的空隙可以看到一排排停在水面上的乌篷船</em></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5egricdinj33282ao1kz.jpg" alt></p><p><em>圆形拱门与水上的木房子</em></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5egu8dv0nj33282aob2a.jpg" alt></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5egxa54vaj33282ao7wi.jpg" alt></p><p><em>各家门前修到水面上的石梯或许是浣洗用的</em></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5ehe60h39j32ao328npe.jpg" alt></p><p><em>黄磊的酒坊</em></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5egxq0hrhj33282ao7wj.jpg" alt></p><p><em>坐在乌篷船上，船下流着的是京杭大运河的支流</em></p><p>下午从桐乡站乘高铁到昆山。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;乌镇&quot;&gt;&lt;a href=&quot;#乌镇&quot; class=&quot;headerlink&quot; title=&quot;乌镇&quot;&gt;&lt;/a&gt;乌镇&lt;/h1&gt;&lt;p&gt;21日晚，从杭州东站坐大巴到乌镇东栅。&lt;/p&gt;
    
    </summary>
    
    
      <category term="遇见风景" scheme="https:/LXF-DX3906.github.io/categories/%E9%81%87%E8%A7%81%E9%A3%8E%E6%99%AF/"/>
    
      <category term="乌镇" scheme="https:/LXF-DX3906.github.io/categories/%E9%81%87%E8%A7%81%E9%A3%8E%E6%99%AF/%E4%B9%8C%E9%95%87/"/>
    
    
      <category term="游记" scheme="https:/LXF-DX3906.github.io/tags/%E6%B8%B8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>基于PyQT、PocketSphinx的python语音识别小程序</title>
    <link href="https:/LXF-DX3906.github.io/2019/07/27/%E5%9F%BA%E4%BA%8EPyQT%E3%80%81PocketSphinx%E7%9A%84python%E8%AF%AD%E9%9F%B3%E8%AF%86%E5%88%AB%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    <id>https:/LXF-DX3906.github.io/2019/07/27/基于PyQT、PocketSphinx的python语音识别小程序/</id>
    <published>2019-07-27T01:58:35.000Z</published>
    <updated>2019-10-16T00:51:16.982Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-使用说明"><a href="#1-使用说明" class="headerlink" title="1.使用说明"></a>1.使用说明</h1><h2 id="1-1项目简介"><a href="#1-1项目简介" class="headerlink" title="1.1项目简介"></a>1.1项目简介</h2><p>参照微软cotana的工作方式，编写自己的一个python语音助手程序，借助PyQt5和Pipy，创建可视化窗口，能实现基本的语音识别功能，同时根据几个特定的关键词执行简单的行动（如music，readme等）。</p><a id="more"></a><h2 id="1-2项目功能要求"><a href="#1-2项目功能要求" class="headerlink" title="1.2项目功能要求"></a>1.2项目功能要求</h2><p>●实现语音识别，并将识别的内容在屏幕上打印出来</p><p>●设置几个命令关键词（music，readme），并实现相应的行动。若识别出的内容中包含设置的几个关键词，则程序执行相应的行动。</p><p>●设置两种识别模式：PocketSphinx中包含7个Recognizer API：程序中使用了两个API：recognize_sphinx和recognize_google。（两种识别模式可由用户自行选择，其中recognize_sphinx可直接在本地运行，但识别精度较低；recognize_google识别精度较高，但是使用recognize_google需要处于联网状态下且IP地址需要在境外，否则语音识别会出现错误）</p><p>●设置文本框：用户可直接在文本框中输入命令，其执行效力与语音输入等效。</p><h2 id="1-3操作手册"><a href="#1-3操作手册" class="headerlink" title="1.3操作手册"></a>1.3操作手册</h2><h3 id="1-3-1整体界面"><a href="#1-3-1整体界面" class="headerlink" title="1.3.1整体界面"></a>1.3.1整体界面</h3><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5ednzu2hqj30am0kcjsb.jpg" alt></p><h3 id="1-3-2开始声音识别"><a href="#1-3-2开始声音识别" class="headerlink" title="1.3.2开始声音识别"></a>1.3.2开始声音识别</h3><p>点击图中红框内按钮，程序创建监听线程</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5edocw85xj30am0kc0tf.jpg" alt></p><p>识别过程中，程序显示：I‘m listening……</p><p>语音输入结束后，程序显示识别内容：</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5edoqyqrzj30am0kcgm0.jpg" alt></p><p>执行music命令：</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5edp0v6mxj30xc0pwwg8.jpg" alt></p><h3 id="1-3-3选择声音识别模式"><a href="#1-3-3选择声音识别模式" class="headerlink" title="1.3.3选择声音识别模式"></a>1.3.3选择声音识别模式</h3><p>在菜单栏选择识别模式，√说明该模式被选择。</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5edp9mmaxj30am0kcaao.jpg" alt></p><h3 id="1-3-4文本输入"><a href="#1-3-4文本输入" class="headerlink" title="1.3.4文本输入"></a>1.3.4文本输入</h3><p>在文本框输入文本内容，点击右侧按钮确认输入。</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5edplzcwmj30am0kc3z3.jpg" alt></p><p>系统显示输入结果：</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5edpx6g2wj30am0kcdgh.jpg" alt></p><p>执行music命令：</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5edq3kiimj30xc0pwtal.jpg" alt></p><h1 id="2-程序设计与实现"><a href="#2-程序设计与实现" class="headerlink" title="2.程序设计与实现"></a>2.程序设计与实现</h1><h2 id="2-1设计"><a href="#2-1设计" class="headerlink" title="2.1设计"></a>2.1设计</h2><h3 id="类设计："><a href="#类设计：" class="headerlink" title="类设计："></a>类设计：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ui_MainWindow</span><span class="params">(object)</span>:</span></span><br></pre></td></tr></table></figure><p>Ui_Mainwindow类加载图形化用户界面，控制界面布局，类中包含各种Label，PushButton，MenuBar控件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">myWindow</span><span class="params">(QtWidgets.QMainWindow)</span>:</span></span><br></pre></td></tr></table></figure><p>mywindow类处理交互逻辑，类中包含各种执行函数，同时实现控件与函数的连接。</p><h2 id="2-2实现"><a href="#2-2实现" class="headerlink" title="2.2实现"></a>2.2实现</h2><h3 id="主要函数实现："><a href="#主要函数实现：" class="headerlink" title="主要函数实现："></a>主要函数实现：</h3><h4 id="①声音监听与处理函数"><a href="#①声音监听与处理函数" class="headerlink" title="①声音监听与处理函数"></a>①声音监听与处理函数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">listen</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="comment"># Working with Microphones</span></span><br><span class="line">    mic = sr.Recognizer()</span><br><span class="line">    <span class="keyword">with</span> sr.Microphone() <span class="keyword">as</span> source:  <span class="comment"># use the default microphone as the audio source</span></span><br><span class="line">        audio = mic.listen(source)  <span class="comment"># listen for the first phrase and extract it into audio data</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> self.isgoogle:</span><br><span class="line">            content = mic.recognize_google(audio)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            content = mic.recognize_sphinx(audio)</span><br><span class="line">    <span class="keyword">except</span> sr.RequestError:</span><br><span class="line">        self.ui.label.setText(<span class="string">"Something was wrong! Try again......"</span>)</span><br><span class="line"></span><br><span class="line">    COMMEND = [<span class="string">"music"</span>, <span class="string">"open"</span>]</span><br><span class="line">    commend_is_music = re.search(COMMEND[<span class="number">0</span>].lower(), content.lower())</span><br><span class="line">    commend_is_file = re.search(COMMEND[<span class="number">1</span>].lower(), content.lower())</span><br><span class="line">    <span class="keyword">if</span> commend_is_music:</span><br><span class="line">        self.ui.label.setText(<span class="string">"you said: \" "</span> + content + <span class="string">"\""</span>)</span><br><span class="line">        win32api.ShellExecute(<span class="number">0</span>, <span class="string">'open'</span>, <span class="string">'D:\\网易云音乐\\CloudMusic\\cloudmusic.exe'</span>, <span class="string">''</span>, <span class="string">''</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">elif</span> commend_is_file:</span><br><span class="line">        self.ui.label.setText(<span class="string">"you said: \""</span> + content + <span class="string">"\""</span>)</span><br><span class="line">        win32api.ShellExecute(<span class="number">0</span>, <span class="string">'open'</span>, <span class="string">'D:\\Notpad++\\Notepad++\\notepad++.exe'</span>, <span class="string">''</span>, <span class="string">''</span>, <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        self.ui.label.setText(<span class="string">"you said: \" "</span> + content + <span class="string">"\"\nIt's not a valid command."</span>)</span><br></pre></td></tr></table></figure><h4 id="②创建监听线程"><a href="#②创建监听线程" class="headerlink" title="②创建监听线程"></a>②创建监听线程</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">listen_thread</span><span class="params">(self)</span>:</span></span><br><span class="line">    self.ui.label.setText(<span class="string">"I'm listening...... "</span>)</span><br><span class="line">    t1 = threading.Thread(target=self.listen)</span><br><span class="line">    t1.setDaemon(<span class="literal">True</span>)</span><br><span class="line">    t1.start()</span><br></pre></td></tr></table></figure><h4 id="③文本处理函数"><a href="#③文本处理函数" class="headerlink" title="③文本处理函数"></a>③文本处理函数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">text_changed</span><span class="params">(self)</span>:</span></span><br><span class="line">    content = self.ui.textbox.text()</span><br><span class="line">    print(content)</span><br><span class="line">    COMMEND = [<span class="string">"music"</span>, <span class="string">"open"</span>]</span><br><span class="line">    commend_is_music = re.search(COMMEND[<span class="number">0</span>].lower(), content.lower())</span><br><span class="line">    commend_is_file = re.search(COMMEND[<span class="number">1</span>].lower(), content.lower())</span><br><span class="line">    <span class="keyword">if</span> commend_is_music:</span><br><span class="line">        self.ui.label.setText(<span class="string">"you typed: \" "</span> + content + <span class="string">"\""</span>)</span><br><span class="line">        win32api.ShellExecute(<span class="number">0</span>, <span class="string">'open'</span>, <span class="string">'D:\\网易云音乐\\CloudMusic\\cloudmusic.exe'</span>, <span class="string">''</span>, <span class="string">''</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">elif</span> commend_is_file:</span><br><span class="line">        self.ui.label.setText(<span class="string">"you typed: \""</span> + content + <span class="string">"\""</span>)</span><br><span class="line">        win32api.ShellExecute(<span class="number">0</span>, <span class="string">'open'</span>, <span class="string">'D:\\Notpad++\\Notepad++\\notepad++.exe'</span>, <span class="string">''</span>, <span class="string">''</span>, <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        self.ui.label.setText(<span class="string">"you typed: \" "</span> + content + <span class="string">"\"\nIt's not a valid command."</span>)</span><br></pre></td></tr></table></figure><h4 id="④创建文本处理线程"><a href="#④创建文本处理线程" class="headerlink" title="④创建文本处理线程"></a>④创建文本处理线程</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">text_thread</span><span class="params">(self)</span>:</span></span><br><span class="line">    t2 = threading.Thread(target=self.text_changed)</span><br><span class="line">    t2.setDaemon(<span class="literal">True</span>)</span><br><span class="line">    t2.start()</span><br></pre></td></tr></table></figure><h4 id="⑤连接各类控件与相应函数"><a href="#⑤连接各类控件与相应函数" class="headerlink" title="⑤连接各类控件与相应函数"></a>⑤连接各类控件与相应函数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">self.ui.recognize_btn.clicked.connect(self.listen_thread)<span class="comment">#语音识别按钮连接监听线程</span></span><br><span class="line">self.ui.sphinx_bar.triggered.connect(self.sphinxbar_recognize)<span class="comment">#sphinx模式触发</span></span><br><span class="line">self.ui.google_bar.triggered.connect(self.googlebar_recognize)<span class="comment">#google模式触发</span></span><br><span class="line">self.ui.text_btn.clicked.connect(self.text_thread)<span class="comment">#文本框输入确认按钮连接文本处理线程</span></span><br></pre></td></tr></table></figure><h1 id="3-测试"><a href="#3-测试" class="headerlink" title="3.测试"></a>3.测试</h1><h2 id="3-1语音输入"><a href="#3-1语音输入" class="headerlink" title="3.1语音输入"></a>3.1语音输入</h2><p>测试用例：hello</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5edr6ctl9j30am0kct97.jpg" alt></p><p>测试用例：music</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5edrdoimmj30am0kc0t8.jpg" alt></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5edrm21qxj30xc0pwwg8.jpg" alt></p><p>测试用例：open readme file</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5edrxodhfj30am0kcgmf.jpg" alt></p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5eds36m45j31hc0swn0k.jpg" alt></p><h2 id="3-2文本输入"><a href="#3-2文本输入" class="headerlink" title="3.2文本输入"></a>3.2文本输入</h2><p>测试用例：hello</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5edsca8nyj30am0kcq3o.jpg" alt></p><p>测试用例：music</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5edsmhcy9j30am0kcq3j.jpg" alt></p><p>测试用例：open readme file</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5edsub02zj30am0kc755.jpg" alt></p><h1 id="4-简单出错处理"><a href="#4-简单出错处理" class="headerlink" title="4.简单出错处理"></a>4.简单出错处理</h1><p>若IP地址在境内时选择了google的API进行识别，则程序会提示错误。</p><p>如图所示</p><p><img src="http://ww1.sinaimg.cn/large/007oltUXgy1g5edt0s3cej30am0kcmxr.jpg" alt></p><h1 id="5-识别准确性分析"><a href="#5-识别准确性分析" class="headerlink" title="5.识别准确性分析"></a>5.识别准确性分析</h1><h2 id="5-1准确性分析"><a href="#5-1准确性分析" class="headerlink" title="5.1准确性分析"></a>5.1准确性分析</h2><p>recognize_sphinx（）可与CMU Sphinx 引擎脱机工作，即无需联网，可实现本地识别，但其准确性较差，经实际使用发现，很多简单命令都需要进行多次尝试才能识别出来。</p><p>经查阅资料知道：PocketSphinx是一个计算量和体积都很小的嵌入式语音识别引擎。在Sphinx-2（Sphinx-2: 采用半连续隐含马尔可夫模型（SCHMM）建模，采用的技术相对落后，使得识别精度要低于其它的译码器。</p><p>）的基础上针对嵌入式系统的需求修改、优化而来，是第一个开源面向嵌入式的中等词汇量连续语音识别项目。识别精度和Sphinx-2差不多。</p><h2 id="5-2进行尝试性的改进"><a href="#5-2进行尝试性的改进" class="headerlink" title="5.2进行尝试性的改进"></a>5.2进行尝试性的改进</h2><p>1）考虑到周围噪音的影响，可尝试采用recognizer.adjust_for_ambient_noise()函数降低周围噪音的影响。</p><p>2）考虑更换API，采用recognize_google（）对声音进行处理，识别准确性得到明显的提升，不足之处是需要联网和境外ip。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-使用说明&quot;&gt;&lt;a href=&quot;#1-使用说明&quot; class=&quot;headerlink&quot; title=&quot;1.使用说明&quot;&gt;&lt;/a&gt;1.使用说明&lt;/h1&gt;&lt;h2 id=&quot;1-1项目简介&quot;&gt;&lt;a href=&quot;#1-1项目简介&quot; class=&quot;headerlink&quot; title=&quot;1.1项目简介&quot;&gt;&lt;/a&gt;1.1项目简介&lt;/h2&gt;&lt;p&gt;参照微软cotana的工作方式，编写自己的一个python语音助手程序，借助PyQt5和Pipy，创建可视化窗口，能实现基本的语音识别功能，同时根据几个特定的关键词执行简单的行动（如music，readme等）。&lt;/p&gt;
    
    </summary>
    
    
      <category term="technology" scheme="https:/LXF-DX3906.github.io/categories/technology/"/>
    
    
      <category term="python" scheme="https:/LXF-DX3906.github.io/tags/python/"/>
    
  </entry>
  
</feed>
